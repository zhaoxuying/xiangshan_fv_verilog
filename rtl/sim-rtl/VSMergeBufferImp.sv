// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module VSMergeBufferImp(
  input          clock,
  input          reset,
  input          io_redirect_valid,
  input          io_redirect_bits_robIdx_flag,
  input  [5:0]   io_redirect_bits_robIdx_value,
  input          io_redirect_bits_level,
  input          io_fromPipeline_0_valid,
  input  [2:0]   io_fromPipeline_0_bits_mBIndex,
  input          io_fromPipeline_0_bits_hit,
  input  [3:0]   io_fromPipeline_0_bits_trigger,
  input          io_fromPipeline_0_bits_exceptionVec_3,
  input          io_fromPipeline_0_bits_exceptionVec_6,
  input          io_fromPipeline_0_bits_exceptionVec_7,
  input          io_fromPipeline_0_bits_exceptionVec_15,
  input          io_fromPipeline_0_bits_exceptionVec_23,
  input          io_fromPipeline_0_bits_hasException,
  input  [63:0]  io_fromPipeline_0_bits_vaddr,
  input          io_fromPipeline_0_bits_vaNeedExt,
  input  [63:0]  io_fromPipeline_0_bits_gpaddr,
  input          io_fromPipeline_0_bits_isForVSnonLeafPTE,
  input  [7:0]   io_fromPipeline_0_bits_vstart,
  input  [7:0]   io_fromPipeline_0_bits_elemIdx,
  input  [15:0]  io_fromPipeline_0_bits_mask,
  output         io_fromSplit_0_req_ready,
  input          io_fromSplit_0_req_valid,
  input  [15:0]  io_fromSplit_0_req_bits_mask,
  input  [49:0]  io_fromSplit_0_req_bits_vaddr,
  input  [4:0]   io_fromSplit_0_req_bits_flowNum,
  input  [8:0]   io_fromSplit_0_req_bits_uop_fuOpType,
  input          io_fromSplit_0_req_bits_uop_vecWen,
  input          io_fromSplit_0_req_bits_uop_v0Wen,
  input          io_fromSplit_0_req_bits_uop_vlWen,
  input          io_fromSplit_0_req_bits_uop_vpu_vma,
  input          io_fromSplit_0_req_bits_uop_vpu_vta,
  input  [1:0]   io_fromSplit_0_req_bits_uop_vpu_vsew,
  input  [2:0]   io_fromSplit_0_req_bits_uop_vpu_vlmul,
  input          io_fromSplit_0_req_bits_uop_vpu_vm,
  input  [6:0]   io_fromSplit_0_req_bits_uop_vpu_vuopIdx,
  input  [127:0] io_fromSplit_0_req_bits_uop_vpu_vmask,
  input  [7:0]   io_fromSplit_0_req_bits_uop_vpu_vl,
  input  [2:0]   io_fromSplit_0_req_bits_uop_vpu_nf,
  input  [1:0]   io_fromSplit_0_req_bits_uop_vpu_veew,
  input  [6:0]   io_fromSplit_0_req_bits_uop_uopIdx,
  input  [7:0]   io_fromSplit_0_req_bits_uop_pdest,
  input          io_fromSplit_0_req_bits_uop_robIdx_flag,
  input  [5:0]   io_fromSplit_0_req_bits_uop_robIdx_value,
  input          io_fromSplit_0_req_bits_uop_lqIdx_flag,
  input  [4:0]   io_fromSplit_0_req_bits_uop_lqIdx_value,
  input          io_fromSplit_0_req_bits_uop_sqIdx_flag,
  input  [4:0]   io_fromSplit_0_req_bits_uop_sqIdx_value,
  input  [7:0]   io_fromSplit_0_req_bits_vlmax,
  output         io_fromSplit_0_resp_valid,
  output [3:0]   io_fromSplit_0_resp_bits_mBIndex,
  input          io_uopWriteback_0_ready,
  output         io_uopWriteback_0_valid,
  output         io_uopWriteback_0_bits_uop_exceptionVec_3,
  output         io_uopWriteback_0_bits_uop_exceptionVec_6,
  output         io_uopWriteback_0_bits_uop_exceptionVec_7,
  output         io_uopWriteback_0_bits_uop_exceptionVec_15,
  output         io_uopWriteback_0_bits_uop_exceptionVec_23,
  output [3:0]   io_uopWriteback_0_bits_uop_trigger,
  output [8:0]   io_uopWriteback_0_bits_uop_fuOpType,
  output         io_uopWriteback_0_bits_uop_vecWen,
  output         io_uopWriteback_0_bits_uop_v0Wen,
  output         io_uopWriteback_0_bits_uop_vlWen,
  output         io_uopWriteback_0_bits_uop_flushPipe,
  output         io_uopWriteback_0_bits_uop_vpu_vma,
  output         io_uopWriteback_0_bits_uop_vpu_vta,
  output [1:0]   io_uopWriteback_0_bits_uop_vpu_vsew,
  output [2:0]   io_uopWriteback_0_bits_uop_vpu_vlmul,
  output         io_uopWriteback_0_bits_uop_vpu_vm,
  output [7:0]   io_uopWriteback_0_bits_uop_vpu_vstart,
  output [6:0]   io_uopWriteback_0_bits_uop_vpu_vuopIdx,
  output [127:0] io_uopWriteback_0_bits_uop_vpu_vmask,
  output [7:0]   io_uopWriteback_0_bits_uop_vpu_vl,
  output [2:0]   io_uopWriteback_0_bits_uop_vpu_nf,
  output [1:0]   io_uopWriteback_0_bits_uop_vpu_veew,
  output [7:0]   io_uopWriteback_0_bits_uop_pdest,
  output         io_uopWriteback_0_bits_uop_robIdx_flag,
  output [5:0]   io_uopWriteback_0_bits_uop_robIdx_value,
  output         io_uopWriteback_0_bits_uop_replayInst,
  output [127:0] io_uopWriteback_0_bits_data,
  output [2:0]   io_uopWriteback_0_bits_vdIdx,
  output [2:0]   io_uopWriteback_0_bits_vdIdxInField,
  output         io_toLsq_0_valid,
  output         io_toLsq_0_bits_robidx_flag,
  output [5:0]   io_toLsq_0_bits_robidx_value,
  output [6:0]   io_toLsq_0_bits_uopidx,
  output [63:0]  io_toLsq_0_bits_vaddr,
  output         io_toLsq_0_bits_vaNeedExt,
  output [49:0]  io_toLsq_0_bits_gpaddr,
  output         io_toLsq_0_bits_isForVSnonLeafPTE,
  output         io_toLsq_0_bits_feedback_0,
  output         io_toLsq_0_bits_feedback_1,
  output         io_toLsq_0_bits_exceptionVec_3,
  output         io_toLsq_0_bits_exceptionVec_6,
  output         io_toLsq_0_bits_exceptionVec_7,
  output         io_toLsq_0_bits_exceptionVec_15,
  output         io_toLsq_0_bits_exceptionVec_23,
  output         io_feedback_0_valid,
  output         io_feedback_0_bits_hit,
  output         io_feedback_0_bits_sqIdx_flag,
  output [4:0]   io_feedback_0_bits_sqIdx_value,
  output         io_feedback_0_bits_lqIdx_flag,
  output [4:0]   io_feedback_0_bits_lqIdx_value,
  input  [2:0]   io_fromMisalignBuffer_mbIndex,
  input          io_fromMisalignBuffer_flush
);

  wire              freeMaskVec_7;
  wire              freeMaskVec_6;
  wire              freeMaskVec_5;
  wire              freeMaskVec_4;
  wire              freeMaskVec_3;
  wire              freeMaskVec_2;
  wire              freeMaskVec_1;
  wire              freeMaskVec_0;
  wire              _VMergebufferPipelineConnect0_io_in_ready;
  wire              _VMergebufferPipelineConnect0_io_out_valid;
  wire              _VMergebufferPipelineConnect0_io_out_bits_uop_robIdx_flag;
  wire [5:0]        _VMergebufferPipelineConnect0_io_out_bits_uop_robIdx_value;
  wire [2:0]        _freeCount_freeList_io_allocateSlot_0;
  wire [3:0]        _freeCount_freeList_io_validCount;
  reg  [15:0]       entries_0_mask;
  reg  [4:0]        entries_0_flowNum;
  reg               entries_0_exceptionVec_3;
  reg               entries_0_exceptionVec_6;
  reg               entries_0_exceptionVec_7;
  reg               entries_0_exceptionVec_15;
  reg               entries_0_exceptionVec_23;
  reg  [3:0]        entries_0_uop_trigger;
  reg  [8:0]        entries_0_uop_fuOpType;
  reg               entries_0_uop_vecWen;
  reg               entries_0_uop_v0Wen;
  reg               entries_0_uop_vlWen;
  reg               entries_0_uop_flushPipe;
  reg               entries_0_uop_vpu_vma;
  reg               entries_0_uop_vpu_vta;
  reg  [1:0]        entries_0_uop_vpu_vsew;
  reg  [2:0]        entries_0_uop_vpu_vlmul;
  reg               entries_0_uop_vpu_vm;
  reg  [6:0]        entries_0_uop_vpu_vuopIdx;
  reg  [127:0]      entries_0_uop_vpu_vmask;
  reg  [7:0]        entries_0_uop_vpu_vl;
  reg  [2:0]        entries_0_uop_vpu_nf;
  reg  [1:0]        entries_0_uop_vpu_veew;
  reg  [6:0]        entries_0_uop_uopIdx;
  reg  [7:0]        entries_0_uop_pdest;
  reg               entries_0_uop_robIdx_flag;
  reg  [5:0]        entries_0_uop_robIdx_value;
  reg               entries_0_uop_lqIdx_flag;
  reg  [4:0]        entries_0_uop_lqIdx_value;
  reg               entries_0_uop_sqIdx_flag;
  reg  [4:0]        entries_0_uop_sqIdx_value;
  reg               entries_0_uop_replayInst;
  reg  [7:0]        entries_0_elemIdx;
  reg  [7:0]        entries_0_vstart;
  reg               entries_0_vaNeedExt;
  reg  [63:0]       entries_0_vaddr;
  reg  [49:0]       entries_0_gpaddr;
  reg               entries_0_isForVSnonLeafPTE;
  reg  [7:0]        entries_0_vlmax;
  reg  [15:0]       entries_1_mask;
  reg  [4:0]        entries_1_flowNum;
  reg               entries_1_exceptionVec_3;
  reg               entries_1_exceptionVec_6;
  reg               entries_1_exceptionVec_7;
  reg               entries_1_exceptionVec_15;
  reg               entries_1_exceptionVec_23;
  reg  [3:0]        entries_1_uop_trigger;
  reg  [8:0]        entries_1_uop_fuOpType;
  reg               entries_1_uop_vecWen;
  reg               entries_1_uop_v0Wen;
  reg               entries_1_uop_vlWen;
  reg               entries_1_uop_flushPipe;
  reg               entries_1_uop_vpu_vma;
  reg               entries_1_uop_vpu_vta;
  reg  [1:0]        entries_1_uop_vpu_vsew;
  reg  [2:0]        entries_1_uop_vpu_vlmul;
  reg               entries_1_uop_vpu_vm;
  reg  [6:0]        entries_1_uop_vpu_vuopIdx;
  reg  [127:0]      entries_1_uop_vpu_vmask;
  reg  [7:0]        entries_1_uop_vpu_vl;
  reg  [2:0]        entries_1_uop_vpu_nf;
  reg  [1:0]        entries_1_uop_vpu_veew;
  reg  [6:0]        entries_1_uop_uopIdx;
  reg  [7:0]        entries_1_uop_pdest;
  reg               entries_1_uop_robIdx_flag;
  reg  [5:0]        entries_1_uop_robIdx_value;
  reg               entries_1_uop_lqIdx_flag;
  reg  [4:0]        entries_1_uop_lqIdx_value;
  reg               entries_1_uop_sqIdx_flag;
  reg  [4:0]        entries_1_uop_sqIdx_value;
  reg               entries_1_uop_replayInst;
  reg  [7:0]        entries_1_elemIdx;
  reg  [7:0]        entries_1_vstart;
  reg               entries_1_vaNeedExt;
  reg  [63:0]       entries_1_vaddr;
  reg  [49:0]       entries_1_gpaddr;
  reg               entries_1_isForVSnonLeafPTE;
  reg  [7:0]        entries_1_vlmax;
  reg  [15:0]       entries_2_mask;
  reg  [4:0]        entries_2_flowNum;
  reg               entries_2_exceptionVec_3;
  reg               entries_2_exceptionVec_6;
  reg               entries_2_exceptionVec_7;
  reg               entries_2_exceptionVec_15;
  reg               entries_2_exceptionVec_23;
  reg  [3:0]        entries_2_uop_trigger;
  reg  [8:0]        entries_2_uop_fuOpType;
  reg               entries_2_uop_vecWen;
  reg               entries_2_uop_v0Wen;
  reg               entries_2_uop_vlWen;
  reg               entries_2_uop_flushPipe;
  reg               entries_2_uop_vpu_vma;
  reg               entries_2_uop_vpu_vta;
  reg  [1:0]        entries_2_uop_vpu_vsew;
  reg  [2:0]        entries_2_uop_vpu_vlmul;
  reg               entries_2_uop_vpu_vm;
  reg  [6:0]        entries_2_uop_vpu_vuopIdx;
  reg  [127:0]      entries_2_uop_vpu_vmask;
  reg  [7:0]        entries_2_uop_vpu_vl;
  reg  [2:0]        entries_2_uop_vpu_nf;
  reg  [1:0]        entries_2_uop_vpu_veew;
  reg  [6:0]        entries_2_uop_uopIdx;
  reg  [7:0]        entries_2_uop_pdest;
  reg               entries_2_uop_robIdx_flag;
  reg  [5:0]        entries_2_uop_robIdx_value;
  reg               entries_2_uop_lqIdx_flag;
  reg  [4:0]        entries_2_uop_lqIdx_value;
  reg               entries_2_uop_sqIdx_flag;
  reg  [4:0]        entries_2_uop_sqIdx_value;
  reg               entries_2_uop_replayInst;
  reg  [7:0]        entries_2_elemIdx;
  reg  [7:0]        entries_2_vstart;
  reg               entries_2_vaNeedExt;
  reg  [63:0]       entries_2_vaddr;
  reg  [49:0]       entries_2_gpaddr;
  reg               entries_2_isForVSnonLeafPTE;
  reg  [7:0]        entries_2_vlmax;
  reg  [15:0]       entries_3_mask;
  reg  [4:0]        entries_3_flowNum;
  reg               entries_3_exceptionVec_3;
  reg               entries_3_exceptionVec_6;
  reg               entries_3_exceptionVec_7;
  reg               entries_3_exceptionVec_15;
  reg               entries_3_exceptionVec_23;
  reg  [3:0]        entries_3_uop_trigger;
  reg  [8:0]        entries_3_uop_fuOpType;
  reg               entries_3_uop_vecWen;
  reg               entries_3_uop_v0Wen;
  reg               entries_3_uop_vlWen;
  reg               entries_3_uop_flushPipe;
  reg               entries_3_uop_vpu_vma;
  reg               entries_3_uop_vpu_vta;
  reg  [1:0]        entries_3_uop_vpu_vsew;
  reg  [2:0]        entries_3_uop_vpu_vlmul;
  reg               entries_3_uop_vpu_vm;
  reg  [6:0]        entries_3_uop_vpu_vuopIdx;
  reg  [127:0]      entries_3_uop_vpu_vmask;
  reg  [7:0]        entries_3_uop_vpu_vl;
  reg  [2:0]        entries_3_uop_vpu_nf;
  reg  [1:0]        entries_3_uop_vpu_veew;
  reg  [6:0]        entries_3_uop_uopIdx;
  reg  [7:0]        entries_3_uop_pdest;
  reg               entries_3_uop_robIdx_flag;
  reg  [5:0]        entries_3_uop_robIdx_value;
  reg               entries_3_uop_lqIdx_flag;
  reg  [4:0]        entries_3_uop_lqIdx_value;
  reg               entries_3_uop_sqIdx_flag;
  reg  [4:0]        entries_3_uop_sqIdx_value;
  reg               entries_3_uop_replayInst;
  reg  [7:0]        entries_3_elemIdx;
  reg  [7:0]        entries_3_vstart;
  reg               entries_3_vaNeedExt;
  reg  [63:0]       entries_3_vaddr;
  reg  [49:0]       entries_3_gpaddr;
  reg               entries_3_isForVSnonLeafPTE;
  reg  [7:0]        entries_3_vlmax;
  reg  [15:0]       entries_4_mask;
  reg  [4:0]        entries_4_flowNum;
  reg               entries_4_exceptionVec_3;
  reg               entries_4_exceptionVec_6;
  reg               entries_4_exceptionVec_7;
  reg               entries_4_exceptionVec_15;
  reg               entries_4_exceptionVec_23;
  reg  [3:0]        entries_4_uop_trigger;
  reg  [8:0]        entries_4_uop_fuOpType;
  reg               entries_4_uop_vecWen;
  reg               entries_4_uop_v0Wen;
  reg               entries_4_uop_vlWen;
  reg               entries_4_uop_flushPipe;
  reg               entries_4_uop_vpu_vma;
  reg               entries_4_uop_vpu_vta;
  reg  [1:0]        entries_4_uop_vpu_vsew;
  reg  [2:0]        entries_4_uop_vpu_vlmul;
  reg               entries_4_uop_vpu_vm;
  reg  [6:0]        entries_4_uop_vpu_vuopIdx;
  reg  [127:0]      entries_4_uop_vpu_vmask;
  reg  [7:0]        entries_4_uop_vpu_vl;
  reg  [2:0]        entries_4_uop_vpu_nf;
  reg  [1:0]        entries_4_uop_vpu_veew;
  reg  [6:0]        entries_4_uop_uopIdx;
  reg  [7:0]        entries_4_uop_pdest;
  reg               entries_4_uop_robIdx_flag;
  reg  [5:0]        entries_4_uop_robIdx_value;
  reg               entries_4_uop_lqIdx_flag;
  reg  [4:0]        entries_4_uop_lqIdx_value;
  reg               entries_4_uop_sqIdx_flag;
  reg  [4:0]        entries_4_uop_sqIdx_value;
  reg               entries_4_uop_replayInst;
  reg  [7:0]        entries_4_elemIdx;
  reg  [7:0]        entries_4_vstart;
  reg               entries_4_vaNeedExt;
  reg  [63:0]       entries_4_vaddr;
  reg  [49:0]       entries_4_gpaddr;
  reg               entries_4_isForVSnonLeafPTE;
  reg  [7:0]        entries_4_vlmax;
  reg  [15:0]       entries_5_mask;
  reg  [4:0]        entries_5_flowNum;
  reg               entries_5_exceptionVec_3;
  reg               entries_5_exceptionVec_6;
  reg               entries_5_exceptionVec_7;
  reg               entries_5_exceptionVec_15;
  reg               entries_5_exceptionVec_23;
  reg  [3:0]        entries_5_uop_trigger;
  reg  [8:0]        entries_5_uop_fuOpType;
  reg               entries_5_uop_vecWen;
  reg               entries_5_uop_v0Wen;
  reg               entries_5_uop_vlWen;
  reg               entries_5_uop_flushPipe;
  reg               entries_5_uop_vpu_vma;
  reg               entries_5_uop_vpu_vta;
  reg  [1:0]        entries_5_uop_vpu_vsew;
  reg  [2:0]        entries_5_uop_vpu_vlmul;
  reg               entries_5_uop_vpu_vm;
  reg  [6:0]        entries_5_uop_vpu_vuopIdx;
  reg  [127:0]      entries_5_uop_vpu_vmask;
  reg  [7:0]        entries_5_uop_vpu_vl;
  reg  [2:0]        entries_5_uop_vpu_nf;
  reg  [1:0]        entries_5_uop_vpu_veew;
  reg  [6:0]        entries_5_uop_uopIdx;
  reg  [7:0]        entries_5_uop_pdest;
  reg               entries_5_uop_robIdx_flag;
  reg  [5:0]        entries_5_uop_robIdx_value;
  reg               entries_5_uop_lqIdx_flag;
  reg  [4:0]        entries_5_uop_lqIdx_value;
  reg               entries_5_uop_sqIdx_flag;
  reg  [4:0]        entries_5_uop_sqIdx_value;
  reg               entries_5_uop_replayInst;
  reg  [7:0]        entries_5_elemIdx;
  reg  [7:0]        entries_5_vstart;
  reg               entries_5_vaNeedExt;
  reg  [63:0]       entries_5_vaddr;
  reg  [49:0]       entries_5_gpaddr;
  reg               entries_5_isForVSnonLeafPTE;
  reg  [7:0]        entries_5_vlmax;
  reg  [15:0]       entries_6_mask;
  reg  [4:0]        entries_6_flowNum;
  reg               entries_6_exceptionVec_3;
  reg               entries_6_exceptionVec_6;
  reg               entries_6_exceptionVec_7;
  reg               entries_6_exceptionVec_15;
  reg               entries_6_exceptionVec_23;
  reg  [3:0]        entries_6_uop_trigger;
  reg  [8:0]        entries_6_uop_fuOpType;
  reg               entries_6_uop_vecWen;
  reg               entries_6_uop_v0Wen;
  reg               entries_6_uop_vlWen;
  reg               entries_6_uop_flushPipe;
  reg               entries_6_uop_vpu_vma;
  reg               entries_6_uop_vpu_vta;
  reg  [1:0]        entries_6_uop_vpu_vsew;
  reg  [2:0]        entries_6_uop_vpu_vlmul;
  reg               entries_6_uop_vpu_vm;
  reg  [6:0]        entries_6_uop_vpu_vuopIdx;
  reg  [127:0]      entries_6_uop_vpu_vmask;
  reg  [7:0]        entries_6_uop_vpu_vl;
  reg  [2:0]        entries_6_uop_vpu_nf;
  reg  [1:0]        entries_6_uop_vpu_veew;
  reg  [6:0]        entries_6_uop_uopIdx;
  reg  [7:0]        entries_6_uop_pdest;
  reg               entries_6_uop_robIdx_flag;
  reg  [5:0]        entries_6_uop_robIdx_value;
  reg               entries_6_uop_lqIdx_flag;
  reg  [4:0]        entries_6_uop_lqIdx_value;
  reg               entries_6_uop_sqIdx_flag;
  reg  [4:0]        entries_6_uop_sqIdx_value;
  reg               entries_6_uop_replayInst;
  reg  [7:0]        entries_6_elemIdx;
  reg  [7:0]        entries_6_vstart;
  reg               entries_6_vaNeedExt;
  reg  [63:0]       entries_6_vaddr;
  reg  [49:0]       entries_6_gpaddr;
  reg               entries_6_isForVSnonLeafPTE;
  reg  [7:0]        entries_6_vlmax;
  reg  [15:0]       entries_7_mask;
  reg  [4:0]        entries_7_flowNum;
  reg               entries_7_exceptionVec_3;
  reg               entries_7_exceptionVec_6;
  reg               entries_7_exceptionVec_7;
  reg               entries_7_exceptionVec_15;
  reg               entries_7_exceptionVec_23;
  reg  [3:0]        entries_7_uop_trigger;
  reg  [8:0]        entries_7_uop_fuOpType;
  reg               entries_7_uop_vecWen;
  reg               entries_7_uop_v0Wen;
  reg               entries_7_uop_vlWen;
  reg               entries_7_uop_flushPipe;
  reg               entries_7_uop_vpu_vma;
  reg               entries_7_uop_vpu_vta;
  reg  [1:0]        entries_7_uop_vpu_vsew;
  reg  [2:0]        entries_7_uop_vpu_vlmul;
  reg               entries_7_uop_vpu_vm;
  reg  [6:0]        entries_7_uop_vpu_vuopIdx;
  reg  [127:0]      entries_7_uop_vpu_vmask;
  reg  [7:0]        entries_7_uop_vpu_vl;
  reg  [2:0]        entries_7_uop_vpu_nf;
  reg  [1:0]        entries_7_uop_vpu_veew;
  reg  [6:0]        entries_7_uop_uopIdx;
  reg  [7:0]        entries_7_uop_pdest;
  reg               entries_7_uop_robIdx_flag;
  reg  [5:0]        entries_7_uop_robIdx_value;
  reg               entries_7_uop_lqIdx_flag;
  reg  [4:0]        entries_7_uop_lqIdx_value;
  reg               entries_7_uop_sqIdx_flag;
  reg  [4:0]        entries_7_uop_sqIdx_value;
  reg               entries_7_uop_replayInst;
  reg  [7:0]        entries_7_elemIdx;
  reg  [7:0]        entries_7_vstart;
  reg               entries_7_vaNeedExt;
  reg  [63:0]       entries_7_vaddr;
  reg  [49:0]       entries_7_gpaddr;
  reg               entries_7_isForVSnonLeafPTE;
  reg  [7:0]        entries_7_vlmax;
  reg               allocated_0;
  reg               allocated_1;
  reg               allocated_2;
  reg               allocated_3;
  reg               allocated_4;
  reg               allocated_5;
  reg               allocated_6;
  reg               allocated_7;
  reg               uopFinish_0;
  reg               uopFinish_1;
  reg               uopFinish_2;
  reg               uopFinish_3;
  reg               uopFinish_4;
  reg               uopFinish_5;
  reg               uopFinish_6;
  reg               uopFinish_7;
  reg               needRSReplay_0;
  reg               needRSReplay_1;
  reg               needRSReplay_2;
  reg               needRSReplay_3;
  reg               needRSReplay_4;
  reg               needRSReplay_5;
  reg               needRSReplay_6;
  reg               needRSReplay_7;
  wire [6:0]        _flushItself_T_6 =
    {io_redirect_bits_robIdx_flag, io_redirect_bits_robIdx_value};
  wire [3:0]        _freeCount_T = 4'(4'h8 - _freeCount_freeList_io_validCount);
  wire              _GEN =
    io_fromSplit_0_req_valid
    & ~(io_redirect_valid
        & (io_redirect_bits_level
           & {io_fromSplit_0_req_bits_uop_robIdx_flag,
              io_fromSplit_0_req_bits_uop_robIdx_value} == _flushItself_T_6
           | io_fromSplit_0_req_bits_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
           ^ io_fromSplit_0_req_bits_uop_robIdx_value > io_redirect_bits_robIdx_value))
    & (|_freeCount_T);
  wire              _GEN_0 = _GEN & _freeCount_freeList_io_allocateSlot_0 == 3'h0;
  wire              _GEN_1 = _GEN & _freeCount_freeList_io_allocateSlot_0 == 3'h1;
  wire              _GEN_2 = _GEN & _freeCount_freeList_io_allocateSlot_0 == 3'h2;
  wire              _GEN_3 = _GEN & _freeCount_freeList_io_allocateSlot_0 == 3'h3;
  wire              _GEN_4 = _GEN & _freeCount_freeList_io_allocateSlot_0 == 3'h4;
  wire              _GEN_5 = _GEN & _freeCount_freeList_io_allocateSlot_0 == 3'h5;
  wire              _GEN_6 = _GEN & _freeCount_freeList_io_allocateSlot_0 == 3'h6;
  wire              _GEN_7 = _GEN & (&_freeCount_freeList_io_allocateSlot_0);
  wire              needCancel_0 =
    io_redirect_valid
    & (io_redirect_bits_level
       & {entries_0_uop_robIdx_flag, entries_0_uop_robIdx_value} == _flushItself_T_6
       | entries_0_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ entries_0_uop_robIdx_value > io_redirect_bits_robIdx_value) & allocated_0;
  wire              needCancel_1 =
    io_redirect_valid
    & (io_redirect_bits_level
       & {entries_1_uop_robIdx_flag, entries_1_uop_robIdx_value} == _flushItself_T_6
       | entries_1_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ entries_1_uop_robIdx_value > io_redirect_bits_robIdx_value) & allocated_1;
  wire              needCancel_2 =
    io_redirect_valid
    & (io_redirect_bits_level
       & {entries_2_uop_robIdx_flag, entries_2_uop_robIdx_value} == _flushItself_T_6
       | entries_2_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ entries_2_uop_robIdx_value > io_redirect_bits_robIdx_value) & allocated_2;
  wire              needCancel_3 =
    io_redirect_valid
    & (io_redirect_bits_level
       & {entries_3_uop_robIdx_flag, entries_3_uop_robIdx_value} == _flushItself_T_6
       | entries_3_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ entries_3_uop_robIdx_value > io_redirect_bits_robIdx_value) & allocated_3;
  wire              needCancel_4 =
    io_redirect_valid
    & (io_redirect_bits_level
       & {entries_4_uop_robIdx_flag, entries_4_uop_robIdx_value} == _flushItself_T_6
       | entries_4_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ entries_4_uop_robIdx_value > io_redirect_bits_robIdx_value) & allocated_4;
  wire              needCancel_5 =
    io_redirect_valid
    & (io_redirect_bits_level
       & {entries_5_uop_robIdx_flag, entries_5_uop_robIdx_value} == _flushItself_T_6
       | entries_5_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ entries_5_uop_robIdx_value > io_redirect_bits_robIdx_value) & allocated_5;
  wire              needCancel_6 =
    io_redirect_valid
    & (io_redirect_bits_level
       & {entries_6_uop_robIdx_flag, entries_6_uop_robIdx_value} == _flushItself_T_6
       | entries_6_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ entries_6_uop_robIdx_value > io_redirect_bits_robIdx_value) & allocated_6;
  wire              needCancel_7 =
    io_redirect_valid
    & (io_redirect_bits_level
       & {entries_7_uop_robIdx_flag, entries_7_uop_robIdx_value} == _flushItself_T_6
       | entries_7_uop_robIdx_flag ^ io_redirect_bits_robIdx_flag
       ^ entries_7_uop_robIdx_value > io_redirect_bits_robIdx_value) & allocated_7;
  wire [7:0]        _GEN_8 =
    {{entries_7_exceptionVec_3},
     {entries_6_exceptionVec_3},
     {entries_5_exceptionVec_3},
     {entries_4_exceptionVec_3},
     {entries_3_exceptionVec_3},
     {entries_2_exceptionVec_3},
     {entries_1_exceptionVec_3},
     {entries_0_exceptionVec_3}};
  wire [7:0]        _GEN_9 =
    {{entries_7_exceptionVec_6},
     {entries_6_exceptionVec_6},
     {entries_5_exceptionVec_6},
     {entries_4_exceptionVec_6},
     {entries_3_exceptionVec_6},
     {entries_2_exceptionVec_6},
     {entries_1_exceptionVec_6},
     {entries_0_exceptionVec_6}};
  wire [7:0]        _GEN_10 =
    {{entries_7_exceptionVec_7},
     {entries_6_exceptionVec_7},
     {entries_5_exceptionVec_7},
     {entries_4_exceptionVec_7},
     {entries_3_exceptionVec_7},
     {entries_2_exceptionVec_7},
     {entries_1_exceptionVec_7},
     {entries_0_exceptionVec_7}};
  wire [7:0]        _GEN_11 =
    {{entries_7_exceptionVec_15},
     {entries_6_exceptionVec_15},
     {entries_5_exceptionVec_15},
     {entries_4_exceptionVec_15},
     {entries_3_exceptionVec_15},
     {entries_2_exceptionVec_15},
     {entries_1_exceptionVec_15},
     {entries_0_exceptionVec_15}};
  wire [7:0]        _GEN_12 =
    {{entries_7_exceptionVec_23},
     {entries_6_exceptionVec_23},
     {entries_5_exceptionVec_23},
     {entries_4_exceptionVec_23},
     {entries_3_exceptionVec_23},
     {entries_2_exceptionVec_23},
     {entries_1_exceptionVec_23},
     {entries_0_exceptionVec_23}};
  wire [7:0][8:0]   _GEN_13 =
    {{entries_7_uop_fuOpType},
     {entries_6_uop_fuOpType},
     {entries_5_uop_fuOpType},
     {entries_4_uop_fuOpType},
     {entries_3_uop_fuOpType},
     {entries_2_uop_fuOpType},
     {entries_1_uop_fuOpType},
     {entries_0_uop_fuOpType}};
  wire              _GEN_14 = io_fromPipeline_0_bits_mBIndex == 3'h0;
  wire              _GEN_15 = io_fromPipeline_0_bits_mBIndex == 3'h1;
  wire              _GEN_16 = io_fromPipeline_0_bits_mBIndex == 3'h2;
  wire              _GEN_17 = io_fromPipeline_0_bits_mBIndex == 3'h3;
  wire              _GEN_18 = io_fromPipeline_0_bits_mBIndex == 3'h4;
  wire              _GEN_19 = io_fromPipeline_0_bits_mBIndex == 3'h5;
  wire              _GEN_20 = io_fromPipeline_0_bits_mBIndex == 3'h6;
  wire              selOHVec_5 =
    uopFinish_5
    & {uopFinish_0, uopFinish_1, uopFinish_2, uopFinish_3, uopFinish_4} == 5'h0;
  wire              selOHVec_6 =
    uopFinish_6
    & {uopFinish_0,
       uopFinish_1,
       uopFinish_2,
       uopFinish_3,
       uopFinish_4,
       uopFinish_5} == 6'h0;
  wire              selOHVec_7 =
    uopFinish_7
    & {uopFinish_0,
       uopFinish_1,
       uopFinish_2,
       uopFinish_3,
       uopFinish_4,
       uopFinish_5,
       uopFinish_6} == 7'h0;
  wire [2:0]        _entryIdx_T_2 =
    {selOHVec_7, selOHVec_6, selOHVec_5}
    | {uopFinish_3 & {uopFinish_0, uopFinish_1, uopFinish_2} == 3'h0,
       uopFinish_2 & {uopFinish_0, uopFinish_1} == 2'h0,
       uopFinish_1 & ~uopFinish_0};
  wire [2:0]        entryIdx =
    {|{selOHVec_7,
       selOHVec_6,
       selOHVec_5,
       uopFinish_4 & {uopFinish_0, uopFinish_1, uopFinish_2, uopFinish_3} == 4'h0},
     |(_entryIdx_T_2[2:1]),
     _entryIdx_T_2[2] | _entryIdx_T_2[0]};
  wire              selFire =
    (|{uopFinish_7,
       uopFinish_6,
       uopFinish_5,
       uopFinish_4,
       uopFinish_3,
       uopFinish_2,
       uopFinish_1,
       uopFinish_0}) & _VMergebufferPipelineConnect0_io_in_ready;
  wire [7:0]        _GEN_21 =
    {{allocated_7},
     {allocated_6},
     {allocated_5},
     {allocated_4},
     {allocated_3},
     {allocated_2},
     {allocated_1},
     {allocated_0}};
  wire              _GEN_22 = entryIdx == 3'h0;
  wire              _GEN_23 = selFire & _GEN_22;
  assign freeMaskVec_0 = _GEN_23 ? _GEN_21[entryIdx] : needCancel_0;
  wire              _GEN_24 = entryIdx == 3'h1;
  wire              _GEN_25 = selFire & _GEN_24;
  assign freeMaskVec_1 = _GEN_25 ? _GEN_21[entryIdx] : needCancel_1;
  wire              _GEN_26 = entryIdx == 3'h2;
  wire              _GEN_27 = selFire & _GEN_26;
  assign freeMaskVec_2 = _GEN_27 ? _GEN_21[entryIdx] : needCancel_2;
  wire              _GEN_28 = entryIdx == 3'h3;
  wire              _GEN_29 = selFire & _GEN_28;
  assign freeMaskVec_3 = _GEN_29 ? _GEN_21[entryIdx] : needCancel_3;
  wire              _GEN_30 = entryIdx == 3'h4;
  wire              _GEN_31 = selFire & _GEN_30;
  assign freeMaskVec_4 = _GEN_31 ? _GEN_21[entryIdx] : needCancel_4;
  wire              _GEN_32 = entryIdx == 3'h5;
  wire              _GEN_33 = selFire & _GEN_32;
  assign freeMaskVec_5 = _GEN_33 ? _GEN_21[entryIdx] : needCancel_5;
  wire              _GEN_34 = entryIdx == 3'h6;
  wire              _GEN_35 = selFire & _GEN_34;
  assign freeMaskVec_6 = _GEN_35 ? _GEN_21[entryIdx] : needCancel_6;
  wire              _GEN_36 = selFire & (&entryIdx);
  assign freeMaskVec_7 = _GEN_36 ? _GEN_21[entryIdx] : needCancel_7;
  wire              feedbackValid = selFire & _GEN_21[entryIdx];
  wire [7:0]        _GEN_37 =
    {{needRSReplay_7},
     {needRSReplay_6},
     {needRSReplay_5},
     {needRSReplay_4},
     {needRSReplay_3},
     {needRSReplay_2},
     {needRSReplay_1},
     {needRSReplay_0}};
  wire [7:0][3:0]   _GEN_38 =
    {{entries_7_uop_trigger},
     {entries_6_uop_trigger},
     {entries_5_uop_trigger},
     {entries_4_uop_trigger},
     {entries_3_uop_trigger},
     {entries_2_uop_trigger},
     {entries_1_uop_trigger},
     {entries_0_uop_trigger}};
  wire [7:0]        _GEN_39 =
    {{entries_7_uop_vecWen},
     {entries_6_uop_vecWen},
     {entries_5_uop_vecWen},
     {entries_4_uop_vecWen},
     {entries_3_uop_vecWen},
     {entries_2_uop_vecWen},
     {entries_1_uop_vecWen},
     {entries_0_uop_vecWen}};
  wire [7:0]        _GEN_40 =
    {{entries_7_uop_v0Wen},
     {entries_6_uop_v0Wen},
     {entries_5_uop_v0Wen},
     {entries_4_uop_v0Wen},
     {entries_3_uop_v0Wen},
     {entries_2_uop_v0Wen},
     {entries_1_uop_v0Wen},
     {entries_0_uop_v0Wen}};
  wire [7:0]        _GEN_41 =
    {{entries_7_uop_vlWen},
     {entries_6_uop_vlWen},
     {entries_5_uop_vlWen},
     {entries_4_uop_vlWen},
     {entries_3_uop_vlWen},
     {entries_2_uop_vlWen},
     {entries_1_uop_vlWen},
     {entries_0_uop_vlWen}};
  wire [7:0]        _GEN_42 =
    {{entries_7_uop_flushPipe},
     {entries_6_uop_flushPipe},
     {entries_5_uop_flushPipe},
     {entries_4_uop_flushPipe},
     {entries_3_uop_flushPipe},
     {entries_2_uop_flushPipe},
     {entries_1_uop_flushPipe},
     {entries_0_uop_flushPipe}};
  wire [7:0]        _GEN_43 =
    {{entries_7_uop_vpu_vma},
     {entries_6_uop_vpu_vma},
     {entries_5_uop_vpu_vma},
     {entries_4_uop_vpu_vma},
     {entries_3_uop_vpu_vma},
     {entries_2_uop_vpu_vma},
     {entries_1_uop_vpu_vma},
     {entries_0_uop_vpu_vma}};
  wire [7:0]        _GEN_44 =
    {{entries_7_uop_vpu_vta},
     {entries_6_uop_vpu_vta},
     {entries_5_uop_vpu_vta},
     {entries_4_uop_vpu_vta},
     {entries_3_uop_vpu_vta},
     {entries_2_uop_vpu_vta},
     {entries_1_uop_vpu_vta},
     {entries_0_uop_vpu_vta}};
  wire [7:0][1:0]   _GEN_45 =
    {{entries_7_uop_vpu_vsew},
     {entries_6_uop_vpu_vsew},
     {entries_5_uop_vpu_vsew},
     {entries_4_uop_vpu_vsew},
     {entries_3_uop_vpu_vsew},
     {entries_2_uop_vpu_vsew},
     {entries_1_uop_vpu_vsew},
     {entries_0_uop_vpu_vsew}};
  wire [7:0][2:0]   _GEN_46 =
    {{entries_7_uop_vpu_vlmul},
     {entries_6_uop_vpu_vlmul},
     {entries_5_uop_vpu_vlmul},
     {entries_4_uop_vpu_vlmul},
     {entries_3_uop_vpu_vlmul},
     {entries_2_uop_vpu_vlmul},
     {entries_1_uop_vpu_vlmul},
     {entries_0_uop_vpu_vlmul}};
  wire [7:0]        _GEN_47 =
    {{entries_7_uop_vpu_vm},
     {entries_6_uop_vpu_vm},
     {entries_5_uop_vpu_vm},
     {entries_4_uop_vpu_vm},
     {entries_3_uop_vpu_vm},
     {entries_2_uop_vpu_vm},
     {entries_1_uop_vpu_vm},
     {entries_0_uop_vpu_vm}};
  wire [7:0][6:0]   _GEN_48 =
    {{entries_7_uop_vpu_vuopIdx},
     {entries_6_uop_vpu_vuopIdx},
     {entries_5_uop_vpu_vuopIdx},
     {entries_4_uop_vpu_vuopIdx},
     {entries_3_uop_vpu_vuopIdx},
     {entries_2_uop_vpu_vuopIdx},
     {entries_1_uop_vpu_vuopIdx},
     {entries_0_uop_vpu_vuopIdx}};
  wire [7:0][127:0] _GEN_49 =
    {{entries_7_uop_vpu_vmask},
     {entries_6_uop_vpu_vmask},
     {entries_5_uop_vpu_vmask},
     {entries_4_uop_vpu_vmask},
     {entries_3_uop_vpu_vmask},
     {entries_2_uop_vpu_vmask},
     {entries_1_uop_vpu_vmask},
     {entries_0_uop_vpu_vmask}};
  wire [7:0][7:0]   _GEN_50 =
    {{entries_7_uop_vpu_vl},
     {entries_6_uop_vpu_vl},
     {entries_5_uop_vpu_vl},
     {entries_4_uop_vpu_vl},
     {entries_3_uop_vpu_vl},
     {entries_2_uop_vpu_vl},
     {entries_1_uop_vpu_vl},
     {entries_0_uop_vpu_vl}};
  wire [7:0][2:0]   _GEN_51 =
    {{entries_7_uop_vpu_nf},
     {entries_6_uop_vpu_nf},
     {entries_5_uop_vpu_nf},
     {entries_4_uop_vpu_nf},
     {entries_3_uop_vpu_nf},
     {entries_2_uop_vpu_nf},
     {entries_1_uop_vpu_nf},
     {entries_0_uop_vpu_nf}};
  wire [7:0][1:0]   _GEN_52 =
    {{entries_7_uop_vpu_veew},
     {entries_6_uop_vpu_veew},
     {entries_5_uop_vpu_veew},
     {entries_4_uop_vpu_veew},
     {entries_3_uop_vpu_veew},
     {entries_2_uop_vpu_veew},
     {entries_1_uop_vpu_veew},
     {entries_0_uop_vpu_veew}};
  wire [7:0][6:0]   _GEN_53 =
    {{entries_7_uop_uopIdx},
     {entries_6_uop_uopIdx},
     {entries_5_uop_uopIdx},
     {entries_4_uop_uopIdx},
     {entries_3_uop_uopIdx},
     {entries_2_uop_uopIdx},
     {entries_1_uop_uopIdx},
     {entries_0_uop_uopIdx}};
  wire [7:0][7:0]   _GEN_54 =
    {{entries_7_uop_pdest},
     {entries_6_uop_pdest},
     {entries_5_uop_pdest},
     {entries_4_uop_pdest},
     {entries_3_uop_pdest},
     {entries_2_uop_pdest},
     {entries_1_uop_pdest},
     {entries_0_uop_pdest}};
  wire [7:0]        _GEN_55 =
    {{entries_7_uop_robIdx_flag},
     {entries_6_uop_robIdx_flag},
     {entries_5_uop_robIdx_flag},
     {entries_4_uop_robIdx_flag},
     {entries_3_uop_robIdx_flag},
     {entries_2_uop_robIdx_flag},
     {entries_1_uop_robIdx_flag},
     {entries_0_uop_robIdx_flag}};
  wire [7:0][5:0]   _GEN_56 =
    {{entries_7_uop_robIdx_value},
     {entries_6_uop_robIdx_value},
     {entries_5_uop_robIdx_value},
     {entries_4_uop_robIdx_value},
     {entries_3_uop_robIdx_value},
     {entries_2_uop_robIdx_value},
     {entries_1_uop_robIdx_value},
     {entries_0_uop_robIdx_value}};
  wire [7:0]        _GEN_57 =
    {{entries_7_uop_replayInst},
     {entries_6_uop_replayInst},
     {entries_5_uop_replayInst},
     {entries_4_uop_replayInst},
     {entries_3_uop_replayInst},
     {entries_2_uop_replayInst},
     {entries_1_uop_replayInst},
     {entries_0_uop_replayInst}};
  wire [7:0][7:0]   _GEN_58 =
    {{entries_7_vstart},
     {entries_6_vstart},
     {entries_5_vstart},
     {entries_4_vstart},
     {entries_3_vstart},
     {entries_2_vstart},
     {entries_1_vstart},
     {entries_0_vstart}};
  wire [7:0]        _GEN_59 =
    {{entries_7_vaNeedExt},
     {entries_6_vaNeedExt},
     {entries_5_vaNeedExt},
     {entries_4_vaNeedExt},
     {entries_3_vaNeedExt},
     {entries_2_vaNeedExt},
     {entries_1_vaNeedExt},
     {entries_0_vaNeedExt}};
  wire [7:0][63:0]  _GEN_60 =
    {{entries_7_vaddr},
     {entries_6_vaddr},
     {entries_5_vaddr},
     {entries_4_vaddr},
     {entries_3_vaddr},
     {entries_2_vaddr},
     {entries_1_vaddr},
     {entries_0_vaddr}};
  wire [7:0][49:0]  _GEN_61 =
    {{entries_7_gpaddr},
     {entries_6_gpaddr},
     {entries_5_gpaddr},
     {entries_4_gpaddr},
     {entries_3_gpaddr},
     {entries_2_gpaddr},
     {entries_1_gpaddr},
     {entries_0_gpaddr}};
  wire [7:0]        _GEN_62 =
    {{entries_7_isForVSnonLeafPTE},
     {entries_6_isForVSnonLeafPTE},
     {entries_5_isForVSnonLeafPTE},
     {entries_4_isForVSnonLeafPTE},
     {entries_3_isForVSnonLeafPTE},
     {entries_2_isForVSnonLeafPTE},
     {entries_1_isForVSnonLeafPTE},
     {entries_0_isForVSnonLeafPTE}};
  wire [6:0]        _flushItself_T_1 = {_GEN_55[entryIdx], _GEN_56[entryIdx]};
  wire              differentFlag = _GEN_55[entryIdx] ^ io_redirect_bits_robIdx_flag;
  wire              compare = _GEN_56[entryIdx] > io_redirect_bits_robIdx_value;
  wire              pipelineOut_0_valid =
    feedbackValid & ~_GEN_37[entryIdx]
    & ~(io_redirect_valid
        & (io_redirect_bits_level & _flushItself_T_1 == _flushItself_T_6 | differentFlag
           ^ compare));
  wire [4:0]        _GEN_63 =
    {_GEN_12[entryIdx],
     _GEN_11[entryIdx],
     _GEN_10[entryIdx],
     _GEN_9[entryIdx],
     _GEN_8[entryIdx]};
  reg               io_feedback_0_valid_REG;
  reg               io_feedback_0_bits_r_hit;
  reg               io_feedback_0_bits_r_sqIdx_flag;
  reg  [4:0]        io_feedback_0_bits_r_sqIdx_value;
  reg               io_feedback_0_bits_r_lqIdx_flag;
  reg  [4:0]        io_feedback_0_bits_r_lqIdx_value;
  wire [7:0]        _GEN_64 =
    {{entries_7_uop_sqIdx_flag},
     {entries_6_uop_sqIdx_flag},
     {entries_5_uop_sqIdx_flag},
     {entries_4_uop_sqIdx_flag},
     {entries_3_uop_sqIdx_flag},
     {entries_2_uop_sqIdx_flag},
     {entries_1_uop_sqIdx_flag},
     {entries_0_uop_sqIdx_flag}};
  wire [7:0][4:0]   _GEN_65 =
    {{entries_7_uop_sqIdx_value},
     {entries_6_uop_sqIdx_value},
     {entries_5_uop_sqIdx_value},
     {entries_4_uop_sqIdx_value},
     {entries_3_uop_sqIdx_value},
     {entries_2_uop_sqIdx_value},
     {entries_1_uop_sqIdx_value},
     {entries_0_uop_sqIdx_value}};
  wire [7:0]        _GEN_66 =
    {{entries_7_uop_lqIdx_flag},
     {entries_6_uop_lqIdx_flag},
     {entries_5_uop_lqIdx_flag},
     {entries_4_uop_lqIdx_flag},
     {entries_3_uop_lqIdx_flag},
     {entries_2_uop_lqIdx_flag},
     {entries_1_uop_lqIdx_flag},
     {entries_0_uop_lqIdx_flag}};
  wire [7:0][4:0]   _GEN_67 =
    {{entries_7_uop_lqIdx_value},
     {entries_6_uop_lqIdx_value},
     {entries_5_uop_lqIdx_value},
     {entries_4_uop_lqIdx_value},
     {entries_3_uop_lqIdx_value},
     {entries_2_uop_lqIdx_value},
     {entries_1_uop_lqIdx_value},
     {entries_0_uop_lqIdx_value}};
  wire [63:0]       _GEN_68 = {14'h0, io_fromSplit_0_req_bits_vaddr};
  wire              entryIsUS =
    _GEN_13[io_fromPipeline_0_bits_mBIndex][6:5] == 2'h0
    & (_GEN_13[io_fromPipeline_0_bits_mBIndex][8]
       ^ _GEN_13[io_fromPipeline_0_bits_mBIndex][7]);
  wire [7:0][15:0]  _GEN_69 =
    {{entries_7_mask},
     {entries_6_mask},
     {entries_5_mask},
     {entries_4_mask},
     {entries_3_mask},
     {entries_2_mask},
     {entries_1_mask},
     {entries_0_mask}};
  wire              entryExcp =
    (|{_GEN_12[io_fromPipeline_0_bits_mBIndex],
       _GEN_11[io_fromPipeline_0_bits_mBIndex],
       _GEN_10[io_fromPipeline_0_bits_mBIndex],
       _GEN_9[io_fromPipeline_0_bits_mBIndex],
       _GEN_8[io_fromPipeline_0_bits_mBIndex]})
    & (|_GEN_69[io_fromPipeline_0_bits_mBIndex]);
  wire [3:0]        _sel_oldest_T_5_bits_trigger =
    io_fromPipeline_0_bits_hasException ? io_fromPipeline_0_bits_trigger : 4'h0;
  wire              new_vec_2_3 =
    io_fromPipeline_0_bits_hasException & io_fromPipeline_0_bits_exceptionVec_3;
  wire              new_vec_2_6 =
    io_fromPipeline_0_bits_hasException & io_fromPipeline_0_bits_exceptionVec_6;
  wire              new_vec_2_7 =
    io_fromPipeline_0_bits_hasException & io_fromPipeline_0_bits_exceptionVec_7;
  wire              new_vec_2_15 =
    io_fromPipeline_0_bits_hasException & io_fromPipeline_0_bits_exceptionVec_15;
  wire              new_vec_2_23 =
    io_fromPipeline_0_bits_hasException & io_fromPipeline_0_bits_exceptionVec_23;
  wire              _sel_oldest_T_5_bits_vaNeedExt =
    io_fromPipeline_0_bits_hasException & io_fromPipeline_0_bits_vaNeedExt;
  wire [49:0]       _sel_oldest_T_5_bits_gpaddr =
    io_fromPipeline_0_bits_hasException ? io_fromPipeline_0_bits_gpaddr[49:0] : 50'h0;
  wire              _sel_oldest_T_5_bits_isForVSnonLeafPTE =
    io_fromPipeline_0_bits_hasException & io_fromPipeline_0_bits_isForVSnonLeafPTE;
  wire [7:0]        _sel_oldest_T_5_bits_elemIdx =
    io_fromPipeline_0_bits_hasException ? io_fromPipeline_0_bits_elemIdx : 8'h0;
  wire [15:0]       _sel_oldest_T_5_bits_mask =
    io_fromPipeline_0_bits_hasException ? io_fromPipeline_0_bits_mask : 16'h0;
  wire [63:0]       _vaddr_T =
    64'((io_fromPipeline_0_bits_hasException ? io_fromPipeline_0_bits_vaddr : 64'h0)
        + {60'h0,
           ~entryIsUS | _sel_oldest_T_5_bits_mask[0]
             ? 4'h0
             : _sel_oldest_T_5_bits_mask[1]
                 ? 4'h1
                 : _sel_oldest_T_5_bits_mask[2]
                     ? 4'h2
                     : _sel_oldest_T_5_bits_mask[3]
                         ? 4'h3
                         : _sel_oldest_T_5_bits_mask[4]
                             ? 4'h4
                             : _sel_oldest_T_5_bits_mask[5]
                                 ? 4'h5
                                 : _sel_oldest_T_5_bits_mask[6]
                                     ? 4'h6
                                     : _sel_oldest_T_5_bits_mask[7]
                                         ? 4'h7
                                         : _sel_oldest_T_5_bits_mask[8]
                                             ? 4'h8
                                             : _sel_oldest_T_5_bits_mask[9]
                                                 ? 4'h9
                                                 : _sel_oldest_T_5_bits_mask[10]
                                                     ? 4'hA
                                                     : _sel_oldest_T_5_bits_mask[11]
                                                         ? 4'hB
                                                         : _sel_oldest_T_5_bits_mask[12]
                                                             ? 4'hC
                                                             : _sel_oldest_T_5_bits_mask[13]
                                                                 ? 4'hD
                                                                 : _sel_oldest_T_5_bits_mask[14]
                                                                     ? 4'hE
                                                                     : {4{_sel_oldest_T_5_bits_mask[15]}}});
  wire [7:0][7:0]   _GEN_70 =
    {{entries_7_vlmax},
     {entries_6_vlmax},
     {entries_5_vlmax},
     {entries_4_vlmax},
     {entries_3_vlmax},
     {entries_2_vlmax},
     {entries_1_vlmax},
     {entries_0_vlmax}};
  wire [7:0]        vstart =
    entryIsUS
      ? (io_fromPipeline_0_bits_hasException ? io_fromPipeline_0_bits_vstart : 8'h0)
      : _sel_oldest_T_5_bits_elemIdx & 8'(_GEN_70[io_fromPipeline_0_bits_mBIndex] - 8'h1);
  wire [7:0][7:0]   _GEN_71 =
    {{entries_7_elemIdx},
     {entries_6_elemIdx},
     {entries_5_elemIdx},
     {entries_4_elemIdx},
     {entries_3_elemIdx},
     {entries_2_elemIdx},
     {entries_1_elemIdx},
     {entries_0_elemIdx}};
  wire              _GEN_72 =
    (_GEN_71[io_fromPipeline_0_bits_mBIndex] >= _sel_oldest_T_5_bits_elemIdx & entryExcp
     & io_fromPipeline_0_bits_hasException | ~entryExcp
     & io_fromPipeline_0_bits_hasException) & io_fromPipeline_0_valid;
  wire [7:0][4:0]   _GEN_73 =
    {{entries_7_flowNum},
     {entries_6_flowNum},
     {entries_5_flowNum},
     {entries_4_flowNum},
     {entries_3_flowNum},
     {entries_2_flowNum},
     {entries_1_flowNum},
     {entries_0_flowNum}};
  wire [4:0]        _entries_flowNum_T =
    5'(_GEN_73[io_fromPipeline_0_bits_mBIndex] - 5'h1);
  always @(posedge clock) begin
    if (_GEN_0) begin
      entries_0_mask <= io_fromSplit_0_req_bits_mask;
      entries_0_uop_fuOpType <= io_fromSplit_0_req_bits_uop_fuOpType;
      entries_0_uop_vecWen <= io_fromSplit_0_req_bits_uop_vecWen;
      entries_0_uop_v0Wen <= io_fromSplit_0_req_bits_uop_v0Wen;
      entries_0_uop_vlWen <= io_fromSplit_0_req_bits_uop_vlWen;
      entries_0_uop_vpu_vma <= io_fromSplit_0_req_bits_uop_vpu_vma;
      entries_0_uop_vpu_vta <= io_fromSplit_0_req_bits_uop_vpu_vta;
      entries_0_uop_vpu_vsew <= io_fromSplit_0_req_bits_uop_vpu_vsew;
      entries_0_uop_vpu_vlmul <= io_fromSplit_0_req_bits_uop_vpu_vlmul;
      entries_0_uop_vpu_vm <= io_fromSplit_0_req_bits_uop_vpu_vm;
      entries_0_uop_vpu_vuopIdx <= io_fromSplit_0_req_bits_uop_vpu_vuopIdx;
      entries_0_uop_vpu_vmask <= io_fromSplit_0_req_bits_uop_vpu_vmask;
      entries_0_uop_vpu_vl <= io_fromSplit_0_req_bits_uop_vpu_vl;
      entries_0_uop_vpu_nf <= io_fromSplit_0_req_bits_uop_vpu_nf;
      entries_0_uop_vpu_veew <= io_fromSplit_0_req_bits_uop_vpu_veew;
      entries_0_uop_uopIdx <= io_fromSplit_0_req_bits_uop_uopIdx;
      entries_0_uop_pdest <= io_fromSplit_0_req_bits_uop_pdest;
      entries_0_uop_robIdx_flag <= io_fromSplit_0_req_bits_uop_robIdx_flag;
      entries_0_uop_robIdx_value <= io_fromSplit_0_req_bits_uop_robIdx_value;
      entries_0_uop_lqIdx_flag <= io_fromSplit_0_req_bits_uop_lqIdx_flag;
      entries_0_uop_lqIdx_value <= io_fromSplit_0_req_bits_uop_lqIdx_value;
      entries_0_uop_sqIdx_flag <= io_fromSplit_0_req_bits_uop_sqIdx_flag;
      entries_0_uop_sqIdx_value <= io_fromSplit_0_req_bits_uop_sqIdx_value;
      entries_0_vlmax <= io_fromSplit_0_req_bits_vlmax;
    end
    if (io_fromPipeline_0_valid & _GEN_14)
      entries_0_flowNum <= _entries_flowNum_T;
    else if (_GEN_0)
      entries_0_flowNum <= io_fromSplit_0_req_bits_flowNum;
    if (_GEN_72 & _GEN_14) begin
      entries_0_exceptionVec_3 <= new_vec_2_3;
      entries_0_exceptionVec_6 <= new_vec_2_6;
      entries_0_exceptionVec_7 <= new_vec_2_7;
      entries_0_exceptionVec_15 <= new_vec_2_15;
      entries_0_exceptionVec_23 <= new_vec_2_23;
      entries_0_uop_trigger <= _sel_oldest_T_5_bits_trigger;
      entries_0_elemIdx <= _sel_oldest_T_5_bits_elemIdx;
      entries_0_vstart <= vstart;
      entries_0_vaNeedExt <= _sel_oldest_T_5_bits_vaNeedExt;
      entries_0_vaddr <= _vaddr_T;
      entries_0_gpaddr <= _sel_oldest_T_5_bits_gpaddr;
      entries_0_isForVSnonLeafPTE <= _sel_oldest_T_5_bits_isForVSnonLeafPTE;
    end
    else begin
      entries_0_exceptionVec_3 <= ~_GEN_0 & entries_0_exceptionVec_3;
      entries_0_exceptionVec_6 <= ~_GEN_0 & entries_0_exceptionVec_6;
      entries_0_exceptionVec_7 <= ~_GEN_0 & entries_0_exceptionVec_7;
      entries_0_exceptionVec_15 <= ~_GEN_0 & entries_0_exceptionVec_15;
      entries_0_exceptionVec_23 <= ~_GEN_0 & entries_0_exceptionVec_23;
      if (_GEN_0) begin
        entries_0_uop_trigger <= 4'h0;
        entries_0_elemIdx <= 8'hFF;
        entries_0_vstart <= 8'h0;
        entries_0_vaddr <= _GEN_68;
      end
    end
    entries_0_uop_flushPipe <= ~_GEN_0 & entries_0_uop_flushPipe;
    entries_0_uop_replayInst <= ~_GEN_0 & entries_0_uop_replayInst;
    if (_GEN_1) begin
      entries_1_mask <= io_fromSplit_0_req_bits_mask;
      entries_1_uop_fuOpType <= io_fromSplit_0_req_bits_uop_fuOpType;
      entries_1_uop_vecWen <= io_fromSplit_0_req_bits_uop_vecWen;
      entries_1_uop_v0Wen <= io_fromSplit_0_req_bits_uop_v0Wen;
      entries_1_uop_vlWen <= io_fromSplit_0_req_bits_uop_vlWen;
      entries_1_uop_vpu_vma <= io_fromSplit_0_req_bits_uop_vpu_vma;
      entries_1_uop_vpu_vta <= io_fromSplit_0_req_bits_uop_vpu_vta;
      entries_1_uop_vpu_vsew <= io_fromSplit_0_req_bits_uop_vpu_vsew;
      entries_1_uop_vpu_vlmul <= io_fromSplit_0_req_bits_uop_vpu_vlmul;
      entries_1_uop_vpu_vm <= io_fromSplit_0_req_bits_uop_vpu_vm;
      entries_1_uop_vpu_vuopIdx <= io_fromSplit_0_req_bits_uop_vpu_vuopIdx;
      entries_1_uop_vpu_vmask <= io_fromSplit_0_req_bits_uop_vpu_vmask;
      entries_1_uop_vpu_vl <= io_fromSplit_0_req_bits_uop_vpu_vl;
      entries_1_uop_vpu_nf <= io_fromSplit_0_req_bits_uop_vpu_nf;
      entries_1_uop_vpu_veew <= io_fromSplit_0_req_bits_uop_vpu_veew;
      entries_1_uop_uopIdx <= io_fromSplit_0_req_bits_uop_uopIdx;
      entries_1_uop_pdest <= io_fromSplit_0_req_bits_uop_pdest;
      entries_1_uop_robIdx_flag <= io_fromSplit_0_req_bits_uop_robIdx_flag;
      entries_1_uop_robIdx_value <= io_fromSplit_0_req_bits_uop_robIdx_value;
      entries_1_uop_lqIdx_flag <= io_fromSplit_0_req_bits_uop_lqIdx_flag;
      entries_1_uop_lqIdx_value <= io_fromSplit_0_req_bits_uop_lqIdx_value;
      entries_1_uop_sqIdx_flag <= io_fromSplit_0_req_bits_uop_sqIdx_flag;
      entries_1_uop_sqIdx_value <= io_fromSplit_0_req_bits_uop_sqIdx_value;
      entries_1_vlmax <= io_fromSplit_0_req_bits_vlmax;
    end
    if (io_fromPipeline_0_valid & _GEN_15)
      entries_1_flowNum <= _entries_flowNum_T;
    else if (_GEN_1)
      entries_1_flowNum <= io_fromSplit_0_req_bits_flowNum;
    if (_GEN_72 & _GEN_15) begin
      entries_1_exceptionVec_3 <= new_vec_2_3;
      entries_1_exceptionVec_6 <= new_vec_2_6;
      entries_1_exceptionVec_7 <= new_vec_2_7;
      entries_1_exceptionVec_15 <= new_vec_2_15;
      entries_1_exceptionVec_23 <= new_vec_2_23;
      entries_1_uop_trigger <= _sel_oldest_T_5_bits_trigger;
      entries_1_elemIdx <= _sel_oldest_T_5_bits_elemIdx;
      entries_1_vstart <= vstart;
      entries_1_vaNeedExt <= _sel_oldest_T_5_bits_vaNeedExt;
      entries_1_vaddr <= _vaddr_T;
      entries_1_gpaddr <= _sel_oldest_T_5_bits_gpaddr;
      entries_1_isForVSnonLeafPTE <= _sel_oldest_T_5_bits_isForVSnonLeafPTE;
    end
    else begin
      entries_1_exceptionVec_3 <= ~_GEN_1 & entries_1_exceptionVec_3;
      entries_1_exceptionVec_6 <= ~_GEN_1 & entries_1_exceptionVec_6;
      entries_1_exceptionVec_7 <= ~_GEN_1 & entries_1_exceptionVec_7;
      entries_1_exceptionVec_15 <= ~_GEN_1 & entries_1_exceptionVec_15;
      entries_1_exceptionVec_23 <= ~_GEN_1 & entries_1_exceptionVec_23;
      if (_GEN_1) begin
        entries_1_uop_trigger <= 4'h0;
        entries_1_elemIdx <= 8'hFF;
        entries_1_vstart <= 8'h0;
        entries_1_vaddr <= _GEN_68;
      end
    end
    entries_1_uop_flushPipe <= ~_GEN_1 & entries_1_uop_flushPipe;
    entries_1_uop_replayInst <= ~_GEN_1 & entries_1_uop_replayInst;
    if (_GEN_2) begin
      entries_2_mask <= io_fromSplit_0_req_bits_mask;
      entries_2_uop_fuOpType <= io_fromSplit_0_req_bits_uop_fuOpType;
      entries_2_uop_vecWen <= io_fromSplit_0_req_bits_uop_vecWen;
      entries_2_uop_v0Wen <= io_fromSplit_0_req_bits_uop_v0Wen;
      entries_2_uop_vlWen <= io_fromSplit_0_req_bits_uop_vlWen;
      entries_2_uop_vpu_vma <= io_fromSplit_0_req_bits_uop_vpu_vma;
      entries_2_uop_vpu_vta <= io_fromSplit_0_req_bits_uop_vpu_vta;
      entries_2_uop_vpu_vsew <= io_fromSplit_0_req_bits_uop_vpu_vsew;
      entries_2_uop_vpu_vlmul <= io_fromSplit_0_req_bits_uop_vpu_vlmul;
      entries_2_uop_vpu_vm <= io_fromSplit_0_req_bits_uop_vpu_vm;
      entries_2_uop_vpu_vuopIdx <= io_fromSplit_0_req_bits_uop_vpu_vuopIdx;
      entries_2_uop_vpu_vmask <= io_fromSplit_0_req_bits_uop_vpu_vmask;
      entries_2_uop_vpu_vl <= io_fromSplit_0_req_bits_uop_vpu_vl;
      entries_2_uop_vpu_nf <= io_fromSplit_0_req_bits_uop_vpu_nf;
      entries_2_uop_vpu_veew <= io_fromSplit_0_req_bits_uop_vpu_veew;
      entries_2_uop_uopIdx <= io_fromSplit_0_req_bits_uop_uopIdx;
      entries_2_uop_pdest <= io_fromSplit_0_req_bits_uop_pdest;
      entries_2_uop_robIdx_flag <= io_fromSplit_0_req_bits_uop_robIdx_flag;
      entries_2_uop_robIdx_value <= io_fromSplit_0_req_bits_uop_robIdx_value;
      entries_2_uop_lqIdx_flag <= io_fromSplit_0_req_bits_uop_lqIdx_flag;
      entries_2_uop_lqIdx_value <= io_fromSplit_0_req_bits_uop_lqIdx_value;
      entries_2_uop_sqIdx_flag <= io_fromSplit_0_req_bits_uop_sqIdx_flag;
      entries_2_uop_sqIdx_value <= io_fromSplit_0_req_bits_uop_sqIdx_value;
      entries_2_vlmax <= io_fromSplit_0_req_bits_vlmax;
    end
    if (io_fromPipeline_0_valid & _GEN_16)
      entries_2_flowNum <= _entries_flowNum_T;
    else if (_GEN_2)
      entries_2_flowNum <= io_fromSplit_0_req_bits_flowNum;
    if (_GEN_72 & _GEN_16) begin
      entries_2_exceptionVec_3 <= new_vec_2_3;
      entries_2_exceptionVec_6 <= new_vec_2_6;
      entries_2_exceptionVec_7 <= new_vec_2_7;
      entries_2_exceptionVec_15 <= new_vec_2_15;
      entries_2_exceptionVec_23 <= new_vec_2_23;
      entries_2_uop_trigger <= _sel_oldest_T_5_bits_trigger;
      entries_2_elemIdx <= _sel_oldest_T_5_bits_elemIdx;
      entries_2_vstart <= vstart;
      entries_2_vaNeedExt <= _sel_oldest_T_5_bits_vaNeedExt;
      entries_2_vaddr <= _vaddr_T;
      entries_2_gpaddr <= _sel_oldest_T_5_bits_gpaddr;
      entries_2_isForVSnonLeafPTE <= _sel_oldest_T_5_bits_isForVSnonLeafPTE;
    end
    else begin
      entries_2_exceptionVec_3 <= ~_GEN_2 & entries_2_exceptionVec_3;
      entries_2_exceptionVec_6 <= ~_GEN_2 & entries_2_exceptionVec_6;
      entries_2_exceptionVec_7 <= ~_GEN_2 & entries_2_exceptionVec_7;
      entries_2_exceptionVec_15 <= ~_GEN_2 & entries_2_exceptionVec_15;
      entries_2_exceptionVec_23 <= ~_GEN_2 & entries_2_exceptionVec_23;
      if (_GEN_2) begin
        entries_2_uop_trigger <= 4'h0;
        entries_2_elemIdx <= 8'hFF;
        entries_2_vstart <= 8'h0;
        entries_2_vaddr <= _GEN_68;
      end
    end
    entries_2_uop_flushPipe <= ~_GEN_2 & entries_2_uop_flushPipe;
    entries_2_uop_replayInst <= ~_GEN_2 & entries_2_uop_replayInst;
    if (_GEN_3) begin
      entries_3_mask <= io_fromSplit_0_req_bits_mask;
      entries_3_uop_fuOpType <= io_fromSplit_0_req_bits_uop_fuOpType;
      entries_3_uop_vecWen <= io_fromSplit_0_req_bits_uop_vecWen;
      entries_3_uop_v0Wen <= io_fromSplit_0_req_bits_uop_v0Wen;
      entries_3_uop_vlWen <= io_fromSplit_0_req_bits_uop_vlWen;
      entries_3_uop_vpu_vma <= io_fromSplit_0_req_bits_uop_vpu_vma;
      entries_3_uop_vpu_vta <= io_fromSplit_0_req_bits_uop_vpu_vta;
      entries_3_uop_vpu_vsew <= io_fromSplit_0_req_bits_uop_vpu_vsew;
      entries_3_uop_vpu_vlmul <= io_fromSplit_0_req_bits_uop_vpu_vlmul;
      entries_3_uop_vpu_vm <= io_fromSplit_0_req_bits_uop_vpu_vm;
      entries_3_uop_vpu_vuopIdx <= io_fromSplit_0_req_bits_uop_vpu_vuopIdx;
      entries_3_uop_vpu_vmask <= io_fromSplit_0_req_bits_uop_vpu_vmask;
      entries_3_uop_vpu_vl <= io_fromSplit_0_req_bits_uop_vpu_vl;
      entries_3_uop_vpu_nf <= io_fromSplit_0_req_bits_uop_vpu_nf;
      entries_3_uop_vpu_veew <= io_fromSplit_0_req_bits_uop_vpu_veew;
      entries_3_uop_uopIdx <= io_fromSplit_0_req_bits_uop_uopIdx;
      entries_3_uop_pdest <= io_fromSplit_0_req_bits_uop_pdest;
      entries_3_uop_robIdx_flag <= io_fromSplit_0_req_bits_uop_robIdx_flag;
      entries_3_uop_robIdx_value <= io_fromSplit_0_req_bits_uop_robIdx_value;
      entries_3_uop_lqIdx_flag <= io_fromSplit_0_req_bits_uop_lqIdx_flag;
      entries_3_uop_lqIdx_value <= io_fromSplit_0_req_bits_uop_lqIdx_value;
      entries_3_uop_sqIdx_flag <= io_fromSplit_0_req_bits_uop_sqIdx_flag;
      entries_3_uop_sqIdx_value <= io_fromSplit_0_req_bits_uop_sqIdx_value;
      entries_3_vlmax <= io_fromSplit_0_req_bits_vlmax;
    end
    if (io_fromPipeline_0_valid & _GEN_17)
      entries_3_flowNum <= _entries_flowNum_T;
    else if (_GEN_3)
      entries_3_flowNum <= io_fromSplit_0_req_bits_flowNum;
    if (_GEN_72 & _GEN_17) begin
      entries_3_exceptionVec_3 <= new_vec_2_3;
      entries_3_exceptionVec_6 <= new_vec_2_6;
      entries_3_exceptionVec_7 <= new_vec_2_7;
      entries_3_exceptionVec_15 <= new_vec_2_15;
      entries_3_exceptionVec_23 <= new_vec_2_23;
      entries_3_uop_trigger <= _sel_oldest_T_5_bits_trigger;
      entries_3_elemIdx <= _sel_oldest_T_5_bits_elemIdx;
      entries_3_vstart <= vstart;
      entries_3_vaNeedExt <= _sel_oldest_T_5_bits_vaNeedExt;
      entries_3_vaddr <= _vaddr_T;
      entries_3_gpaddr <= _sel_oldest_T_5_bits_gpaddr;
      entries_3_isForVSnonLeafPTE <= _sel_oldest_T_5_bits_isForVSnonLeafPTE;
    end
    else begin
      entries_3_exceptionVec_3 <= ~_GEN_3 & entries_3_exceptionVec_3;
      entries_3_exceptionVec_6 <= ~_GEN_3 & entries_3_exceptionVec_6;
      entries_3_exceptionVec_7 <= ~_GEN_3 & entries_3_exceptionVec_7;
      entries_3_exceptionVec_15 <= ~_GEN_3 & entries_3_exceptionVec_15;
      entries_3_exceptionVec_23 <= ~_GEN_3 & entries_3_exceptionVec_23;
      if (_GEN_3) begin
        entries_3_uop_trigger <= 4'h0;
        entries_3_elemIdx <= 8'hFF;
        entries_3_vstart <= 8'h0;
        entries_3_vaddr <= _GEN_68;
      end
    end
    entries_3_uop_flushPipe <= ~_GEN_3 & entries_3_uop_flushPipe;
    entries_3_uop_replayInst <= ~_GEN_3 & entries_3_uop_replayInst;
    if (_GEN_4) begin
      entries_4_mask <= io_fromSplit_0_req_bits_mask;
      entries_4_uop_fuOpType <= io_fromSplit_0_req_bits_uop_fuOpType;
      entries_4_uop_vecWen <= io_fromSplit_0_req_bits_uop_vecWen;
      entries_4_uop_v0Wen <= io_fromSplit_0_req_bits_uop_v0Wen;
      entries_4_uop_vlWen <= io_fromSplit_0_req_bits_uop_vlWen;
      entries_4_uop_vpu_vma <= io_fromSplit_0_req_bits_uop_vpu_vma;
      entries_4_uop_vpu_vta <= io_fromSplit_0_req_bits_uop_vpu_vta;
      entries_4_uop_vpu_vsew <= io_fromSplit_0_req_bits_uop_vpu_vsew;
      entries_4_uop_vpu_vlmul <= io_fromSplit_0_req_bits_uop_vpu_vlmul;
      entries_4_uop_vpu_vm <= io_fromSplit_0_req_bits_uop_vpu_vm;
      entries_4_uop_vpu_vuopIdx <= io_fromSplit_0_req_bits_uop_vpu_vuopIdx;
      entries_4_uop_vpu_vmask <= io_fromSplit_0_req_bits_uop_vpu_vmask;
      entries_4_uop_vpu_vl <= io_fromSplit_0_req_bits_uop_vpu_vl;
      entries_4_uop_vpu_nf <= io_fromSplit_0_req_bits_uop_vpu_nf;
      entries_4_uop_vpu_veew <= io_fromSplit_0_req_bits_uop_vpu_veew;
      entries_4_uop_uopIdx <= io_fromSplit_0_req_bits_uop_uopIdx;
      entries_4_uop_pdest <= io_fromSplit_0_req_bits_uop_pdest;
      entries_4_uop_robIdx_flag <= io_fromSplit_0_req_bits_uop_robIdx_flag;
      entries_4_uop_robIdx_value <= io_fromSplit_0_req_bits_uop_robIdx_value;
      entries_4_uop_lqIdx_flag <= io_fromSplit_0_req_bits_uop_lqIdx_flag;
      entries_4_uop_lqIdx_value <= io_fromSplit_0_req_bits_uop_lqIdx_value;
      entries_4_uop_sqIdx_flag <= io_fromSplit_0_req_bits_uop_sqIdx_flag;
      entries_4_uop_sqIdx_value <= io_fromSplit_0_req_bits_uop_sqIdx_value;
      entries_4_vlmax <= io_fromSplit_0_req_bits_vlmax;
    end
    if (io_fromPipeline_0_valid & _GEN_18)
      entries_4_flowNum <= _entries_flowNum_T;
    else if (_GEN_4)
      entries_4_flowNum <= io_fromSplit_0_req_bits_flowNum;
    if (_GEN_72 & _GEN_18) begin
      entries_4_exceptionVec_3 <= new_vec_2_3;
      entries_4_exceptionVec_6 <= new_vec_2_6;
      entries_4_exceptionVec_7 <= new_vec_2_7;
      entries_4_exceptionVec_15 <= new_vec_2_15;
      entries_4_exceptionVec_23 <= new_vec_2_23;
      entries_4_uop_trigger <= _sel_oldest_T_5_bits_trigger;
      entries_4_elemIdx <= _sel_oldest_T_5_bits_elemIdx;
      entries_4_vstart <= vstart;
      entries_4_vaNeedExt <= _sel_oldest_T_5_bits_vaNeedExt;
      entries_4_vaddr <= _vaddr_T;
      entries_4_gpaddr <= _sel_oldest_T_5_bits_gpaddr;
      entries_4_isForVSnonLeafPTE <= _sel_oldest_T_5_bits_isForVSnonLeafPTE;
    end
    else begin
      entries_4_exceptionVec_3 <= ~_GEN_4 & entries_4_exceptionVec_3;
      entries_4_exceptionVec_6 <= ~_GEN_4 & entries_4_exceptionVec_6;
      entries_4_exceptionVec_7 <= ~_GEN_4 & entries_4_exceptionVec_7;
      entries_4_exceptionVec_15 <= ~_GEN_4 & entries_4_exceptionVec_15;
      entries_4_exceptionVec_23 <= ~_GEN_4 & entries_4_exceptionVec_23;
      if (_GEN_4) begin
        entries_4_uop_trigger <= 4'h0;
        entries_4_elemIdx <= 8'hFF;
        entries_4_vstart <= 8'h0;
        entries_4_vaddr <= _GEN_68;
      end
    end
    entries_4_uop_flushPipe <= ~_GEN_4 & entries_4_uop_flushPipe;
    entries_4_uop_replayInst <= ~_GEN_4 & entries_4_uop_replayInst;
    if (_GEN_5) begin
      entries_5_mask <= io_fromSplit_0_req_bits_mask;
      entries_5_uop_fuOpType <= io_fromSplit_0_req_bits_uop_fuOpType;
      entries_5_uop_vecWen <= io_fromSplit_0_req_bits_uop_vecWen;
      entries_5_uop_v0Wen <= io_fromSplit_0_req_bits_uop_v0Wen;
      entries_5_uop_vlWen <= io_fromSplit_0_req_bits_uop_vlWen;
      entries_5_uop_vpu_vma <= io_fromSplit_0_req_bits_uop_vpu_vma;
      entries_5_uop_vpu_vta <= io_fromSplit_0_req_bits_uop_vpu_vta;
      entries_5_uop_vpu_vsew <= io_fromSplit_0_req_bits_uop_vpu_vsew;
      entries_5_uop_vpu_vlmul <= io_fromSplit_0_req_bits_uop_vpu_vlmul;
      entries_5_uop_vpu_vm <= io_fromSplit_0_req_bits_uop_vpu_vm;
      entries_5_uop_vpu_vuopIdx <= io_fromSplit_0_req_bits_uop_vpu_vuopIdx;
      entries_5_uop_vpu_vmask <= io_fromSplit_0_req_bits_uop_vpu_vmask;
      entries_5_uop_vpu_vl <= io_fromSplit_0_req_bits_uop_vpu_vl;
      entries_5_uop_vpu_nf <= io_fromSplit_0_req_bits_uop_vpu_nf;
      entries_5_uop_vpu_veew <= io_fromSplit_0_req_bits_uop_vpu_veew;
      entries_5_uop_uopIdx <= io_fromSplit_0_req_bits_uop_uopIdx;
      entries_5_uop_pdest <= io_fromSplit_0_req_bits_uop_pdest;
      entries_5_uop_robIdx_flag <= io_fromSplit_0_req_bits_uop_robIdx_flag;
      entries_5_uop_robIdx_value <= io_fromSplit_0_req_bits_uop_robIdx_value;
      entries_5_uop_lqIdx_flag <= io_fromSplit_0_req_bits_uop_lqIdx_flag;
      entries_5_uop_lqIdx_value <= io_fromSplit_0_req_bits_uop_lqIdx_value;
      entries_5_uop_sqIdx_flag <= io_fromSplit_0_req_bits_uop_sqIdx_flag;
      entries_5_uop_sqIdx_value <= io_fromSplit_0_req_bits_uop_sqIdx_value;
      entries_5_vlmax <= io_fromSplit_0_req_bits_vlmax;
    end
    if (io_fromPipeline_0_valid & _GEN_19)
      entries_5_flowNum <= _entries_flowNum_T;
    else if (_GEN_5)
      entries_5_flowNum <= io_fromSplit_0_req_bits_flowNum;
    if (_GEN_72 & _GEN_19) begin
      entries_5_exceptionVec_3 <= new_vec_2_3;
      entries_5_exceptionVec_6 <= new_vec_2_6;
      entries_5_exceptionVec_7 <= new_vec_2_7;
      entries_5_exceptionVec_15 <= new_vec_2_15;
      entries_5_exceptionVec_23 <= new_vec_2_23;
      entries_5_uop_trigger <= _sel_oldest_T_5_bits_trigger;
      entries_5_elemIdx <= _sel_oldest_T_5_bits_elemIdx;
      entries_5_vstart <= vstart;
      entries_5_vaNeedExt <= _sel_oldest_T_5_bits_vaNeedExt;
      entries_5_vaddr <= _vaddr_T;
      entries_5_gpaddr <= _sel_oldest_T_5_bits_gpaddr;
      entries_5_isForVSnonLeafPTE <= _sel_oldest_T_5_bits_isForVSnonLeafPTE;
    end
    else begin
      entries_5_exceptionVec_3 <= ~_GEN_5 & entries_5_exceptionVec_3;
      entries_5_exceptionVec_6 <= ~_GEN_5 & entries_5_exceptionVec_6;
      entries_5_exceptionVec_7 <= ~_GEN_5 & entries_5_exceptionVec_7;
      entries_5_exceptionVec_15 <= ~_GEN_5 & entries_5_exceptionVec_15;
      entries_5_exceptionVec_23 <= ~_GEN_5 & entries_5_exceptionVec_23;
      if (_GEN_5) begin
        entries_5_uop_trigger <= 4'h0;
        entries_5_elemIdx <= 8'hFF;
        entries_5_vstart <= 8'h0;
        entries_5_vaddr <= _GEN_68;
      end
    end
    entries_5_uop_flushPipe <= ~_GEN_5 & entries_5_uop_flushPipe;
    entries_5_uop_replayInst <= ~_GEN_5 & entries_5_uop_replayInst;
    if (_GEN_6) begin
      entries_6_mask <= io_fromSplit_0_req_bits_mask;
      entries_6_uop_fuOpType <= io_fromSplit_0_req_bits_uop_fuOpType;
      entries_6_uop_vecWen <= io_fromSplit_0_req_bits_uop_vecWen;
      entries_6_uop_v0Wen <= io_fromSplit_0_req_bits_uop_v0Wen;
      entries_6_uop_vlWen <= io_fromSplit_0_req_bits_uop_vlWen;
      entries_6_uop_vpu_vma <= io_fromSplit_0_req_bits_uop_vpu_vma;
      entries_6_uop_vpu_vta <= io_fromSplit_0_req_bits_uop_vpu_vta;
      entries_6_uop_vpu_vsew <= io_fromSplit_0_req_bits_uop_vpu_vsew;
      entries_6_uop_vpu_vlmul <= io_fromSplit_0_req_bits_uop_vpu_vlmul;
      entries_6_uop_vpu_vm <= io_fromSplit_0_req_bits_uop_vpu_vm;
      entries_6_uop_vpu_vuopIdx <= io_fromSplit_0_req_bits_uop_vpu_vuopIdx;
      entries_6_uop_vpu_vmask <= io_fromSplit_0_req_bits_uop_vpu_vmask;
      entries_6_uop_vpu_vl <= io_fromSplit_0_req_bits_uop_vpu_vl;
      entries_6_uop_vpu_nf <= io_fromSplit_0_req_bits_uop_vpu_nf;
      entries_6_uop_vpu_veew <= io_fromSplit_0_req_bits_uop_vpu_veew;
      entries_6_uop_uopIdx <= io_fromSplit_0_req_bits_uop_uopIdx;
      entries_6_uop_pdest <= io_fromSplit_0_req_bits_uop_pdest;
      entries_6_uop_robIdx_flag <= io_fromSplit_0_req_bits_uop_robIdx_flag;
      entries_6_uop_robIdx_value <= io_fromSplit_0_req_bits_uop_robIdx_value;
      entries_6_uop_lqIdx_flag <= io_fromSplit_0_req_bits_uop_lqIdx_flag;
      entries_6_uop_lqIdx_value <= io_fromSplit_0_req_bits_uop_lqIdx_value;
      entries_6_uop_sqIdx_flag <= io_fromSplit_0_req_bits_uop_sqIdx_flag;
      entries_6_uop_sqIdx_value <= io_fromSplit_0_req_bits_uop_sqIdx_value;
      entries_6_vlmax <= io_fromSplit_0_req_bits_vlmax;
    end
    if (io_fromPipeline_0_valid & _GEN_20)
      entries_6_flowNum <= _entries_flowNum_T;
    else if (_GEN_6)
      entries_6_flowNum <= io_fromSplit_0_req_bits_flowNum;
    if (_GEN_72 & _GEN_20) begin
      entries_6_exceptionVec_3 <= new_vec_2_3;
      entries_6_exceptionVec_6 <= new_vec_2_6;
      entries_6_exceptionVec_7 <= new_vec_2_7;
      entries_6_exceptionVec_15 <= new_vec_2_15;
      entries_6_exceptionVec_23 <= new_vec_2_23;
      entries_6_uop_trigger <= _sel_oldest_T_5_bits_trigger;
      entries_6_elemIdx <= _sel_oldest_T_5_bits_elemIdx;
      entries_6_vstart <= vstart;
      entries_6_vaNeedExt <= _sel_oldest_T_5_bits_vaNeedExt;
      entries_6_vaddr <= _vaddr_T;
      entries_6_gpaddr <= _sel_oldest_T_5_bits_gpaddr;
      entries_6_isForVSnonLeafPTE <= _sel_oldest_T_5_bits_isForVSnonLeafPTE;
    end
    else begin
      entries_6_exceptionVec_3 <= ~_GEN_6 & entries_6_exceptionVec_3;
      entries_6_exceptionVec_6 <= ~_GEN_6 & entries_6_exceptionVec_6;
      entries_6_exceptionVec_7 <= ~_GEN_6 & entries_6_exceptionVec_7;
      entries_6_exceptionVec_15 <= ~_GEN_6 & entries_6_exceptionVec_15;
      entries_6_exceptionVec_23 <= ~_GEN_6 & entries_6_exceptionVec_23;
      if (_GEN_6) begin
        entries_6_uop_trigger <= 4'h0;
        entries_6_elemIdx <= 8'hFF;
        entries_6_vstart <= 8'h0;
        entries_6_vaddr <= _GEN_68;
      end
    end
    entries_6_uop_flushPipe <= ~_GEN_6 & entries_6_uop_flushPipe;
    entries_6_uop_replayInst <= ~_GEN_6 & entries_6_uop_replayInst;
    if (_GEN_7) begin
      entries_7_mask <= io_fromSplit_0_req_bits_mask;
      entries_7_uop_fuOpType <= io_fromSplit_0_req_bits_uop_fuOpType;
      entries_7_uop_vecWen <= io_fromSplit_0_req_bits_uop_vecWen;
      entries_7_uop_v0Wen <= io_fromSplit_0_req_bits_uop_v0Wen;
      entries_7_uop_vlWen <= io_fromSplit_0_req_bits_uop_vlWen;
      entries_7_uop_vpu_vma <= io_fromSplit_0_req_bits_uop_vpu_vma;
      entries_7_uop_vpu_vta <= io_fromSplit_0_req_bits_uop_vpu_vta;
      entries_7_uop_vpu_vsew <= io_fromSplit_0_req_bits_uop_vpu_vsew;
      entries_7_uop_vpu_vlmul <= io_fromSplit_0_req_bits_uop_vpu_vlmul;
      entries_7_uop_vpu_vm <= io_fromSplit_0_req_bits_uop_vpu_vm;
      entries_7_uop_vpu_vuopIdx <= io_fromSplit_0_req_bits_uop_vpu_vuopIdx;
      entries_7_uop_vpu_vmask <= io_fromSplit_0_req_bits_uop_vpu_vmask;
      entries_7_uop_vpu_vl <= io_fromSplit_0_req_bits_uop_vpu_vl;
      entries_7_uop_vpu_nf <= io_fromSplit_0_req_bits_uop_vpu_nf;
      entries_7_uop_vpu_veew <= io_fromSplit_0_req_bits_uop_vpu_veew;
      entries_7_uop_uopIdx <= io_fromSplit_0_req_bits_uop_uopIdx;
      entries_7_uop_pdest <= io_fromSplit_0_req_bits_uop_pdest;
      entries_7_uop_robIdx_flag <= io_fromSplit_0_req_bits_uop_robIdx_flag;
      entries_7_uop_robIdx_value <= io_fromSplit_0_req_bits_uop_robIdx_value;
      entries_7_uop_lqIdx_flag <= io_fromSplit_0_req_bits_uop_lqIdx_flag;
      entries_7_uop_lqIdx_value <= io_fromSplit_0_req_bits_uop_lqIdx_value;
      entries_7_uop_sqIdx_flag <= io_fromSplit_0_req_bits_uop_sqIdx_flag;
      entries_7_uop_sqIdx_value <= io_fromSplit_0_req_bits_uop_sqIdx_value;
      entries_7_vlmax <= io_fromSplit_0_req_bits_vlmax;
    end
    if (io_fromPipeline_0_valid & (&io_fromPipeline_0_bits_mBIndex))
      entries_7_flowNum <= _entries_flowNum_T;
    else if (_GEN_7)
      entries_7_flowNum <= io_fromSplit_0_req_bits_flowNum;
    if (_GEN_72 & (&io_fromPipeline_0_bits_mBIndex)) begin
      entries_7_exceptionVec_3 <= new_vec_2_3;
      entries_7_exceptionVec_6 <= new_vec_2_6;
      entries_7_exceptionVec_7 <= new_vec_2_7;
      entries_7_exceptionVec_15 <= new_vec_2_15;
      entries_7_exceptionVec_23 <= new_vec_2_23;
      entries_7_uop_trigger <= _sel_oldest_T_5_bits_trigger;
      entries_7_elemIdx <= _sel_oldest_T_5_bits_elemIdx;
      entries_7_vstart <= vstart;
      entries_7_vaNeedExt <= _sel_oldest_T_5_bits_vaNeedExt;
      entries_7_vaddr <= _vaddr_T;
      entries_7_gpaddr <= _sel_oldest_T_5_bits_gpaddr;
      entries_7_isForVSnonLeafPTE <= _sel_oldest_T_5_bits_isForVSnonLeafPTE;
    end
    else begin
      entries_7_exceptionVec_3 <= ~_GEN_7 & entries_7_exceptionVec_3;
      entries_7_exceptionVec_6 <= ~_GEN_7 & entries_7_exceptionVec_6;
      entries_7_exceptionVec_7 <= ~_GEN_7 & entries_7_exceptionVec_7;
      entries_7_exceptionVec_15 <= ~_GEN_7 & entries_7_exceptionVec_15;
      entries_7_exceptionVec_23 <= ~_GEN_7 & entries_7_exceptionVec_23;
      if (_GEN_7) begin
        entries_7_uop_trigger <= 4'h0;
        entries_7_elemIdx <= 8'hFF;
        entries_7_vstart <= 8'h0;
        entries_7_vaddr <= _GEN_68;
      end
    end
    entries_7_uop_flushPipe <= ~_GEN_7 & entries_7_uop_flushPipe;
    entries_7_uop_replayInst <= ~_GEN_7 & entries_7_uop_replayInst;
    io_feedback_0_valid_REG <= feedbackValid;
    if (feedbackValid) begin
      io_feedback_0_bits_r_hit <= ~_GEN_37[entryIdx];
      io_feedback_0_bits_r_sqIdx_flag <= _GEN_64[entryIdx];
      io_feedback_0_bits_r_sqIdx_value <= _GEN_65[entryIdx];
      io_feedback_0_bits_r_lqIdx_flag <= _GEN_66[entryIdx];
      io_feedback_0_bits_r_lqIdx_value <= _GEN_67[entryIdx];
    end
  end // always @(posedge)
  wire              _GEN_74 = _GEN_0 | allocated_0;
  wire              _GEN_75 = _GEN_1 | allocated_1;
  wire              _GEN_76 = _GEN_2 | allocated_2;
  wire              _GEN_77 = _GEN_3 | allocated_3;
  wire              _GEN_78 = _GEN_4 | allocated_4;
  wire              _GEN_79 = _GEN_5 | allocated_5;
  wire              _GEN_80 = _GEN_6 | allocated_6;
  wire              _GEN_81 = _GEN_7 | allocated_7;
  wire              _GEN_82 = needCancel_0 | _GEN_0;
  wire              _GEN_83 = needCancel_1 | _GEN_1;
  wire              _GEN_84 = needCancel_2 | _GEN_2;
  wire              _GEN_85 = needCancel_3 | _GEN_3;
  wire              _GEN_86 = needCancel_4 | _GEN_4;
  wire              _GEN_87 = needCancel_5 | _GEN_5;
  wire              _GEN_88 = needCancel_6 | _GEN_6;
  wire              _GEN_89 = needCancel_7 | _GEN_7;
  wire              _GEN_90 = io_fromPipeline_0_valid & ~io_fromPipeline_0_bits_hit;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      allocated_0 <= 1'h0;
      allocated_1 <= 1'h0;
      allocated_2 <= 1'h0;
      allocated_3 <= 1'h0;
      allocated_4 <= 1'h0;
      allocated_5 <= 1'h0;
      allocated_6 <= 1'h0;
      allocated_7 <= 1'h0;
      uopFinish_0 <= 1'h0;
      uopFinish_1 <= 1'h0;
      uopFinish_2 <= 1'h0;
      uopFinish_3 <= 1'h0;
      uopFinish_4 <= 1'h0;
      uopFinish_5 <= 1'h0;
      uopFinish_6 <= 1'h0;
      uopFinish_7 <= 1'h0;
      needRSReplay_0 <= 1'h0;
      needRSReplay_1 <= 1'h0;
      needRSReplay_2 <= 1'h0;
      needRSReplay_3 <= 1'h0;
      needRSReplay_4 <= 1'h0;
      needRSReplay_5 <= 1'h0;
      needRSReplay_6 <= 1'h0;
      needRSReplay_7 <= 1'h0;
    end
    else begin
      if (selFire) begin
        allocated_0 <= ~(_GEN_22 | needCancel_0) & _GEN_74;
        allocated_1 <= ~(_GEN_24 | needCancel_1) & _GEN_75;
        allocated_2 <= ~(_GEN_26 | needCancel_2) & _GEN_76;
        allocated_3 <= ~(_GEN_28 | needCancel_3) & _GEN_77;
        allocated_4 <= ~(_GEN_30 | needCancel_4) & _GEN_78;
        allocated_5 <= ~(_GEN_32 | needCancel_5) & _GEN_79;
        allocated_6 <= ~(_GEN_34 | needCancel_6) & _GEN_80;
        allocated_7 <= ~((&entryIdx) | needCancel_7) & _GEN_81;
      end
      else begin
        allocated_0 <= ~needCancel_0 & _GEN_74;
        allocated_1 <= ~needCancel_1 & _GEN_75;
        allocated_2 <= ~needCancel_2 & _GEN_76;
        allocated_3 <= ~needCancel_3 & _GEN_77;
        allocated_4 <= ~needCancel_4 & _GEN_78;
        allocated_5 <= ~needCancel_5 & _GEN_79;
        allocated_6 <= ~needCancel_6 & _GEN_80;
        allocated_7 <= ~needCancel_7 & _GEN_81;
      end
      uopFinish_0 <=
        ~_GEN_23
        & (allocated_0 & entries_0_flowNum == 5'h0 & ~needCancel_0 | ~_GEN_82
           & uopFinish_0);
      uopFinish_1 <=
        ~_GEN_25
        & (allocated_1 & entries_1_flowNum == 5'h0 & ~needCancel_1 | ~_GEN_83
           & uopFinish_1);
      uopFinish_2 <=
        ~_GEN_27
        & (allocated_2 & entries_2_flowNum == 5'h0 & ~needCancel_2 | ~_GEN_84
           & uopFinish_2);
      uopFinish_3 <=
        ~_GEN_29
        & (allocated_3 & entries_3_flowNum == 5'h0 & ~needCancel_3 | ~_GEN_85
           & uopFinish_3);
      uopFinish_4 <=
        ~_GEN_31
        & (allocated_4 & entries_4_flowNum == 5'h0 & ~needCancel_4 | ~_GEN_86
           & uopFinish_4);
      uopFinish_5 <=
        ~_GEN_33
        & (allocated_5 & entries_5_flowNum == 5'h0 & ~needCancel_5 | ~_GEN_87
           & uopFinish_5);
      uopFinish_6 <=
        ~_GEN_35
        & (allocated_6 & entries_6_flowNum == 5'h0 & ~needCancel_6 | ~_GEN_88
           & uopFinish_6);
      uopFinish_7 <=
        ~_GEN_36
        & (allocated_7 & entries_7_flowNum == 5'h0 & ~needCancel_7 | ~_GEN_89
           & uopFinish_7);
      needRSReplay_0 <=
        io_fromMisalignBuffer_flush & io_fromMisalignBuffer_mbIndex == 3'h0 | ~_GEN_23
        & (_GEN_90 & _GEN_14 | ~_GEN_82 & needRSReplay_0);
      needRSReplay_1 <=
        io_fromMisalignBuffer_flush & io_fromMisalignBuffer_mbIndex == 3'h1 | ~_GEN_25
        & (_GEN_90 & _GEN_15 | ~_GEN_83 & needRSReplay_1);
      needRSReplay_2 <=
        io_fromMisalignBuffer_flush & io_fromMisalignBuffer_mbIndex == 3'h2 | ~_GEN_27
        & (_GEN_90 & _GEN_16 | ~_GEN_84 & needRSReplay_2);
      needRSReplay_3 <=
        io_fromMisalignBuffer_flush & io_fromMisalignBuffer_mbIndex == 3'h3 | ~_GEN_29
        & (_GEN_90 & _GEN_17 | ~_GEN_85 & needRSReplay_3);
      needRSReplay_4 <=
        io_fromMisalignBuffer_flush & io_fromMisalignBuffer_mbIndex == 3'h4 | ~_GEN_31
        & (_GEN_90 & _GEN_18 | ~_GEN_86 & needRSReplay_4);
      needRSReplay_5 <=
        io_fromMisalignBuffer_flush & io_fromMisalignBuffer_mbIndex == 3'h5 | ~_GEN_33
        & (_GEN_90 & _GEN_19 | ~_GEN_87 & needRSReplay_5);
      needRSReplay_6 <=
        io_fromMisalignBuffer_flush & io_fromMisalignBuffer_mbIndex == 3'h6 | ~_GEN_35
        & (_GEN_90 & _GEN_20 | ~_GEN_88 & needRSReplay_6);
      needRSReplay_7 <=
        io_fromMisalignBuffer_flush & (&io_fromMisalignBuffer_mbIndex) | ~_GEN_36
        & (_GEN_90 & (&io_fromPipeline_0_bits_mBIndex) | ~_GEN_89 & needRSReplay_7);
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:418];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [8:0] i = 9'h0; i < 9'h1A3; i += 9'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        entries_0_mask = _RANDOM[9'h4][15:0];
        entries_0_flowNum = _RANDOM[9'h4][20:16];
        entries_0_exceptionVec_3 = _RANDOM[9'h4][24];
        entries_0_exceptionVec_6 = _RANDOM[9'h4][27];
        entries_0_exceptionVec_7 = _RANDOM[9'h4][28];
        entries_0_exceptionVec_15 = _RANDOM[9'h5][4];
        entries_0_exceptionVec_23 = _RANDOM[9'h5][12];
        entries_0_uop_trigger = _RANDOM[9'h9][6:3];
        entries_0_uop_fuOpType = _RANDOM[9'hB][28:20];
        entries_0_uop_vecWen = _RANDOM[9'hB][31];
        entries_0_uop_v0Wen = _RANDOM[9'hC][0];
        entries_0_uop_vlWen = _RANDOM[9'hC][1];
        entries_0_uop_flushPipe = _RANDOM[9'hC][5];
        entries_0_uop_vpu_vma = _RANDOM[9'hD][22];
        entries_0_uop_vpu_vta = _RANDOM[9'hD][23];
        entries_0_uop_vpu_vsew = _RANDOM[9'hD][25:24];
        entries_0_uop_vpu_vlmul = _RANDOM[9'hD][28:26];
        entries_0_uop_vpu_vm = _RANDOM[9'hE][5];
        entries_0_uop_vpu_vuopIdx = {_RANDOM[9'hE][31:26], _RANDOM[9'hF][0]};
        entries_0_uop_vpu_vmask =
          {_RANDOM[9'hF][31:2],
           _RANDOM[9'h10],
           _RANDOM[9'h11],
           _RANDOM[9'h12],
           _RANDOM[9'h13][1:0]};
        entries_0_uop_vpu_vl = _RANDOM[9'h13][9:2];
        entries_0_uop_vpu_nf = _RANDOM[9'h13][12:10];
        entries_0_uop_vpu_veew = _RANDOM[9'h13][14:13];
        entries_0_uop_uopIdx = {_RANDOM[9'h13][31:28], _RANDOM[9'h14][2:0]};
        entries_0_uop_pdest = _RANDOM[9'h17][9:2];
        entries_0_uop_robIdx_flag = _RANDOM[9'h17][22];
        entries_0_uop_robIdx_value = _RANDOM[9'h17][28:23];
        entries_0_uop_lqIdx_flag = _RANDOM[9'h2C][29];
        entries_0_uop_lqIdx_value = {_RANDOM[9'h2C][31:30], _RANDOM[9'h2D][2:0]};
        entries_0_uop_sqIdx_flag = _RANDOM[9'h2D][3];
        entries_0_uop_sqIdx_value = _RANDOM[9'h2D][8:4];
        entries_0_uop_replayInst = _RANDOM[9'h2D][10];
        entries_0_elemIdx = _RANDOM[9'h2D][30:23];
        entries_0_vstart = {_RANDOM[9'h2D][31], _RANDOM[9'h2E][6:0]};
        entries_0_vaNeedExt = _RANDOM[9'h2E][15];
        entries_0_vaddr = {_RANDOM[9'h2E][31:16], _RANDOM[9'h2F], _RANDOM[9'h30][15:0]};
        entries_0_gpaddr = {_RANDOM[9'h30][31:16], _RANDOM[9'h31], _RANDOM[9'h32][1:0]};
        entries_0_isForVSnonLeafPTE = _RANDOM[9'h32][2];
        entries_0_vlmax = _RANDOM[9'h32][11:4];
        entries_1_mask = _RANDOM[9'h36][27:12];
        entries_1_flowNum = {_RANDOM[9'h36][31:28], _RANDOM[9'h37][0]};
        entries_1_exceptionVec_3 = _RANDOM[9'h37][4];
        entries_1_exceptionVec_6 = _RANDOM[9'h37][7];
        entries_1_exceptionVec_7 = _RANDOM[9'h37][8];
        entries_1_exceptionVec_15 = _RANDOM[9'h37][16];
        entries_1_exceptionVec_23 = _RANDOM[9'h37][24];
        entries_1_uop_trigger = _RANDOM[9'h3B][18:15];
        entries_1_uop_fuOpType = _RANDOM[9'h3E][8:0];
        entries_1_uop_vecWen = _RANDOM[9'h3E][11];
        entries_1_uop_v0Wen = _RANDOM[9'h3E][12];
        entries_1_uop_vlWen = _RANDOM[9'h3E][13];
        entries_1_uop_flushPipe = _RANDOM[9'h3E][17];
        entries_1_uop_vpu_vma = _RANDOM[9'h40][2];
        entries_1_uop_vpu_vta = _RANDOM[9'h40][3];
        entries_1_uop_vpu_vsew = _RANDOM[9'h40][5:4];
        entries_1_uop_vpu_vlmul = _RANDOM[9'h40][8:6];
        entries_1_uop_vpu_vm = _RANDOM[9'h40][17];
        entries_1_uop_vpu_vuopIdx = _RANDOM[9'h41][12:6];
        entries_1_uop_vpu_vmask =
          {_RANDOM[9'h41][31:14],
           _RANDOM[9'h42],
           _RANDOM[9'h43],
           _RANDOM[9'h44],
           _RANDOM[9'h45][13:0]};
        entries_1_uop_vpu_vl = _RANDOM[9'h45][21:14];
        entries_1_uop_vpu_nf = _RANDOM[9'h45][24:22];
        entries_1_uop_vpu_veew = _RANDOM[9'h45][26:25];
        entries_1_uop_uopIdx = _RANDOM[9'h46][14:8];
        entries_1_uop_pdest = _RANDOM[9'h49][21:14];
        entries_1_uop_robIdx_flag = _RANDOM[9'h4A][2];
        entries_1_uop_robIdx_value = _RANDOM[9'h4A][8:3];
        entries_1_uop_lqIdx_flag = _RANDOM[9'h5F][9];
        entries_1_uop_lqIdx_value = _RANDOM[9'h5F][14:10];
        entries_1_uop_sqIdx_flag = _RANDOM[9'h5F][15];
        entries_1_uop_sqIdx_value = _RANDOM[9'h5F][20:16];
        entries_1_uop_replayInst = _RANDOM[9'h5F][22];
        entries_1_elemIdx = _RANDOM[9'h60][10:3];
        entries_1_vstart = _RANDOM[9'h60][18:11];
        entries_1_vaNeedExt = _RANDOM[9'h60][27];
        entries_1_vaddr = {_RANDOM[9'h60][31:28], _RANDOM[9'h61], _RANDOM[9'h62][27:0]};
        entries_1_gpaddr = {_RANDOM[9'h62][31:28], _RANDOM[9'h63], _RANDOM[9'h64][13:0]};
        entries_1_isForVSnonLeafPTE = _RANDOM[9'h64][14];
        entries_1_vlmax = _RANDOM[9'h64][23:16];
        entries_2_mask = {_RANDOM[9'h68][31:24], _RANDOM[9'h69][7:0]};
        entries_2_flowNum = _RANDOM[9'h69][12:8];
        entries_2_exceptionVec_3 = _RANDOM[9'h69][16];
        entries_2_exceptionVec_6 = _RANDOM[9'h69][19];
        entries_2_exceptionVec_7 = _RANDOM[9'h69][20];
        entries_2_exceptionVec_15 = _RANDOM[9'h69][28];
        entries_2_exceptionVec_23 = _RANDOM[9'h6A][4];
        entries_2_uop_trigger = _RANDOM[9'h6D][30:27];
        entries_2_uop_fuOpType = _RANDOM[9'h70][20:12];
        entries_2_uop_vecWen = _RANDOM[9'h70][23];
        entries_2_uop_v0Wen = _RANDOM[9'h70][24];
        entries_2_uop_vlWen = _RANDOM[9'h70][25];
        entries_2_uop_flushPipe = _RANDOM[9'h70][29];
        entries_2_uop_vpu_vma = _RANDOM[9'h72][14];
        entries_2_uop_vpu_vta = _RANDOM[9'h72][15];
        entries_2_uop_vpu_vsew = _RANDOM[9'h72][17:16];
        entries_2_uop_vpu_vlmul = _RANDOM[9'h72][20:18];
        entries_2_uop_vpu_vm = _RANDOM[9'h72][29];
        entries_2_uop_vpu_vuopIdx = _RANDOM[9'h73][24:18];
        entries_2_uop_vpu_vmask =
          {_RANDOM[9'h73][31:26],
           _RANDOM[9'h74],
           _RANDOM[9'h75],
           _RANDOM[9'h76],
           _RANDOM[9'h77][25:0]};
        entries_2_uop_vpu_vl = {_RANDOM[9'h77][31:26], _RANDOM[9'h78][1:0]};
        entries_2_uop_vpu_nf = _RANDOM[9'h78][4:2];
        entries_2_uop_vpu_veew = _RANDOM[9'h78][6:5];
        entries_2_uop_uopIdx = _RANDOM[9'h78][26:20];
        entries_2_uop_pdest = {_RANDOM[9'h7B][31:26], _RANDOM[9'h7C][1:0]};
        entries_2_uop_robIdx_flag = _RANDOM[9'h7C][14];
        entries_2_uop_robIdx_value = _RANDOM[9'h7C][20:15];
        entries_2_uop_lqIdx_flag = _RANDOM[9'h91][21];
        entries_2_uop_lqIdx_value = _RANDOM[9'h91][26:22];
        entries_2_uop_sqIdx_flag = _RANDOM[9'h91][27];
        entries_2_uop_sqIdx_value = {_RANDOM[9'h91][31:28], _RANDOM[9'h92][0]};
        entries_2_uop_replayInst = _RANDOM[9'h92][2];
        entries_2_elemIdx = _RANDOM[9'h92][22:15];
        entries_2_vstart = _RANDOM[9'h92][30:23];
        entries_2_vaNeedExt = _RANDOM[9'h93][7];
        entries_2_vaddr = {_RANDOM[9'h93][31:8], _RANDOM[9'h94], _RANDOM[9'h95][7:0]};
        entries_2_gpaddr = {_RANDOM[9'h95][31:8], _RANDOM[9'h96][25:0]};
        entries_2_isForVSnonLeafPTE = _RANDOM[9'h96][26];
        entries_2_vlmax = {_RANDOM[9'h96][31:28], _RANDOM[9'h97][3:0]};
        entries_3_mask = _RANDOM[9'h9B][19:4];
        entries_3_flowNum = _RANDOM[9'h9B][24:20];
        entries_3_exceptionVec_3 = _RANDOM[9'h9B][28];
        entries_3_exceptionVec_6 = _RANDOM[9'h9B][31];
        entries_3_exceptionVec_7 = _RANDOM[9'h9C][0];
        entries_3_exceptionVec_15 = _RANDOM[9'h9C][8];
        entries_3_exceptionVec_23 = _RANDOM[9'h9C][16];
        entries_3_uop_trigger = _RANDOM[9'hA0][10:7];
        entries_3_uop_fuOpType = {_RANDOM[9'hA2][31:24], _RANDOM[9'hA3][0]};
        entries_3_uop_vecWen = _RANDOM[9'hA3][3];
        entries_3_uop_v0Wen = _RANDOM[9'hA3][4];
        entries_3_uop_vlWen = _RANDOM[9'hA3][5];
        entries_3_uop_flushPipe = _RANDOM[9'hA3][9];
        entries_3_uop_vpu_vma = _RANDOM[9'hA4][26];
        entries_3_uop_vpu_vta = _RANDOM[9'hA4][27];
        entries_3_uop_vpu_vsew = _RANDOM[9'hA4][29:28];
        entries_3_uop_vpu_vlmul = {_RANDOM[9'hA4][31:30], _RANDOM[9'hA5][0]};
        entries_3_uop_vpu_vm = _RANDOM[9'hA5][9];
        entries_3_uop_vpu_vuopIdx = {_RANDOM[9'hA5][31:30], _RANDOM[9'hA6][4:0]};
        entries_3_uop_vpu_vmask =
          {_RANDOM[9'hA6][31:6],
           _RANDOM[9'hA7],
           _RANDOM[9'hA8],
           _RANDOM[9'hA9],
           _RANDOM[9'hAA][5:0]};
        entries_3_uop_vpu_vl = _RANDOM[9'hAA][13:6];
        entries_3_uop_vpu_nf = _RANDOM[9'hAA][16:14];
        entries_3_uop_vpu_veew = _RANDOM[9'hAA][18:17];
        entries_3_uop_uopIdx = _RANDOM[9'hAB][6:0];
        entries_3_uop_pdest = _RANDOM[9'hAE][13:6];
        entries_3_uop_robIdx_flag = _RANDOM[9'hAE][26];
        entries_3_uop_robIdx_value = {_RANDOM[9'hAE][31:27], _RANDOM[9'hAF][0]};
        entries_3_uop_lqIdx_flag = _RANDOM[9'hC4][1];
        entries_3_uop_lqIdx_value = _RANDOM[9'hC4][6:2];
        entries_3_uop_sqIdx_flag = _RANDOM[9'hC4][7];
        entries_3_uop_sqIdx_value = _RANDOM[9'hC4][12:8];
        entries_3_uop_replayInst = _RANDOM[9'hC4][14];
        entries_3_elemIdx = {_RANDOM[9'hC4][31:27], _RANDOM[9'hC5][2:0]};
        entries_3_vstart = _RANDOM[9'hC5][10:3];
        entries_3_vaNeedExt = _RANDOM[9'hC5][19];
        entries_3_vaddr = {_RANDOM[9'hC5][31:20], _RANDOM[9'hC6], _RANDOM[9'hC7][19:0]};
        entries_3_gpaddr = {_RANDOM[9'hC7][31:20], _RANDOM[9'hC8], _RANDOM[9'hC9][5:0]};
        entries_3_isForVSnonLeafPTE = _RANDOM[9'hC9][6];
        entries_3_vlmax = _RANDOM[9'hC9][15:8];
        entries_4_mask = _RANDOM[9'hCD][31:16];
        entries_4_flowNum = _RANDOM[9'hCE][4:0];
        entries_4_exceptionVec_3 = _RANDOM[9'hCE][8];
        entries_4_exceptionVec_6 = _RANDOM[9'hCE][11];
        entries_4_exceptionVec_7 = _RANDOM[9'hCE][12];
        entries_4_exceptionVec_15 = _RANDOM[9'hCE][20];
        entries_4_exceptionVec_23 = _RANDOM[9'hCE][28];
        entries_4_uop_trigger = _RANDOM[9'hD2][22:19];
        entries_4_uop_fuOpType = _RANDOM[9'hD5][12:4];
        entries_4_uop_vecWen = _RANDOM[9'hD5][15];
        entries_4_uop_v0Wen = _RANDOM[9'hD5][16];
        entries_4_uop_vlWen = _RANDOM[9'hD5][17];
        entries_4_uop_flushPipe = _RANDOM[9'hD5][21];
        entries_4_uop_vpu_vma = _RANDOM[9'hD7][6];
        entries_4_uop_vpu_vta = _RANDOM[9'hD7][7];
        entries_4_uop_vpu_vsew = _RANDOM[9'hD7][9:8];
        entries_4_uop_vpu_vlmul = _RANDOM[9'hD7][12:10];
        entries_4_uop_vpu_vm = _RANDOM[9'hD7][21];
        entries_4_uop_vpu_vuopIdx = _RANDOM[9'hD8][16:10];
        entries_4_uop_vpu_vmask =
          {_RANDOM[9'hD8][31:18],
           _RANDOM[9'hD9],
           _RANDOM[9'hDA],
           _RANDOM[9'hDB],
           _RANDOM[9'hDC][17:0]};
        entries_4_uop_vpu_vl = _RANDOM[9'hDC][25:18];
        entries_4_uop_vpu_nf = _RANDOM[9'hDC][28:26];
        entries_4_uop_vpu_veew = _RANDOM[9'hDC][30:29];
        entries_4_uop_uopIdx = _RANDOM[9'hDD][18:12];
        entries_4_uop_pdest = _RANDOM[9'hE0][25:18];
        entries_4_uop_robIdx_flag = _RANDOM[9'hE1][6];
        entries_4_uop_robIdx_value = _RANDOM[9'hE1][12:7];
        entries_4_uop_lqIdx_flag = _RANDOM[9'hF6][13];
        entries_4_uop_lqIdx_value = _RANDOM[9'hF6][18:14];
        entries_4_uop_sqIdx_flag = _RANDOM[9'hF6][19];
        entries_4_uop_sqIdx_value = _RANDOM[9'hF6][24:20];
        entries_4_uop_replayInst = _RANDOM[9'hF6][26];
        entries_4_elemIdx = _RANDOM[9'hF7][14:7];
        entries_4_vstart = _RANDOM[9'hF7][22:15];
        entries_4_vaNeedExt = _RANDOM[9'hF7][31];
        entries_4_vaddr = {_RANDOM[9'hF8], _RANDOM[9'hF9]};
        entries_4_gpaddr = {_RANDOM[9'hFA], _RANDOM[9'hFB][17:0]};
        entries_4_isForVSnonLeafPTE = _RANDOM[9'hFB][18];
        entries_4_vlmax = _RANDOM[9'hFB][27:20];
        entries_5_mask = {_RANDOM[9'hFF][31:28], _RANDOM[9'h100][11:0]};
        entries_5_flowNum = _RANDOM[9'h100][16:12];
        entries_5_exceptionVec_3 = _RANDOM[9'h100][20];
        entries_5_exceptionVec_6 = _RANDOM[9'h100][23];
        entries_5_exceptionVec_7 = _RANDOM[9'h100][24];
        entries_5_exceptionVec_15 = _RANDOM[9'h101][0];
        entries_5_exceptionVec_23 = _RANDOM[9'h101][8];
        entries_5_uop_trigger = {_RANDOM[9'h104][31], _RANDOM[9'h105][2:0]};
        entries_5_uop_fuOpType = _RANDOM[9'h107][24:16];
        entries_5_uop_vecWen = _RANDOM[9'h107][27];
        entries_5_uop_v0Wen = _RANDOM[9'h107][28];
        entries_5_uop_vlWen = _RANDOM[9'h107][29];
        entries_5_uop_flushPipe = _RANDOM[9'h108][1];
        entries_5_uop_vpu_vma = _RANDOM[9'h109][18];
        entries_5_uop_vpu_vta = _RANDOM[9'h109][19];
        entries_5_uop_vpu_vsew = _RANDOM[9'h109][21:20];
        entries_5_uop_vpu_vlmul = _RANDOM[9'h109][24:22];
        entries_5_uop_vpu_vm = _RANDOM[9'h10A][1];
        entries_5_uop_vpu_vuopIdx = _RANDOM[9'h10A][28:22];
        entries_5_uop_vpu_vmask =
          {_RANDOM[9'h10A][31:30],
           _RANDOM[9'h10B],
           _RANDOM[9'h10C],
           _RANDOM[9'h10D],
           _RANDOM[9'h10E][29:0]};
        entries_5_uop_vpu_vl = {_RANDOM[9'h10E][31:30], _RANDOM[9'h10F][5:0]};
        entries_5_uop_vpu_nf = _RANDOM[9'h10F][8:6];
        entries_5_uop_vpu_veew = _RANDOM[9'h10F][10:9];
        entries_5_uop_uopIdx = _RANDOM[9'h10F][30:24];
        entries_5_uop_pdest = {_RANDOM[9'h112][31:30], _RANDOM[9'h113][5:0]};
        entries_5_uop_robIdx_flag = _RANDOM[9'h113][18];
        entries_5_uop_robIdx_value = _RANDOM[9'h113][24:19];
        entries_5_uop_lqIdx_flag = _RANDOM[9'h128][25];
        entries_5_uop_lqIdx_value = _RANDOM[9'h128][30:26];
        entries_5_uop_sqIdx_flag = _RANDOM[9'h128][31];
        entries_5_uop_sqIdx_value = _RANDOM[9'h129][4:0];
        entries_5_uop_replayInst = _RANDOM[9'h129][6];
        entries_5_elemIdx = _RANDOM[9'h129][26:19];
        entries_5_vstart = {_RANDOM[9'h129][31:27], _RANDOM[9'h12A][2:0]};
        entries_5_vaNeedExt = _RANDOM[9'h12A][11];
        entries_5_vaddr =
          {_RANDOM[9'h12A][31:12], _RANDOM[9'h12B], _RANDOM[9'h12C][11:0]};
        entries_5_gpaddr = {_RANDOM[9'h12C][31:12], _RANDOM[9'h12D][29:0]};
        entries_5_isForVSnonLeafPTE = _RANDOM[9'h12D][30];
        entries_5_vlmax = _RANDOM[9'h12E][7:0];
        entries_6_mask = _RANDOM[9'h132][23:8];
        entries_6_flowNum = _RANDOM[9'h132][28:24];
        entries_6_exceptionVec_3 = _RANDOM[9'h133][0];
        entries_6_exceptionVec_6 = _RANDOM[9'h133][3];
        entries_6_exceptionVec_7 = _RANDOM[9'h133][4];
        entries_6_exceptionVec_15 = _RANDOM[9'h133][12];
        entries_6_exceptionVec_23 = _RANDOM[9'h133][20];
        entries_6_uop_trigger = _RANDOM[9'h137][14:11];
        entries_6_uop_fuOpType = {_RANDOM[9'h139][31:28], _RANDOM[9'h13A][4:0]};
        entries_6_uop_vecWen = _RANDOM[9'h13A][7];
        entries_6_uop_v0Wen = _RANDOM[9'h13A][8];
        entries_6_uop_vlWen = _RANDOM[9'h13A][9];
        entries_6_uop_flushPipe = _RANDOM[9'h13A][13];
        entries_6_uop_vpu_vma = _RANDOM[9'h13B][30];
        entries_6_uop_vpu_vta = _RANDOM[9'h13B][31];
        entries_6_uop_vpu_vsew = _RANDOM[9'h13C][1:0];
        entries_6_uop_vpu_vlmul = _RANDOM[9'h13C][4:2];
        entries_6_uop_vpu_vm = _RANDOM[9'h13C][13];
        entries_6_uop_vpu_vuopIdx = _RANDOM[9'h13D][8:2];
        entries_6_uop_vpu_vmask =
          {_RANDOM[9'h13D][31:10],
           _RANDOM[9'h13E],
           _RANDOM[9'h13F],
           _RANDOM[9'h140],
           _RANDOM[9'h141][9:0]};
        entries_6_uop_vpu_vl = _RANDOM[9'h141][17:10];
        entries_6_uop_vpu_nf = _RANDOM[9'h141][20:18];
        entries_6_uop_vpu_veew = _RANDOM[9'h141][22:21];
        entries_6_uop_uopIdx = _RANDOM[9'h142][10:4];
        entries_6_uop_pdest = _RANDOM[9'h145][17:10];
        entries_6_uop_robIdx_flag = _RANDOM[9'h145][30];
        entries_6_uop_robIdx_value = {_RANDOM[9'h145][31], _RANDOM[9'h146][4:0]};
        entries_6_uop_lqIdx_flag = _RANDOM[9'h15B][5];
        entries_6_uop_lqIdx_value = _RANDOM[9'h15B][10:6];
        entries_6_uop_sqIdx_flag = _RANDOM[9'h15B][11];
        entries_6_uop_sqIdx_value = _RANDOM[9'h15B][16:12];
        entries_6_uop_replayInst = _RANDOM[9'h15B][18];
        entries_6_elemIdx = {_RANDOM[9'h15B][31], _RANDOM[9'h15C][6:0]};
        entries_6_vstart = _RANDOM[9'h15C][14:7];
        entries_6_vaNeedExt = _RANDOM[9'h15C][23];
        entries_6_vaddr =
          {_RANDOM[9'h15C][31:24], _RANDOM[9'h15D], _RANDOM[9'h15E][23:0]};
        entries_6_gpaddr =
          {_RANDOM[9'h15E][31:24], _RANDOM[9'h15F], _RANDOM[9'h160][9:0]};
        entries_6_isForVSnonLeafPTE = _RANDOM[9'h160][10];
        entries_6_vlmax = _RANDOM[9'h160][19:12];
        entries_7_mask = {_RANDOM[9'h164][31:20], _RANDOM[9'h165][3:0]};
        entries_7_flowNum = _RANDOM[9'h165][8:4];
        entries_7_exceptionVec_3 = _RANDOM[9'h165][12];
        entries_7_exceptionVec_6 = _RANDOM[9'h165][15];
        entries_7_exceptionVec_7 = _RANDOM[9'h165][16];
        entries_7_exceptionVec_15 = _RANDOM[9'h165][24];
        entries_7_exceptionVec_23 = _RANDOM[9'h166][0];
        entries_7_uop_trigger = _RANDOM[9'h169][26:23];
        entries_7_uop_fuOpType = _RANDOM[9'h16C][16:8];
        entries_7_uop_vecWen = _RANDOM[9'h16C][19];
        entries_7_uop_v0Wen = _RANDOM[9'h16C][20];
        entries_7_uop_vlWen = _RANDOM[9'h16C][21];
        entries_7_uop_flushPipe = _RANDOM[9'h16C][25];
        entries_7_uop_vpu_vma = _RANDOM[9'h16E][10];
        entries_7_uop_vpu_vta = _RANDOM[9'h16E][11];
        entries_7_uop_vpu_vsew = _RANDOM[9'h16E][13:12];
        entries_7_uop_vpu_vlmul = _RANDOM[9'h16E][16:14];
        entries_7_uop_vpu_vm = _RANDOM[9'h16E][25];
        entries_7_uop_vpu_vuopIdx = _RANDOM[9'h16F][20:14];
        entries_7_uop_vpu_vmask =
          {_RANDOM[9'h16F][31:22],
           _RANDOM[9'h170],
           _RANDOM[9'h171],
           _RANDOM[9'h172],
           _RANDOM[9'h173][21:0]};
        entries_7_uop_vpu_vl = _RANDOM[9'h173][29:22];
        entries_7_uop_vpu_nf = {_RANDOM[9'h173][31:30], _RANDOM[9'h174][0]};
        entries_7_uop_vpu_veew = _RANDOM[9'h174][2:1];
        entries_7_uop_uopIdx = _RANDOM[9'h174][22:16];
        entries_7_uop_pdest = _RANDOM[9'h177][29:22];
        entries_7_uop_robIdx_flag = _RANDOM[9'h178][10];
        entries_7_uop_robIdx_value = _RANDOM[9'h178][16:11];
        entries_7_uop_lqIdx_flag = _RANDOM[9'h18D][17];
        entries_7_uop_lqIdx_value = _RANDOM[9'h18D][22:18];
        entries_7_uop_sqIdx_flag = _RANDOM[9'h18D][23];
        entries_7_uop_sqIdx_value = _RANDOM[9'h18D][28:24];
        entries_7_uop_replayInst = _RANDOM[9'h18D][30];
        entries_7_elemIdx = _RANDOM[9'h18E][18:11];
        entries_7_vstart = _RANDOM[9'h18E][26:19];
        entries_7_vaNeedExt = _RANDOM[9'h18F][3];
        entries_7_vaddr = {_RANDOM[9'h18F][31:4], _RANDOM[9'h190], _RANDOM[9'h191][3:0]};
        entries_7_gpaddr = {_RANDOM[9'h191][31:4], _RANDOM[9'h192][21:0]};
        entries_7_isForVSnonLeafPTE = _RANDOM[9'h192][22];
        entries_7_vlmax = _RANDOM[9'h192][31:24];
        allocated_0 = _RANDOM[9'h193][0];
        allocated_1 = _RANDOM[9'h193][1];
        allocated_2 = _RANDOM[9'h193][2];
        allocated_3 = _RANDOM[9'h193][3];
        allocated_4 = _RANDOM[9'h193][4];
        allocated_5 = _RANDOM[9'h193][5];
        allocated_6 = _RANDOM[9'h193][6];
        allocated_7 = _RANDOM[9'h193][7];
        uopFinish_0 = _RANDOM[9'h193][8];
        uopFinish_1 = _RANDOM[9'h193][9];
        uopFinish_2 = _RANDOM[9'h193][10];
        uopFinish_3 = _RANDOM[9'h193][11];
        uopFinish_4 = _RANDOM[9'h193][12];
        uopFinish_5 = _RANDOM[9'h193][13];
        uopFinish_6 = _RANDOM[9'h193][14];
        uopFinish_7 = _RANDOM[9'h193][15];
        needRSReplay_0 = _RANDOM[9'h193][16];
        needRSReplay_1 = _RANDOM[9'h193][17];
        needRSReplay_2 = _RANDOM[9'h193][18];
        needRSReplay_3 = _RANDOM[9'h193][19];
        needRSReplay_4 = _RANDOM[9'h193][20];
        needRSReplay_5 = _RANDOM[9'h193][21];
        needRSReplay_6 = _RANDOM[9'h193][22];
        needRSReplay_7 = _RANDOM[9'h193][23];
        io_feedback_0_valid_REG = _RANDOM[9'h1A1][24];
        io_feedback_0_bits_r_hit = _RANDOM[9'h1A2][0];
        io_feedback_0_bits_r_sqIdx_flag = _RANDOM[9'h1A2][12];
        io_feedback_0_bits_r_sqIdx_value = _RANDOM[9'h1A2][17:13];
        io_feedback_0_bits_r_lqIdx_flag = _RANDOM[9'h1A2][18];
        io_feedback_0_bits_r_lqIdx_value = _RANDOM[9'h1A2][23:19];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        allocated_0 = 1'h0;
        allocated_1 = 1'h0;
        allocated_2 = 1'h0;
        allocated_3 = 1'h0;
        allocated_4 = 1'h0;
        allocated_5 = 1'h0;
        allocated_6 = 1'h0;
        allocated_7 = 1'h0;
        uopFinish_0 = 1'h0;
        uopFinish_1 = 1'h0;
        uopFinish_2 = 1'h0;
        uopFinish_3 = 1'h0;
        uopFinish_4 = 1'h0;
        uopFinish_5 = 1'h0;
        uopFinish_6 = 1'h0;
        uopFinish_7 = 1'h0;
        needRSReplay_0 = 1'h0;
        needRSReplay_1 = 1'h0;
        needRSReplay_2 = 1'h0;
        needRSReplay_3 = 1'h0;
        needRSReplay_4 = 1'h0;
        needRSReplay_5 = 1'h0;
        needRSReplay_6 = 1'h0;
        needRSReplay_7 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  FreeList_1 freeCount_freeList (
    .clock             (clock),
    .reset             (reset),
    .io_allocateSlot_0 (_freeCount_freeList_io_allocateSlot_0),
    .io_doAllocate_0   (_GEN),
    .io_free
      ({freeMaskVec_7,
        freeMaskVec_6,
        freeMaskVec_5,
        freeMaskVec_4,
        freeMaskVec_3,
        freeMaskVec_2,
        freeMaskVec_1,
        freeMaskVec_0}),
    .io_validCount     (_freeCount_freeList_io_validCount)
  );
  NewPipelineConnectPipe_27 VMergebufferPipelineConnect0 (
    .clock                           (clock),
    .reset                           (reset),
    .io_in_ready                     (_VMergebufferPipelineConnect0_io_in_ready),
    .io_in_valid                     (pipelineOut_0_valid),
    .io_in_bits_uop_exceptionVec_3   (_GEN_8[entryIdx]),
    .io_in_bits_uop_exceptionVec_4   (1'h0),
    .io_in_bits_uop_exceptionVec_5   (1'h0),
    .io_in_bits_uop_exceptionVec_6   (_GEN_9[entryIdx]),
    .io_in_bits_uop_exceptionVec_7   (_GEN_10[entryIdx]),
    .io_in_bits_uop_exceptionVec_13  (1'h0),
    .io_in_bits_uop_exceptionVec_15  (_GEN_11[entryIdx]),
    .io_in_bits_uop_exceptionVec_21  (1'h0),
    .io_in_bits_uop_exceptionVec_23  (_GEN_12[entryIdx]),
    .io_in_bits_uop_trigger          (_GEN_38[entryIdx]),
    .io_in_bits_uop_fuOpType         (_GEN_13[entryIdx]),
    .io_in_bits_uop_vecWen           (_GEN_39[entryIdx]),
    .io_in_bits_uop_v0Wen            (_GEN_40[entryIdx]),
    .io_in_bits_uop_vlWen            (_GEN_41[entryIdx]),
    .io_in_bits_uop_flushPipe        (_GEN_42[entryIdx]),
    .io_in_bits_uop_vpu_vma          (_GEN_43[entryIdx]),
    .io_in_bits_uop_vpu_vta          (_GEN_44[entryIdx]),
    .io_in_bits_uop_vpu_vsew         (_GEN_45[entryIdx]),
    .io_in_bits_uop_vpu_vlmul        (_GEN_46[entryIdx]),
    .io_in_bits_uop_vpu_vm           (_GEN_47[entryIdx]),
    .io_in_bits_uop_vpu_vstart       (_GEN_58[entryIdx]),
    .io_in_bits_uop_vpu_vuopIdx      (_GEN_48[entryIdx]),
    .io_in_bits_uop_vpu_vmask        (_GEN_49[entryIdx]),
    .io_in_bits_uop_vpu_vl           (_GEN_50[entryIdx]),
    .io_in_bits_uop_vpu_nf           (_GEN_51[entryIdx]),
    .io_in_bits_uop_vpu_veew         (_GEN_52[entryIdx]),
    .io_in_bits_uop_pdest            (_GEN_54[entryIdx]),
    .io_in_bits_uop_robIdx_flag      (_GEN_55[entryIdx]),
    .io_in_bits_uop_robIdx_value     (_GEN_56[entryIdx]),
    .io_in_bits_uop_replayInst       (_GEN_57[entryIdx]),
    .io_in_bits_data                 (128'h0),
    .io_in_bits_vdIdx                (3'h0),
    .io_in_bits_vdIdxInField         (3'h0),
    .io_out_ready                    (io_uopWriteback_0_ready),
    .io_out_valid                    (_VMergebufferPipelineConnect0_io_out_valid),
    .io_out_bits_uop_exceptionVec_3  (io_uopWriteback_0_bits_uop_exceptionVec_3),
    .io_out_bits_uop_exceptionVec_4  (/* unused */),
    .io_out_bits_uop_exceptionVec_5  (/* unused */),
    .io_out_bits_uop_exceptionVec_6  (io_uopWriteback_0_bits_uop_exceptionVec_6),
    .io_out_bits_uop_exceptionVec_7  (io_uopWriteback_0_bits_uop_exceptionVec_7),
    .io_out_bits_uop_exceptionVec_13 (/* unused */),
    .io_out_bits_uop_exceptionVec_15 (io_uopWriteback_0_bits_uop_exceptionVec_15),
    .io_out_bits_uop_exceptionVec_21 (/* unused */),
    .io_out_bits_uop_exceptionVec_23 (io_uopWriteback_0_bits_uop_exceptionVec_23),
    .io_out_bits_uop_trigger         (io_uopWriteback_0_bits_uop_trigger),
    .io_out_bits_uop_fuOpType        (io_uopWriteback_0_bits_uop_fuOpType),
    .io_out_bits_uop_vecWen          (io_uopWriteback_0_bits_uop_vecWen),
    .io_out_bits_uop_v0Wen           (io_uopWriteback_0_bits_uop_v0Wen),
    .io_out_bits_uop_vlWen           (io_uopWriteback_0_bits_uop_vlWen),
    .io_out_bits_uop_flushPipe       (io_uopWriteback_0_bits_uop_flushPipe),
    .io_out_bits_uop_vpu_vma         (io_uopWriteback_0_bits_uop_vpu_vma),
    .io_out_bits_uop_vpu_vta         (io_uopWriteback_0_bits_uop_vpu_vta),
    .io_out_bits_uop_vpu_vsew        (io_uopWriteback_0_bits_uop_vpu_vsew),
    .io_out_bits_uop_vpu_vlmul       (io_uopWriteback_0_bits_uop_vpu_vlmul),
    .io_out_bits_uop_vpu_vm          (io_uopWriteback_0_bits_uop_vpu_vm),
    .io_out_bits_uop_vpu_vstart      (io_uopWriteback_0_bits_uop_vpu_vstart),
    .io_out_bits_uop_vpu_vuopIdx     (io_uopWriteback_0_bits_uop_vpu_vuopIdx),
    .io_out_bits_uop_vpu_vmask       (io_uopWriteback_0_bits_uop_vpu_vmask),
    .io_out_bits_uop_vpu_vl          (io_uopWriteback_0_bits_uop_vpu_vl),
    .io_out_bits_uop_vpu_nf          (io_uopWriteback_0_bits_uop_vpu_nf),
    .io_out_bits_uop_vpu_veew        (io_uopWriteback_0_bits_uop_vpu_veew),
    .io_out_bits_uop_pdest           (io_uopWriteback_0_bits_uop_pdest),
    .io_out_bits_uop_robIdx_flag
      (_VMergebufferPipelineConnect0_io_out_bits_uop_robIdx_flag),
    .io_out_bits_uop_robIdx_value
      (_VMergebufferPipelineConnect0_io_out_bits_uop_robIdx_value),
    .io_out_bits_uop_replayInst      (io_uopWriteback_0_bits_uop_replayInst),
    .io_out_bits_data                (io_uopWriteback_0_bits_data),
    .io_out_bits_vdIdx               (io_uopWriteback_0_bits_vdIdx),
    .io_out_bits_vdIdxInField        (io_uopWriteback_0_bits_vdIdxInField),
    .io_rightOutFire
      (io_uopWriteback_0_ready & _VMergebufferPipelineConnect0_io_out_valid),
    .io_isFlush
      (_VMergebufferPipelineConnect0_io_in_ready & pipelineOut_0_valid
         ? io_redirect_valid
           & (io_redirect_bits_level & _flushItself_T_1 == _flushItself_T_6
              | differentFlag ^ compare)
         : io_redirect_valid
           & (io_redirect_bits_level
              & {_VMergebufferPipelineConnect0_io_out_bits_uop_robIdx_flag,
                 _VMergebufferPipelineConnect0_io_out_bits_uop_robIdx_value} == _flushItself_T_6
              | _VMergebufferPipelineConnect0_io_out_bits_uop_robIdx_flag
              ^ io_redirect_bits_robIdx_flag
              ^ _VMergebufferPipelineConnect0_io_out_bits_uop_robIdx_value > io_redirect_bits_robIdx_value))
  );
  assign io_fromSplit_0_req_ready = |_freeCount_T;
  assign io_fromSplit_0_resp_valid = |_freeCount_T;
  assign io_fromSplit_0_resp_bits_mBIndex = {1'h0, _freeCount_freeList_io_allocateSlot_0};
  assign io_uopWriteback_0_valid = _VMergebufferPipelineConnect0_io_out_valid;
  assign io_uopWriteback_0_bits_uop_robIdx_flag =
    _VMergebufferPipelineConnect0_io_out_bits_uop_robIdx_flag;
  assign io_uopWriteback_0_bits_uop_robIdx_value =
    _VMergebufferPipelineConnect0_io_out_bits_uop_robIdx_value;
  assign io_toLsq_0_valid = feedbackValid & ~_GEN_37[entryIdx];
  assign io_toLsq_0_bits_robidx_flag = _GEN_55[entryIdx];
  assign io_toLsq_0_bits_robidx_value = _GEN_56[entryIdx];
  assign io_toLsq_0_bits_uopidx = _GEN_53[entryIdx];
  assign io_toLsq_0_bits_vaddr = _GEN_60[entryIdx];
  assign io_toLsq_0_bits_vaNeedExt = _GEN_59[entryIdx];
  assign io_toLsq_0_bits_gpaddr = _GEN_61[entryIdx];
  assign io_toLsq_0_bits_isForVSnonLeafPTE = _GEN_62[entryIdx];
  assign io_toLsq_0_bits_feedback_0 = |_GEN_63;
  assign io_toLsq_0_bits_feedback_1 = ~(|_GEN_63);
  assign io_toLsq_0_bits_exceptionVec_3 = _GEN_8[entryIdx];
  assign io_toLsq_0_bits_exceptionVec_6 = _GEN_9[entryIdx];
  assign io_toLsq_0_bits_exceptionVec_7 = _GEN_10[entryIdx];
  assign io_toLsq_0_bits_exceptionVec_15 = _GEN_11[entryIdx];
  assign io_toLsq_0_bits_exceptionVec_23 = _GEN_12[entryIdx];
  assign io_feedback_0_valid = io_feedback_0_valid_REG;
  assign io_feedback_0_bits_hit = io_feedback_0_bits_r_hit;
  assign io_feedback_0_bits_sqIdx_flag = io_feedback_0_bits_r_sqIdx_flag;
  assign io_feedback_0_bits_sqIdx_value = io_feedback_0_bits_r_sqIdx_value;
  assign io_feedback_0_bits_lqIdx_flag = io_feedback_0_bits_r_lqIdx_flag;
  assign io_feedback_0_bits_lqIdx_value = io_feedback_0_bits_r_lqIdx_value;
endmodule

