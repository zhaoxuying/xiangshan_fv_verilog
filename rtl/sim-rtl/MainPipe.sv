// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module MainPipe(
  input          clock,
  input          reset,
  output         io_probe_req_ready,
  input          io_probe_req_valid,
  input          io_probe_req_bits_miss,
  input  [1:0]   io_probe_req_bits_miss_id,
  input  [3:0]   io_probe_req_bits_occupy_way,
  input          io_probe_req_bits_miss_fail_cause_evict_btot,
  input          io_probe_req_bits_probe,
  input  [1:0]   io_probe_req_bits_probe_param,
  input          io_probe_req_bits_probe_need_data,
  input  [3:0]   io_probe_req_bits_source,
  input  [4:0]   io_probe_req_bits_cmd,
  input  [49:0]  io_probe_req_bits_vaddr,
  input  [47:0]  io_probe_req_bits_addr,
  input  [511:0] io_probe_req_bits_store_data,
  input  [63:0]  io_probe_req_bits_store_mask,
  input  [2:0]   io_probe_req_bits_word_idx,
  input  [127:0] io_probe_req_bits_amo_data,
  input  [15:0]  io_probe_req_bits_amo_mask,
  input  [127:0] io_probe_req_bits_amo_cmp,
  input          io_probe_req_bits_error,
  input          io_probe_req_bits_replace,
  input  [3:0]   io_probe_req_bits_id,
  input          io_miss_req_ready,
  output         io_miss_req_valid,
  output [3:0]   io_miss_req_bits_source,
  output [4:0]   io_miss_req_bits_cmd,
  output [47:0]  io_miss_req_bits_addr,
  output [49:0]  io_miss_req_bits_vaddr,
  output         io_miss_req_bits_full_overwrite,
  output [2:0]   io_miss_req_bits_word_idx,
  output [127:0] io_miss_req_bits_amo_data,
  output [15:0]  io_miss_req_bits_amo_mask,
  output [127:0] io_miss_req_bits_amo_cmp,
  output [1:0]   io_miss_req_bits_req_coh_state,
  output [3:0]   io_miss_req_bits_id,
  output         io_miss_req_bits_isBtoT,
  output [3:0]   io_miss_req_bits_occupy_way,
  output         io_miss_req_bits_cancel,
  output [511:0] io_miss_req_bits_store_data,
  output [63:0]  io_miss_req_bits_store_mask,
  output         io_refill_req_ready,
  input          io_refill_req_valid,
  input          io_refill_req_bits_miss,
  input  [1:0]   io_refill_req_bits_miss_id,
  input  [3:0]   io_refill_req_bits_occupy_way,
  input          io_refill_req_bits_miss_fail_cause_evict_btot,
  input  [3:0]   io_refill_req_bits_source,
  input  [4:0]   io_refill_req_bits_cmd,
  input  [49:0]  io_refill_req_bits_vaddr,
  input  [47:0]  io_refill_req_bits_addr,
  input  [2:0]   io_refill_req_bits_word_idx,
  input  [127:0] io_refill_req_bits_amo_data,
  input  [15:0]  io_refill_req_bits_amo_mask,
  input  [127:0] io_refill_req_bits_amo_cmp,
  input  [3:0]   io_refill_req_bits_id,
  output         io_wbq_conflict_check_valid,
  output [47:0]  io_wbq_conflict_check_bits,
  input          io_wbq_block_miss_req,
  output         io_store_req_ready,
  input          io_store_req_valid,
  input  [49:0]  io_store_req_bits_vaddr,
  input  [47:0]  io_store_req_bits_addr,
  input  [511:0] io_store_req_bits_data,
  input  [63:0]  io_store_req_bits_mask,
  input  [3:0]   io_store_req_bits_id,
  output         io_store_replay_resp_valid,
  output [3:0]   io_store_replay_resp_bits_id,
  output         io_store_hit_resp_valid,
  output [3:0]   io_store_hit_resp_bits_id,
  output         io_atomic_req_ready,
  input          io_atomic_req_valid,
  input  [4:0]   io_atomic_req_bits_cmd,
  input  [49:0]  io_atomic_req_bits_vaddr,
  input  [47:0]  io_atomic_req_bits_addr,
  input  [2:0]   io_atomic_req_bits_word_idx,
  input  [127:0] io_atomic_req_bits_amo_data,
  input  [15:0]  io_atomic_req_bits_amo_mask,
  input  [127:0] io_atomic_req_bits_amo_cmp,
  output         io_atomic_resp_valid,
  output [3:0]   io_atomic_resp_bits_source,
  output [127:0] io_atomic_resp_bits_data,
  output         io_atomic_resp_bits_miss,
  output [1:0]   io_atomic_resp_bits_miss_id,
  output         io_atomic_resp_bits_replay,
  output         io_atomic_resp_bits_error,
  output         io_atomic_resp_bits_ack_miss_queue,
  output [3:0]   io_atomic_resp_bits_id,
  output         io_mainpipe_info_s2_valid,
  output [1:0]   io_mainpipe_info_s2_miss_id,
  output         io_mainpipe_info_s2_replay_to_mq,
  output         io_mainpipe_info_s2_evict_BtoT_way,
  output [3:0]   io_mainpipe_info_s2_next_evict_way,
  output         io_mainpipe_info_s3_valid,
  output [1:0]   io_mainpipe_info_s3_miss_id,
  output         io_mainpipe_info_s3_refill_resp,
  input          io_refill_info_valid,
  input  [511:0] io_refill_info_bits_store_data,
  input  [63:0]  io_refill_info_bits_store_mask,
  input  [1:0]   io_refill_info_bits_miss_param,
  input          io_refill_info_bits_error,
  input          io_wb_ready,
  output         io_wb_valid,
  output [2:0]   io_wb_bits_param,
  output         io_wb_bits_voluntary,
  output         io_wb_bits_hasData,
  output         io_wb_bits_corrupt,
  output [47:0]  io_wb_bits_addr,
  output [511:0] io_wb_bits_data,
  input          io_data_readline_ready,
  output         io_data_readline_valid,
  output [3:0]   io_data_readline_bits_way_en,
  output [47:0]  io_data_readline_bits_addr,
  output [7:0]   io_data_readline_bits_rmask,
  output         io_data_readline_can_go,
  output         io_data_readline_stall,
  output         io_data_readline_can_resp,
  input  [63:0]  io_data_resp_0_raw_data,
  input  [63:0]  io_data_resp_1_raw_data,
  input  [63:0]  io_data_resp_2_raw_data,
  input  [63:0]  io_data_resp_3_raw_data,
  input  [63:0]  io_data_resp_4_raw_data,
  input  [63:0]  io_data_resp_5_raw_data,
  input  [63:0]  io_data_resp_6_raw_data,
  input  [63:0]  io_data_resp_7_raw_data,
  input          io_readline_error_delayed,
  output         io_data_write_valid,
  output [7:0]   io_data_write_bits_wmask,
  output [63:0]  io_data_write_bits_data_0,
  output [63:0]  io_data_write_bits_data_1,
  output [63:0]  io_data_write_bits_data_2,
  output [63:0]  io_data_write_bits_data_3,
  output [63:0]  io_data_write_bits_data_4,
  output [63:0]  io_data_write_bits_data_5,
  output [63:0]  io_data_write_bits_data_6,
  output [63:0]  io_data_write_bits_data_7,
  output         io_data_write_dup_0_valid,
  output [3:0]   io_data_write_dup_0_bits_way_en,
  output [47:0]  io_data_write_dup_0_bits_addr,
  output         io_data_write_dup_1_valid,
  output [3:0]   io_data_write_dup_1_bits_way_en,
  output [47:0]  io_data_write_dup_1_bits_addr,
  output         io_data_write_dup_2_valid,
  output [3:0]   io_data_write_dup_2_bits_way_en,
  output [47:0]  io_data_write_dup_2_bits_addr,
  output         io_data_write_dup_3_valid,
  output [3:0]   io_data_write_dup_3_bits_way_en,
  output [47:0]  io_data_write_dup_3_bits_addr,
  output         io_data_write_dup_4_valid,
  output [3:0]   io_data_write_dup_4_bits_way_en,
  output [47:0]  io_data_write_dup_4_bits_addr,
  output         io_data_write_dup_5_valid,
  output [3:0]   io_data_write_dup_5_bits_way_en,
  output [47:0]  io_data_write_dup_5_bits_addr,
  output         io_data_write_dup_6_valid,
  output [3:0]   io_data_write_dup_6_bits_way_en,
  output [47:0]  io_data_write_dup_6_bits_addr,
  output         io_data_write_dup_7_valid,
  output [3:0]   io_data_write_dup_7_bits_way_en,
  output [47:0]  io_data_write_dup_7_bits_addr,
  output         io_meta_read_valid,
  output         io_meta_read_bits_idx,
  input  [1:0]   io_meta_resp_0_coh_state,
  input  [1:0]   io_meta_resp_1_coh_state,
  input  [1:0]   io_meta_resp_2_coh_state,
  input  [1:0]   io_meta_resp_3_coh_state,
  output         io_meta_write_valid,
  output         io_meta_write_bits_idx,
  output [3:0]   io_meta_write_bits_way_en,
  output [1:0]   io_meta_write_bits_meta_coh_state,
  input          io_extra_meta_resp_0_error,
  input          io_extra_meta_resp_1_error,
  input          io_extra_meta_resp_2_error,
  input          io_extra_meta_resp_3_error,
  output         io_error_flag_write_valid,
  output         io_error_flag_write_bits_idx,
  output [3:0]   io_error_flag_write_bits_way_en,
  output         io_error_flag_write_bits_flag,
  input          io_tag_read_ready,
  output         io_tag_read_valid,
  output         io_tag_read_bits_idx,
  input  [47:0]  io_tag_resp_0,
  input  [47:0]  io_tag_resp_1,
  input  [47:0]  io_tag_resp_2,
  input  [47:0]  io_tag_resp_3,
  output         io_tag_write_valid,
  output         io_tag_write_bits_idx,
  output [3:0]   io_tag_write_bits_way_en,
  output [40:0]  io_tag_write_bits_tag,
  output         io_tag_write_intend,
  output         io_replace_access_valid,
  output         io_replace_access_bits_set,
  output [1:0]   io_replace_access_bits_way,
  output         io_replace_way_set_bits,
  input  [1:0]   io_replace_way_way,
  output         io_evict_set,
  input  [3:0]   io_btot_ways_for_set,
  output         io_replace_addr_valid,
  output [47:0]  io_replace_addr_bits,
  input          io_replace_block,
  output         io_status_dup_0_s1_valid,
  output         io_status_dup_0_s1_bits_set,
  output [3:0]   io_status_dup_0_s1_bits_way_en,
  output         io_status_dup_0_s2_valid,
  output         io_status_dup_0_s2_bits_set,
  output [3:0]   io_status_dup_0_s2_bits_way_en,
  output         io_status_dup_0_s3_valid,
  output         io_status_dup_0_s3_bits_set,
  output [3:0]   io_status_dup_0_s3_bits_way_en,
  output         io_status_dup_1_s1_valid,
  output         io_status_dup_1_s1_bits_set,
  output [3:0]   io_status_dup_1_s1_bits_way_en,
  output         io_status_dup_1_s2_valid,
  output         io_status_dup_1_s2_bits_set,
  output [3:0]   io_status_dup_1_s2_bits_way_en,
  output         io_status_dup_1_s3_valid,
  output         io_status_dup_1_s3_bits_set,
  output [3:0]   io_status_dup_1_s3_bits_way_en,
  output         io_status_dup_2_s1_valid,
  output         io_status_dup_2_s1_bits_set,
  output [3:0]   io_status_dup_2_s1_bits_way_en,
  output         io_status_dup_2_s2_valid,
  output         io_status_dup_2_s2_bits_set,
  output [3:0]   io_status_dup_2_s2_bits_way_en,
  output         io_status_dup_2_s3_valid,
  output         io_status_dup_2_s3_bits_set,
  output [3:0]   io_status_dup_2_s3_bits_way_en,
  output         io_status_dup_3_s1_valid,
  output         io_status_dup_3_s1_bits_set,
  output [3:0]   io_status_dup_3_s1_bits_way_en,
  output         io_status_dup_3_s2_valid,
  output         io_status_dup_3_s2_bits_set,
  output [3:0]   io_status_dup_3_s2_bits_way_en,
  output         io_status_dup_3_s3_valid,
  output         io_status_dup_3_s3_bits_set,
  output [3:0]   io_status_dup_3_s3_bits_way_en,
  output         io_status_dup_4_s1_valid,
  output         io_status_dup_4_s1_bits_set,
  output [3:0]   io_status_dup_4_s1_bits_way_en,
  output         io_status_dup_4_s2_valid,
  output         io_status_dup_4_s2_bits_set,
  output [3:0]   io_status_dup_4_s2_bits_way_en,
  output         io_status_dup_4_s3_valid,
  output         io_status_dup_4_s3_bits_set,
  output [3:0]   io_status_dup_4_s3_bits_way_en,
  output         io_status_dup_5_s1_valid,
  output         io_status_dup_5_s1_bits_set,
  output [3:0]   io_status_dup_5_s1_bits_way_en,
  output         io_status_dup_5_s2_valid,
  output         io_status_dup_5_s2_bits_set,
  output [3:0]   io_status_dup_5_s2_bits_way_en,
  output         io_status_dup_5_s3_valid,
  output         io_status_dup_5_s3_bits_set,
  output [3:0]   io_status_dup_5_s3_bits_way_en,
  output         io_status_dup_6_s1_valid,
  output         io_status_dup_6_s1_bits_set,
  output [3:0]   io_status_dup_6_s1_bits_way_en,
  output         io_status_dup_6_s2_valid,
  output         io_status_dup_6_s2_bits_set,
  output [3:0]   io_status_dup_6_s2_bits_way_en,
  output         io_status_dup_6_s3_valid,
  output         io_status_dup_6_s3_bits_set,
  output [3:0]   io_status_dup_6_s3_bits_way_en,
  output         io_status_dup_7_s1_valid,
  output         io_status_dup_7_s1_bits_set,
  output [3:0]   io_status_dup_7_s1_bits_way_en,
  output         io_status_dup_7_s2_valid,
  output         io_status_dup_7_s2_bits_set,
  output [3:0]   io_status_dup_7_s2_bits_way_en,
  output         io_status_dup_7_s3_valid,
  output         io_status_dup_7_s3_bits_set,
  output [3:0]   io_status_dup_7_s3_bits_way_en,
  output         io_status_dup_8_s1_valid,
  output         io_status_dup_8_s1_bits_set,
  output [3:0]   io_status_dup_8_s1_bits_way_en,
  output         io_status_dup_8_s2_valid,
  output         io_status_dup_8_s2_bits_set,
  output [3:0]   io_status_dup_8_s2_bits_way_en,
  output         io_status_dup_8_s3_valid,
  output         io_status_dup_8_s3_bits_set,
  output [3:0]   io_status_dup_8_s3_bits_way_en,
  output         io_status_dup_9_s1_valid,
  output         io_status_dup_9_s1_bits_set,
  output [3:0]   io_status_dup_9_s1_bits_way_en,
  output         io_status_dup_9_s2_valid,
  output         io_status_dup_9_s2_bits_set,
  output [3:0]   io_status_dup_9_s2_bits_way_en,
  output         io_status_dup_9_s3_valid,
  output         io_status_dup_9_s3_bits_set,
  output [3:0]   io_status_dup_9_s3_bits_way_en,
  output         io_status_dup_10_s1_valid,
  output         io_status_dup_10_s1_bits_set,
  output [3:0]   io_status_dup_10_s1_bits_way_en,
  output         io_status_dup_10_s2_valid,
  output         io_status_dup_10_s2_bits_set,
  output [3:0]   io_status_dup_10_s2_bits_way_en,
  output         io_status_dup_10_s3_valid,
  output         io_status_dup_10_s3_bits_set,
  output [3:0]   io_status_dup_10_s3_bits_way_en,
  output         io_status_dup_11_s1_valid,
  output         io_status_dup_11_s1_bits_set,
  output [3:0]   io_status_dup_11_s1_bits_way_en,
  output         io_status_dup_11_s2_valid,
  output         io_status_dup_11_s2_bits_set,
  output [3:0]   io_status_dup_11_s2_bits_way_en,
  output         io_status_dup_11_s3_valid,
  output         io_status_dup_11_s3_bits_set,
  output [3:0]   io_status_dup_11_s3_bits_way_en,
  output         io_status_dup_12_s1_valid,
  output         io_status_dup_12_s1_bits_set,
  output [3:0]   io_status_dup_12_s1_bits_way_en,
  output         io_status_dup_12_s2_valid,
  output         io_status_dup_12_s2_bits_set,
  output [3:0]   io_status_dup_12_s2_bits_way_en,
  output         io_status_dup_12_s3_valid,
  output         io_status_dup_12_s3_bits_set,
  output [3:0]   io_status_dup_12_s3_bits_way_en,
  output         io_status_dup_13_s1_valid,
  output         io_status_dup_13_s1_bits_set,
  output [3:0]   io_status_dup_13_s1_bits_way_en,
  output         io_status_dup_13_s2_valid,
  output         io_status_dup_13_s2_bits_set,
  output [3:0]   io_status_dup_13_s2_bits_way_en,
  output         io_status_dup_13_s3_valid,
  output         io_status_dup_13_s3_bits_set,
  output [3:0]   io_status_dup_13_s3_bits_way_en,
  output         io_status_dup_14_s1_valid,
  output         io_status_dup_14_s1_bits_set,
  output [3:0]   io_status_dup_14_s1_bits_way_en,
  output         io_status_dup_14_s2_valid,
  output         io_status_dup_14_s2_bits_set,
  output [3:0]   io_status_dup_14_s2_bits_way_en,
  output         io_status_dup_14_s3_valid,
  output         io_status_dup_14_s3_bits_set,
  output [3:0]   io_status_dup_14_s3_bits_way_en,
  output         io_status_dup_15_s1_valid,
  output         io_status_dup_15_s1_bits_set,
  output [3:0]   io_status_dup_15_s1_bits_way_en,
  output         io_status_dup_15_s2_valid,
  output         io_status_dup_15_s2_bits_set,
  output [3:0]   io_status_dup_15_s2_bits_way_en,
  output         io_status_dup_15_s3_valid,
  output         io_status_dup_15_s3_bits_set,
  output [3:0]   io_status_dup_15_s3_bits_way_en,
  output         io_status_dup_16_s1_valid,
  output         io_status_dup_16_s1_bits_set,
  output [3:0]   io_status_dup_16_s1_bits_way_en,
  output         io_status_dup_16_s2_valid,
  output         io_status_dup_16_s2_bits_set,
  output [3:0]   io_status_dup_16_s2_bits_way_en,
  output         io_status_dup_16_s3_valid,
  output         io_status_dup_16_s3_bits_set,
  output [3:0]   io_status_dup_16_s3_bits_way_en,
  output         io_status_dup_17_s1_valid,
  output         io_status_dup_17_s1_bits_set,
  output [3:0]   io_status_dup_17_s1_bits_way_en,
  output         io_status_dup_17_s2_valid,
  output         io_status_dup_17_s2_bits_set,
  output [3:0]   io_status_dup_17_s2_bits_way_en,
  output         io_status_dup_17_s3_valid,
  output         io_status_dup_17_s3_bits_set,
  output [3:0]   io_status_dup_17_s3_bits_way_en,
  output         io_status_dup_18_s1_valid,
  output         io_status_dup_18_s1_bits_set,
  output [3:0]   io_status_dup_18_s1_bits_way_en,
  output         io_status_dup_18_s2_valid,
  output         io_status_dup_18_s2_bits_set,
  output [3:0]   io_status_dup_18_s2_bits_way_en,
  output         io_status_dup_18_s3_valid,
  output         io_status_dup_18_s3_bits_set,
  output [3:0]   io_status_dup_18_s3_bits_way_en,
  output         io_status_dup_19_s1_valid,
  output         io_status_dup_19_s1_bits_set,
  output [3:0]   io_status_dup_19_s1_bits_way_en,
  output         io_status_dup_19_s2_valid,
  output         io_status_dup_19_s2_bits_set,
  output [3:0]   io_status_dup_19_s2_bits_way_en,
  output         io_status_dup_19_s3_valid,
  output         io_status_dup_19_s3_bits_set,
  output [3:0]   io_status_dup_19_s3_bits_way_en,
  output         io_status_dup_20_s1_valid,
  output         io_status_dup_20_s1_bits_set,
  output [3:0]   io_status_dup_20_s1_bits_way_en,
  output         io_status_dup_20_s2_valid,
  output         io_status_dup_20_s2_bits_set,
  output [3:0]   io_status_dup_20_s2_bits_way_en,
  output         io_status_dup_20_s3_valid,
  output         io_status_dup_20_s3_bits_set,
  output [3:0]   io_status_dup_20_s3_bits_way_en,
  output         io_status_dup_21_s1_valid,
  output         io_status_dup_21_s1_bits_set,
  output [3:0]   io_status_dup_21_s1_bits_way_en,
  output         io_status_dup_21_s2_valid,
  output         io_status_dup_21_s2_bits_set,
  output [3:0]   io_status_dup_21_s2_bits_way_en,
  output         io_status_dup_21_s3_valid,
  output         io_status_dup_21_s3_bits_set,
  output [3:0]   io_status_dup_21_s3_bits_way_en,
  output         io_status_dup_22_s1_valid,
  output         io_status_dup_22_s1_bits_set,
  output [3:0]   io_status_dup_22_s1_bits_way_en,
  output         io_status_dup_22_s2_valid,
  output         io_status_dup_22_s2_bits_set,
  output [3:0]   io_status_dup_22_s2_bits_way_en,
  output         io_status_dup_22_s3_valid,
  output         io_status_dup_22_s3_bits_set,
  output [3:0]   io_status_dup_22_s3_bits_way_en,
  output         io_status_dup_23_s1_valid,
  output         io_status_dup_23_s1_bits_set,
  output [3:0]   io_status_dup_23_s1_bits_way_en,
  output         io_status_dup_23_s2_valid,
  output         io_status_dup_23_s2_bits_set,
  output [3:0]   io_status_dup_23_s2_bits_way_en,
  output         io_status_dup_23_s3_valid,
  output         io_status_dup_23_s3_bits_set,
  output [3:0]   io_status_dup_23_s3_bits_way_en,
  output         io_lrsc_locked_block_valid,
  output [47:0]  io_lrsc_locked_block_bits,
  input          io_invalid_resv_set,
  output         io_update_resv_set,
  output         io_block_lr,
  output         io_error_valid,
  output         io_error_bits_source_tag,
  output         io_error_bits_source_data,
  output         io_error_bits_source_l2,
  output         io_error_bits_opType_store,
  output         io_error_bits_opType_probe,
  output         io_error_bits_opType_release,
  output         io_error_bits_opType_atom,
  output [47:0]  io_error_bits_paddr,
  output         io_error_bits_report_to_beu,
  input          io_pseudo_error_valid,
  input          io_pseudo_error_bits_0_valid,
  input  [63:0]  io_pseudo_error_bits_0_mask,
  output         io_pseudo_tag_error_inj_done,
  output         io_pseudo_data_error_inj_done,
  output [5:0]   io_perf_0_value,
  output [5:0]   io_perf_1_value
);

  wire              s3_s0_set_conflict_store;
  wire              s3_s0_set_conflict;
  wire              s3_ready;
  wire              s3_sc_fail;
  wire              s2_ready;
  wire              s2_s0_set_conlict_store;
  wire              s2_s0_set_conlict;
  wire              s1_s0_set_conflict_store;
  wire              s1_s0_set_conflict;
  wire              s1_ready;
  wire [63:0]       _amoalu_io_out;
  wire              _main_pipe_req_arb_io_out_valid;
  wire              _main_pipe_req_arb_io_out_bits_miss;
  wire [1:0]        _main_pipe_req_arb_io_out_bits_miss_id;
  wire [3:0]        _main_pipe_req_arb_io_out_bits_occupy_way;
  wire              _main_pipe_req_arb_io_out_bits_miss_fail_cause_evict_btot;
  wire              _main_pipe_req_arb_io_out_bits_probe;
  wire [1:0]        _main_pipe_req_arb_io_out_bits_probe_param;
  wire              _main_pipe_req_arb_io_out_bits_probe_need_data;
  wire [3:0]        _main_pipe_req_arb_io_out_bits_source;
  wire [4:0]        _main_pipe_req_arb_io_out_bits_cmd;
  wire [49:0]       _main_pipe_req_arb_io_out_bits_vaddr;
  wire [47:0]       _main_pipe_req_arb_io_out_bits_addr;
  wire [511:0]      _main_pipe_req_arb_io_out_bits_store_data;
  wire [63:0]       _main_pipe_req_arb_io_out_bits_store_mask;
  wire [2:0]        _main_pipe_req_arb_io_out_bits_word_idx;
  wire [127:0]      _main_pipe_req_arb_io_out_bits_amo_data;
  wire [15:0]       _main_pipe_req_arb_io_out_bits_amo_mask;
  wire [127:0]      _main_pipe_req_arb_io_out_bits_amo_cmp;
  wire              _main_pipe_req_arb_io_out_bits_error;
  wire              _main_pipe_req_arb_io_out_bits_replace;
  wire [3:0]        _main_pipe_req_arb_io_out_bits_id;
  wire              req_ready =
    io_tag_read_ready & s1_ready
    & ~(s1_s0_set_conflict | s2_s0_set_conlict | s3_s0_set_conflict);
  wire              s0_fire = _main_pipe_req_arb_io_out_valid & req_ready;
  reg               s1_valid;
  reg               s1_need_data;
  reg               s1_req_miss;
  reg  [1:0]        s1_req_miss_id;
  reg  [3:0]        s1_req_occupy_way;
  reg               s1_req_miss_fail_cause_evict_btot;
  reg               s1_req_probe;
  reg  [1:0]        s1_req_probe_param;
  reg               s1_req_probe_need_data;
  reg  [3:0]        s1_req_source;
  reg  [4:0]        s1_req_cmd;
  reg  [49:0]       s1_req_vaddr;
  reg  [47:0]       s1_req_addr;
  reg  [511:0]      s1_req_store_data;
  reg  [63:0]       s1_req_store_mask;
  reg  [2:0]        s1_req_word_idx;
  reg  [127:0]      s1_req_amo_data;
  reg  [15:0]       s1_req_amo_mask;
  reg  [127:0]      s1_req_amo_cmp;
  reg               s1_req_error;
  reg               s1_req_replace;
  reg  [3:0]        s1_req_id;
  reg  [7:0]        s1_banked_rmask;
  reg  [7:0]        s1_banked_store_wmask;
  reg               s1_need_tag;
  wire              s1_can_go = s2_ready & (io_data_readline_ready | ~s1_need_data);
  wire              s1_fire = s1_valid & s1_can_go;
  assign s1_ready = ~s1_valid | s1_can_go;
  assign s1_s0_set_conflict =
    s1_valid & _main_pipe_req_arb_io_out_bits_vaddr[6] == s1_req_vaddr[6];
  assign s1_s0_set_conflict_store =
    s1_valid & io_store_req_bits_vaddr[6] == s1_req_vaddr[6];
  reg               last_REG;
  reg  [1:0]        r_0;
  reg  [1:0]        r_1;
  reg  [1:0]        r_2;
  reg  [1:0]        r_3;
  wire [1:0]        meta_resp_0 = last_REG ? io_meta_resp_0_coh_state : r_0;
  wire [1:0]        meta_resp_1 = last_REG ? io_meta_resp_1_coh_state : r_1;
  wire [1:0]        meta_resp_2 = last_REG ? io_meta_resp_2_coh_state : r_2;
  wire [1:0]        meta_resp_3 = last_REG ? io_meta_resp_3_coh_state : r_3;
  wire [40:0]       pseudo_tag_toggle_mask =
    io_pseudo_error_valid & io_pseudo_error_bits_0_valid
      ? io_pseudo_error_bits_0_mask[40:0]
      : 41'h0;
  wire [47:0]       pseudo_encTag_resp_0 =
    {io_tag_resp_0[47:41], io_tag_resp_0[40:0] ^ pseudo_tag_toggle_mask};
  wire [47:0]       pseudo_encTag_resp_1 =
    {io_tag_resp_1[47:41], io_tag_resp_1[40:0] ^ pseudo_tag_toggle_mask};
  wire [47:0]       pseudo_encTag_resp_2 =
    {io_tag_resp_2[47:41], io_tag_resp_2[40:0] ^ pseudo_tag_toggle_mask};
  wire [47:0]       pseudo_encTag_resp_3 =
    {io_tag_resp_3[47:41], io_tag_resp_3[40:0] ^ pseudo_tag_toggle_mask};
  reg               last_REG_1;
  reg  [47:0]       r_1_0;
  reg  [47:0]       r_1_1;
  reg  [47:0]       r_1_2;
  reg  [47:0]       r_1_3;
  wire [47:0]       encTag_resp_0 = last_REG_1 ? pseudo_encTag_resp_0 : r_1_0;
  wire [47:0]       encTag_resp_1 = last_REG_1 ? pseudo_encTag_resp_1 : r_1_1;
  wire [47:0]       encTag_resp_2 = last_REG_1 ? pseudo_encTag_resp_2 : r_1_2;
  wire [47:0]       encTag_resp_3 = last_REG_1 ? pseudo_encTag_resp_3 : r_1_3;
  wire              _s1_tag_errors_T_3 =
    (|meta_resp_0)
    & (^encTag_resp_0 | ~(^encTag_resp_0)
       & (|{^{encTag_resp_0[46:26] & 21'h107FFF, 26'h0},
            ^{encTag_resp_0[45:11] & 35'h400007FFF, 11'h0},
            ^{encTag_resp_0[44:4] & 41'h11FE03FC07F, 4'h0},
            ^{encTag_resp_0[43:1] & 43'h4F0F1E1E3C7, 1'h0},
            ^(encTag_resp_0[42:0] & 43'h5999B33366D),
            ^(encTag_resp_0[41:0] & 42'h35556AAAD5B)}));
  wire              _s1_tag_errors_T_7 =
    (|meta_resp_1)
    & (^encTag_resp_1 | ~(^encTag_resp_1)
       & (|{^{encTag_resp_1[46:26] & 21'h107FFF, 26'h0},
            ^{encTag_resp_1[45:11] & 35'h400007FFF, 11'h0},
            ^{encTag_resp_1[44:4] & 41'h11FE03FC07F, 4'h0},
            ^{encTag_resp_1[43:1] & 43'h4F0F1E1E3C7, 1'h0},
            ^(encTag_resp_1[42:0] & 43'h5999B33366D),
            ^(encTag_resp_1[41:0] & 42'h35556AAAD5B)}));
  wire              _s1_tag_errors_T_11 =
    (|meta_resp_2)
    & (^encTag_resp_2 | ~(^encTag_resp_2)
       & (|{^{encTag_resp_2[46:26] & 21'h107FFF, 26'h0},
            ^{encTag_resp_2[45:11] & 35'h400007FFF, 11'h0},
            ^{encTag_resp_2[44:4] & 41'h11FE03FC07F, 4'h0},
            ^{encTag_resp_2[43:1] & 43'h4F0F1E1E3C7, 1'h0},
            ^(encTag_resp_2[42:0] & 43'h5999B33366D),
            ^(encTag_resp_2[41:0] & 42'h35556AAAD5B)}));
  wire              _s1_tag_errors_T_15 =
    (|meta_resp_3)
    & (^encTag_resp_3 | ~(^encTag_resp_3)
       & (|{^{encTag_resp_3[46:26] & 21'h107FFF, 26'h0},
            ^{encTag_resp_3[45:11] & 35'h400007FFF, 11'h0},
            ^{encTag_resp_3[44:4] & 41'h11FE03FC07F, 4'h0},
            ^{encTag_resp_3[43:1] & 43'h4F0F1E1E3C7, 1'h0},
            ^(encTag_resp_3[42:0] & 43'h5999B33366D),
            ^(encTag_resp_3[41:0] & 42'h35556AAAD5B)}));
  wire              _s1_tag_ecc_match_way_T_2 =
    encTag_resp_0[40:0] == s1_req_addr[47:7] & ~_s1_tag_errors_T_3 & (|meta_resp_0);
  wire              _s1_tag_ecc_match_way_T_5 =
    encTag_resp_1[40:0] == s1_req_addr[47:7] & ~_s1_tag_errors_T_7 & (|meta_resp_1);
  wire              _s1_tag_ecc_match_way_T_8 =
    encTag_resp_2[40:0] == s1_req_addr[47:7] & ~_s1_tag_errors_T_11 & (|meta_resp_2);
  wire              _s1_tag_ecc_match_way_T_11 =
    encTag_resp_3[40:0] == s1_req_addr[47:7] & ~_s1_tag_errors_T_15 & (|meta_resp_3);
  wire              s1_tag_match =
    _s1_tag_ecc_match_way_T_2 | _s1_tag_ecc_match_way_T_5 | _s1_tag_ecc_match_way_T_8
    | _s1_tag_ecc_match_way_T_11;
  reg               s1_real_tag_match_way_last_REG;
  wire [3:0]        _s1_real_tag_match_way_T_20 =
    {io_tag_resp_3[40:0] == s1_req_addr[47:7] & (|meta_resp_3),
     io_tag_resp_2[40:0] == s1_req_addr[47:7] & (|meta_resp_2),
     io_tag_resp_1[40:0] == s1_req_addr[47:7] & (|meta_resp_1),
     io_tag_resp_0[40:0] == s1_req_addr[47:7] & (|meta_resp_0)};
  reg  [3:0]        s1_real_tag_match_way_r;
  wire [3:0]        s1_real_tag_match_way =
    s1_real_tag_match_way_last_REG
      ? _s1_real_tag_match_way_T_20
      : s1_real_tag_match_way_r;
  reg               s1_repl_way_en_last_REG;
  wire [3:0]        _s1_repl_way_en_T_1 =
    s1_req_miss_fail_cause_evict_btot ? s1_req_occupy_way : 4'h1 << io_replace_way_way;
  reg  [3:0]        s1_repl_way_en_r;
  wire [3:0]        s1_repl_way_en =
    s1_repl_way_en_last_REG ? _s1_repl_way_en_T_1 : s1_repl_way_en_r;
  wire              s1_need_replacement = s1_req_miss & ~s1_tag_match;
  wire [3:0]        s1_way_en =
    io_pseudo_error_valid
      ? ((|s1_real_tag_match_way) ? s1_real_tag_match_way : s1_repl_way_en)
      : s1_need_replacement ? s1_repl_way_en : s1_real_tag_match_way;
  reg               s2_valid;
  reg               s2_req_miss;
  reg  [1:0]        s2_req_miss_id;
  reg               s2_req_probe;
  reg  [1:0]        s2_req_probe_param;
  reg               s2_req_probe_need_data;
  reg  [3:0]        s2_req_source;
  reg  [4:0]        s2_req_cmd;
  reg  [49:0]       s2_req_vaddr;
  reg  [47:0]       s2_req_addr;
  reg  [511:0]      s2_req_store_data;
  reg  [63:0]       s2_req_store_mask;
  reg  [2:0]        s2_req_word_idx;
  reg  [127:0]      s2_req_amo_data;
  reg  [15:0]       s2_req_amo_mask;
  reg  [127:0]      s2_req_amo_cmp;
  reg               s2_req_error;
  reg               s2_req_replace;
  reg  [3:0]        s2_req_id;
  reg  [3:0]        s2_tag_errors;
  reg               s2_tag_match;
  reg  [3:0]        s2_tag_ecc_match_way;
  reg  [1:0]        s2_hit_coh_state;
  reg               s2_has_permission;
  reg  [1:0]        s2_new_hit_coh_state;
  reg               s2_grow_perm_r;
  wire              s2_grow_perm = s2_grow_perm_r & s2_tag_match;
  reg  [40:0]       s2_repl_tag;
  reg  [1:0]        s2_repl_coh_state;
  reg               s2_need_replacement;
  reg               s2_need_eviction;
  reg               s2_need_data;
  reg               s2_need_tag;
  reg  [3:0]        s2_way_en;
  reg  [40:0]       s2_tag_r;
  wire [40:0]       s2_tag = s2_need_replacement ? s2_repl_tag : s2_tag_r;
  reg  [1:0]        s2_coh_r_state;
  wire [1:0]        s2_coh_state =
    s2_need_replacement ? s2_repl_coh_state : s2_coh_r_state;
  reg  [7:0]        s2_banked_store_wmask;
  reg               s2_flag_error;
  wire              s2_may_report_data_error = s2_need_data & (|s2_coh_state);
  wire              s2_hit = s2_tag_match & s2_has_permission;
  wire              _atomic_replay_resp_valid_T_3 = s2_req_source == 4'h2;
  wire              _io_store_replay_resp_valid_T_3 = s2_req_source == 4'h1;
  wire              s2_tag_error = (|s2_tag_errors) & s2_need_tag;
  assign s2_s0_set_conlict =
    s2_valid & _main_pipe_req_arb_io_out_bits_vaddr[6] == s2_req_vaddr[6];
  assign s2_s0_set_conlict_store =
    s2_valid & io_store_req_bits_vaddr[6] == s2_req_vaddr[6];
  wire              s2_grow_perm_fail =
    3'({1'h0, 2'({1'h0, io_btot_ways_for_set[0]} + {1'h0, io_btot_ways_for_set[1]})}
       + {1'h0,
          2'({1'h0, io_btot_ways_for_set[2]} + {1'h0, io_btot_ways_for_set[3]})}) > 3'h2
    & s2_grow_perm;
  wire              s2_req_miss_without_data =
    s2_valid & s2_req_miss & ~io_refill_info_valid;
  reg               s2_can_go_to_mq_no_data_r;
  wire              s2_can_go_to_mq_no_data =
    s2_req_miss_without_data & s2_can_go_to_mq_no_data_r;
  reg               s2_can_go_to_mq;
  wire              s2_can_go_to_s3 =
    (s2_req_cmd == 5'h7 | s2_req_replace | s2_req_probe | s2_req_miss
     & io_refill_info_valid & ~io_replace_block
     | (_io_store_replay_resp_valid_T_3 | _atomic_replay_resp_valid_T_3) & s2_hit)
    & s3_ready;
  wire              s2_fire_to_s3 = s2_valid & s2_can_go_to_s3;
  wire              s2_can_go =
    s2_can_go_to_s3 | s2_can_go_to_mq | s2_can_go_to_mq_no_data | io_replace_block;
  wire              s2_fire = s2_valid & s2_can_go;
  assign s2_ready = ~s2_valid | s2_can_go;
  reg               io_data_readline_can_go_last_REG;
  reg               s3_valid;
  reg               s3_req_miss;
  reg  [1:0]        s3_req_miss_id;
  reg               s3_req_probe;
  reg  [1:0]        s3_req_probe_param;
  reg               s3_req_probe_need_data;
  reg  [3:0]        s3_req_source;
  reg  [4:0]        s3_req_cmd;
  reg  [49:0]       s3_req_vaddr;
  reg  [47:0]       s3_req_addr;
  reg  [2:0]        s3_req_word_idx;
  reg  [127:0]      s3_req_amo_data;
  reg  [15:0]       s3_req_amo_mask;
  reg  [127:0]      s3_req_amo_cmp;
  reg               s3_req_replace;
  reg  [3:0]        s3_req_id;
  reg  [1:0]        s3_miss_param;
  reg  [40:0]       s3_tag;
  reg               s3_tag_match;
  reg  [1:0]        s3_coh_state;
  reg               s3_hit;
  reg               s3_amo_hit;
  reg               s3_store_hit;
  reg  [1:0]        s3_hit_coh_state;
  reg  [1:0]        s3_new_hit_coh_state;
  reg  [3:0]        s3_way_en;
  reg  [7:0]        s3_banked_store_wmask;
  reg               s3_idx;
  reg  [63:0]       s3_store_data_merged_without_cache_0;
  reg  [63:0]       s3_store_data_merged_without_cache_1;
  reg  [63:0]       s3_store_data_merged_without_cache_2;
  reg  [63:0]       s3_store_data_merged_without_cache_3;
  reg  [63:0]       s3_store_data_merged_without_cache_4;
  reg  [63:0]       s3_store_data_merged_without_cache_5;
  reg  [63:0]       s3_store_data_merged_without_cache_6;
  reg  [63:0]       s3_store_data_merged_without_cache_7;
  reg  [7:0]        s3_merge_mask_0;
  reg  [7:0]        s3_merge_mask_1;
  reg  [7:0]        s3_merge_mask_2;
  reg  [7:0]        s3_merge_mask_3;
  reg  [7:0]        s3_merge_mask_4;
  reg  [7:0]        s3_merge_mask_5;
  reg  [7:0]        s3_merge_mask_6;
  reg  [7:0]        s3_merge_mask_7;
  wire [63:0]       s3_store_data_merged_0_full_wmask =
    {{8{s3_merge_mask_0[7]}},
     {8{s3_merge_mask_0[6]}},
     {8{s3_merge_mask_0[5]}},
     {8{s3_merge_mask_0[4]}},
     {8{s3_merge_mask_0[3]}},
     {8{s3_merge_mask_0[2]}},
     {8{s3_merge_mask_0[1]}},
     {8{s3_merge_mask_0[0]}}};
  wire [63:0]       s3_store_data_merged_0 =
    ~s3_store_data_merged_0_full_wmask & s3_store_data_merged_without_cache_0
    | s3_store_data_merged_0_full_wmask & io_data_resp_0_raw_data;
  wire [63:0]       s3_store_data_merged_1_full_wmask =
    {{8{s3_merge_mask_1[7]}},
     {8{s3_merge_mask_1[6]}},
     {8{s3_merge_mask_1[5]}},
     {8{s3_merge_mask_1[4]}},
     {8{s3_merge_mask_1[3]}},
     {8{s3_merge_mask_1[2]}},
     {8{s3_merge_mask_1[1]}},
     {8{s3_merge_mask_1[0]}}};
  wire [63:0]       s3_store_data_merged_1 =
    ~s3_store_data_merged_1_full_wmask & s3_store_data_merged_without_cache_1
    | s3_store_data_merged_1_full_wmask & io_data_resp_1_raw_data;
  wire [63:0]       s3_store_data_merged_2_full_wmask =
    {{8{s3_merge_mask_2[7]}},
     {8{s3_merge_mask_2[6]}},
     {8{s3_merge_mask_2[5]}},
     {8{s3_merge_mask_2[4]}},
     {8{s3_merge_mask_2[3]}},
     {8{s3_merge_mask_2[2]}},
     {8{s3_merge_mask_2[1]}},
     {8{s3_merge_mask_2[0]}}};
  wire [63:0]       s3_store_data_merged_2 =
    ~s3_store_data_merged_2_full_wmask & s3_store_data_merged_without_cache_2
    | s3_store_data_merged_2_full_wmask & io_data_resp_2_raw_data;
  wire [63:0]       s3_store_data_merged_3_full_wmask =
    {{8{s3_merge_mask_3[7]}},
     {8{s3_merge_mask_3[6]}},
     {8{s3_merge_mask_3[5]}},
     {8{s3_merge_mask_3[4]}},
     {8{s3_merge_mask_3[3]}},
     {8{s3_merge_mask_3[2]}},
     {8{s3_merge_mask_3[1]}},
     {8{s3_merge_mask_3[0]}}};
  wire [63:0]       s3_store_data_merged_3 =
    ~s3_store_data_merged_3_full_wmask & s3_store_data_merged_without_cache_3
    | s3_store_data_merged_3_full_wmask & io_data_resp_3_raw_data;
  wire [63:0]       s3_store_data_merged_4_full_wmask =
    {{8{s3_merge_mask_4[7]}},
     {8{s3_merge_mask_4[6]}},
     {8{s3_merge_mask_4[5]}},
     {8{s3_merge_mask_4[4]}},
     {8{s3_merge_mask_4[3]}},
     {8{s3_merge_mask_4[2]}},
     {8{s3_merge_mask_4[1]}},
     {8{s3_merge_mask_4[0]}}};
  wire [63:0]       s3_store_data_merged_4 =
    ~s3_store_data_merged_4_full_wmask & s3_store_data_merged_without_cache_4
    | s3_store_data_merged_4_full_wmask & io_data_resp_4_raw_data;
  wire [63:0]       s3_store_data_merged_5_full_wmask =
    {{8{s3_merge_mask_5[7]}},
     {8{s3_merge_mask_5[6]}},
     {8{s3_merge_mask_5[5]}},
     {8{s3_merge_mask_5[4]}},
     {8{s3_merge_mask_5[3]}},
     {8{s3_merge_mask_5[2]}},
     {8{s3_merge_mask_5[1]}},
     {8{s3_merge_mask_5[0]}}};
  wire [63:0]       s3_store_data_merged_5 =
    ~s3_store_data_merged_5_full_wmask & s3_store_data_merged_without_cache_5
    | s3_store_data_merged_5_full_wmask & io_data_resp_5_raw_data;
  wire [63:0]       s3_store_data_merged_6_full_wmask =
    {{8{s3_merge_mask_6[7]}},
     {8{s3_merge_mask_6[6]}},
     {8{s3_merge_mask_6[5]}},
     {8{s3_merge_mask_6[4]}},
     {8{s3_merge_mask_6[3]}},
     {8{s3_merge_mask_6[2]}},
     {8{s3_merge_mask_6[1]}},
     {8{s3_merge_mask_6[0]}}};
  wire [63:0]       s3_store_data_merged_6 =
    ~s3_store_data_merged_6_full_wmask & s3_store_data_merged_without_cache_6
    | s3_store_data_merged_6_full_wmask & io_data_resp_6_raw_data;
  wire [63:0]       s3_store_data_merged_7_full_wmask =
    {{8{s3_merge_mask_7[7]}},
     {8{s3_merge_mask_7[6]}},
     {8{s3_merge_mask_7[5]}},
     {8{s3_merge_mask_7[4]}},
     {8{s3_merge_mask_7[3]}},
     {8{s3_merge_mask_7[2]}},
     {8{s3_merge_mask_7[1]}},
     {8{s3_merge_mask_7[0]}}};
  wire [63:0]       s3_store_data_merged_7 =
    ~s3_store_data_merged_7_full_wmask & s3_store_data_merged_without_cache_7
    | s3_store_data_merged_7_full_wmask & io_data_resp_7_raw_data;
  reg               s3_need_replacement;
  wire [3:0]        _r_T_59 = {s3_req_probe_param, s3_coh_state};
  wire              _r_T_92 = _r_T_59 == 4'h5;
  wire              _r_T_96 = _r_T_59 == 4'h6;
  wire              _r_T_100 = _r_T_59 == 4'h7;
  wire              _r_T_104 = _r_T_59 == 4'h0;
  wire              _r_T_108 = _r_T_59 == 4'h1;
  wire              _GEN = _r_T_59 == 4'h3 | _r_T_59 == 4'h2;
  wire [1:0]        r_3_0 =
    _GEN
      ? 2'h2
      : _r_T_108 ? 2'h1 : _r_T_104 ? 2'h0 : {1'h0, _r_T_100 | _r_T_96 | _r_T_92};
  wire              probe_update_meta =
    s3_req_probe & s3_tag_match & s3_coh_state != r_3_0;
  wire              _io_error_bits_opType_store_T = s3_req_source == 4'h1;
  wire              _amo_update_meta_T_3 = s3_hit_coh_state == s3_new_hit_coh_state;
  wire              store_update_meta =
    _io_error_bits_opType_store_T & ~s3_req_probe & ~_amo_update_meta_T_3;
  wire              _io_error_bits_opType_atom_T = s3_req_source == 4'h2;
  wire              amo_update_meta =
    _io_error_bits_opType_atom_T & ~s3_req_probe & ~_amo_update_meta_T_3 & ~s3_sc_fail;
  wire              _s3_can_do_amo_write_T_22 = s3_req_cmd == 5'h1A;
  wire              _s3_can_do_amo_write_T_23 = s3_req_cmd == 5'h1B;
  wire              _banked_wmask_T = s3_req_cmd == 5'h18;
  wire              amo_wait_amoalu =
    _io_error_bits_opType_atom_T & s3_req_cmd != 5'h6 & s3_req_cmd != 5'h7
    & ~(_s3_can_do_amo_write_T_22 | _s3_can_do_amo_write_T_23 | _banked_wmask_T);
  wire              _s3_can_do_amo_write_T = s3_req_cmd == 5'h1;
  wire              _s3_can_do_amo_write_T_1 = s3_req_cmd == 5'h11;
  wire              _s3_can_do_amo_write_T_3 = s3_req_cmd == 5'h7;
  wire              _s3_can_do_amo_write_T_5 = s3_req_cmd == 5'h4;
  wire              _s3_can_do_amo_write_T_6 = s3_req_cmd == 5'h9;
  wire              _s3_can_do_amo_write_T_8 = s3_req_cmd == 5'hA;
  wire              _s3_can_do_amo_write_T_10 = s3_req_cmd == 5'hB;
  wire              _s3_can_do_amo_write_T_12 = s3_req_cmd == 5'h8;
  wire              _s3_can_do_amo_write_T_13 = s3_req_cmd == 5'hC;
  wire              _s3_can_do_amo_write_T_15 = s3_req_cmd == 5'hD;
  wire              _s3_can_do_amo_write_T_17 = s3_req_cmd == 5'hE;
  wire              _s3_can_do_amo_write_T_19 = s3_req_cmd == 5'hF;
  wire              _miss_new_coh_c_cat_T_28 =
    _s3_can_do_amo_write_T | _s3_can_do_amo_write_T_1 | _s3_can_do_amo_write_T_3
    | _s3_can_do_amo_write_T_5 | _s3_can_do_amo_write_T_6 | _s3_can_do_amo_write_T_8
    | _s3_can_do_amo_write_T_10 | _s3_can_do_amo_write_T_12 | _s3_can_do_amo_write_T_13
    | _s3_can_do_amo_write_T_15 | _s3_can_do_amo_write_T_17 | _s3_can_do_amo_write_T_19
    | _s3_can_do_amo_write_T_22 | _s3_can_do_amo_write_T_23 | _banked_wmask_T;
  wire              _s3_lr_T_3 = s3_req_cmd == 5'h6;
  wire              _miss_new_coh_c_cat_T_61 =
    _s3_can_do_amo_write_T | _s3_can_do_amo_write_T_1 | _s3_can_do_amo_write_T_3
    | _s3_can_do_amo_write_T_5 | _s3_can_do_amo_write_T_6 | _s3_can_do_amo_write_T_8
    | _s3_can_do_amo_write_T_10 | _s3_can_do_amo_write_T_12 | _s3_can_do_amo_write_T_13
    | _s3_can_do_amo_write_T_15 | _s3_can_do_amo_write_T_17 | _s3_can_do_amo_write_T_19
    | _s3_can_do_amo_write_T_22 | _s3_can_do_amo_write_T_23 | _banked_wmask_T
    | s3_req_cmd == 5'h3 | _s3_lr_T_3;
  wire [3:0]        _GEN_0 =
    {_miss_new_coh_c_cat_T_28, _miss_new_coh_c_cat_T_61, s3_miss_param};
  reg               s3_tag_error;
  reg               s3_data_error_last_REG;
  reg               s3_data_error_last_REG_1;
  reg               s3_data_error_REG;
  wire              _s3_data_error_T = io_readline_error_delayed & s3_data_error_REG;
  reg               s3_data_error_REG_1;
  wire              s3_data_error =
    s3_data_error_last_REG_1 ? _s3_data_error_T : s3_data_error_REG_1;
  reg               s3_l2_error;
  reg               s3_flag_error;
  reg               s3_error_r;
  wire              s3_error = s3_error_r | s3_data_error;
  reg  [47:0]       s3_error_paddr_r;
  reg  [5:0]        lrsc_count;
  wire              lrsc_valid = lrsc_count > 6'h8;
  reg  [47:0]       lrsc_addr;
  reg               s3_s_amoalu;
  wire              s3_lr = ~s3_req_probe & _io_error_bits_opType_atom_T & _s3_lr_T_3;
  wire              s3_sc =
    ~s3_req_probe & _io_error_bits_opType_atom_T & _s3_can_do_amo_write_T_3;
  wire              s3_cas =
    ~s3_req_probe & _io_error_bits_opType_atom_T
    & (_s3_can_do_amo_write_T_22 | _s3_can_do_amo_write_T_23 | _banked_wmask_T);
  assign s3_sc_fail =
    s3_sc & (~(lrsc_valid & lrsc_addr == {s3_req_addr[47:6], 6'h0}) | ~s3_hit);
  wire [7:0][127:0] _GEN_1 =
    {{{64'h0, s3_store_data_merged_7}},
     {{s3_store_data_merged_7, s3_store_data_merged_6}},
     {{s3_store_data_merged_6, s3_store_data_merged_5}},
     {{s3_store_data_merged_5, s3_store_data_merged_4}},
     {{s3_store_data_merged_4, s3_store_data_merged_3}},
     {{s3_store_data_merged_3, s3_store_data_merged_2}},
     {{s3_store_data_merged_2, s3_store_data_merged_1}},
     {{s3_store_data_merged_1, s3_store_data_merged_0}}};
  wire [127:0]      _GEN_2 = _GEN_1[s3_req_word_idx];
  wire              s3_cas_fail =
    s3_cas
    & (|({{8{s3_req_amo_mask[15]}},
          {8{s3_req_amo_mask[14]}},
          {8{s3_req_amo_mask[13]}},
          {8{s3_req_amo_mask[12]}},
          {8{s3_req_amo_mask[11]}},
          {8{s3_req_amo_mask[10]}},
          {8{s3_req_amo_mask[9]}},
          {8{s3_req_amo_mask[8]}},
          {8{s3_req_amo_mask[7]}},
          {8{s3_req_amo_mask[6]}},
          {8{s3_req_amo_mask[5]}},
          {8{s3_req_amo_mask[4]}},
          {8{s3_req_amo_mask[3]}},
          {8{s3_req_amo_mask[2]}},
          {8{s3_req_amo_mask[1]}},
          {8{s3_req_amo_mask[0]}}} & (s3_req_amo_cmp ^ _GEN_2)));
  wire              s3_can_do_amo =
    s3_req_miss & ~s3_req_probe & _io_error_bits_opType_atom_T | s3_amo_hit;
  wire              s3_can_do_amo_write =
    s3_can_do_amo
    & (_s3_can_do_amo_write_T | _s3_can_do_amo_write_T_1 | _s3_can_do_amo_write_T_3
       | _s3_can_do_amo_write_T_5 | _s3_can_do_amo_write_T_6 | _s3_can_do_amo_write_T_8
       | _s3_can_do_amo_write_T_10 | _s3_can_do_amo_write_T_12 | _s3_can_do_amo_write_T_13
       | _s3_can_do_amo_write_T_15 | _s3_can_do_amo_write_T_17 | _s3_can_do_amo_write_T_19
       | _s3_can_do_amo_write_T_22 | _s3_can_do_amo_write_T_23 | _banked_wmask_T)
    & ~s3_sc_fail & ~s3_cas_fail;
  wire              _GEN_3 = s3_valid & (s3_lr | s3_sc);
  wire              _GEN_4 = s3_can_do_amo & s3_lr;
  reg               io_block_lr_last_REG;
  wire              update_data = s3_req_miss | s3_store_hit | s3_can_do_amo_write;
  wire              do_amoalu = amo_wait_amoalu & s3_valid & ~s3_s_amoalu;
  wire [7:0][63:0]  _GEN_5 =
    {{s3_store_data_merged_7},
     {s3_store_data_merged_6},
     {s3_store_data_merged_5},
     {s3_store_data_merged_4},
     {s3_store_data_merged_3},
     {s3_store_data_merged_2},
     {s3_store_data_merged_1},
     {s3_store_data_merged_0}};
  wire              _s3_sc_data_merged_0_T_8 = s3_req_word_idx == 3'h0;
  wire [7:0]        _s3_cas_data_merged_0_T_6 =
    ~s3_cas_fail & _s3_sc_data_merged_0_T_8 ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       s3_cas_data_merged_0_full_wmask =
    {{8{_s3_cas_data_merged_0_T_6[7]}},
     {8{_s3_cas_data_merged_0_T_6[6]}},
     {8{_s3_cas_data_merged_0_T_6[5]}},
     {8{_s3_cas_data_merged_0_T_6[4]}},
     {8{_s3_cas_data_merged_0_T_6[3]}},
     {8{_s3_cas_data_merged_0_T_6[2]}},
     {8{_s3_cas_data_merged_0_T_6[1]}},
     {8{_s3_cas_data_merged_0_T_6[0]}}};
  wire              _s3_sc_data_merged_1_T_8 = s3_req_word_idx == 3'h1;
  wire              h_select_1 =
    ~s3_cas_fail & _banked_wmask_T & _s3_sc_data_merged_0_T_8;
  wire [7:0]        _s3_cas_data_merged_1_T_6 =
    h_select_1
      ? s3_req_amo_mask[15:8]
      : ~s3_cas_fail & _s3_sc_data_merged_1_T_8 ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       s3_cas_data_merged_1_full_wmask =
    {{8{_s3_cas_data_merged_1_T_6[7]}},
     {8{_s3_cas_data_merged_1_T_6[6]}},
     {8{_s3_cas_data_merged_1_T_6[5]}},
     {8{_s3_cas_data_merged_1_T_6[4]}},
     {8{_s3_cas_data_merged_1_T_6[3]}},
     {8{_s3_cas_data_merged_1_T_6[2]}},
     {8{_s3_cas_data_merged_1_T_6[1]}},
     {8{_s3_cas_data_merged_1_T_6[0]}}};
  wire              _s3_sc_data_merged_2_T_8 = s3_req_word_idx == 3'h2;
  wire [7:0]        _s3_cas_data_merged_2_T_6 =
    ~s3_cas_fail & _s3_sc_data_merged_2_T_8 ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       s3_cas_data_merged_2_full_wmask =
    {{8{_s3_cas_data_merged_2_T_6[7]}},
     {8{_s3_cas_data_merged_2_T_6[6]}},
     {8{_s3_cas_data_merged_2_T_6[5]}},
     {8{_s3_cas_data_merged_2_T_6[4]}},
     {8{_s3_cas_data_merged_2_T_6[3]}},
     {8{_s3_cas_data_merged_2_T_6[2]}},
     {8{_s3_cas_data_merged_2_T_6[1]}},
     {8{_s3_cas_data_merged_2_T_6[0]}}};
  wire              _s3_sc_data_merged_3_T_8 = s3_req_word_idx == 3'h3;
  wire              h_select_3 =
    ~s3_cas_fail & _banked_wmask_T & _s3_sc_data_merged_2_T_8;
  wire [7:0]        _s3_cas_data_merged_3_T_6 =
    h_select_3
      ? s3_req_amo_mask[15:8]
      : ~s3_cas_fail & _s3_sc_data_merged_3_T_8 ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       s3_cas_data_merged_3_full_wmask =
    {{8{_s3_cas_data_merged_3_T_6[7]}},
     {8{_s3_cas_data_merged_3_T_6[6]}},
     {8{_s3_cas_data_merged_3_T_6[5]}},
     {8{_s3_cas_data_merged_3_T_6[4]}},
     {8{_s3_cas_data_merged_3_T_6[3]}},
     {8{_s3_cas_data_merged_3_T_6[2]}},
     {8{_s3_cas_data_merged_3_T_6[1]}},
     {8{_s3_cas_data_merged_3_T_6[0]}}};
  wire              _s3_sc_data_merged_4_T_8 = s3_req_word_idx == 3'h4;
  wire [7:0]        _s3_cas_data_merged_4_T_6 =
    ~s3_cas_fail & _s3_sc_data_merged_4_T_8 ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       s3_cas_data_merged_4_full_wmask =
    {{8{_s3_cas_data_merged_4_T_6[7]}},
     {8{_s3_cas_data_merged_4_T_6[6]}},
     {8{_s3_cas_data_merged_4_T_6[5]}},
     {8{_s3_cas_data_merged_4_T_6[4]}},
     {8{_s3_cas_data_merged_4_T_6[3]}},
     {8{_s3_cas_data_merged_4_T_6[2]}},
     {8{_s3_cas_data_merged_4_T_6[1]}},
     {8{_s3_cas_data_merged_4_T_6[0]}}};
  wire              _s3_sc_data_merged_5_T_8 = s3_req_word_idx == 3'h5;
  wire              h_select_5 =
    ~s3_cas_fail & _banked_wmask_T & _s3_sc_data_merged_4_T_8;
  wire [7:0]        _s3_cas_data_merged_5_T_6 =
    h_select_5
      ? s3_req_amo_mask[15:8]
      : ~s3_cas_fail & _s3_sc_data_merged_5_T_8 ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       s3_cas_data_merged_5_full_wmask =
    {{8{_s3_cas_data_merged_5_T_6[7]}},
     {8{_s3_cas_data_merged_5_T_6[6]}},
     {8{_s3_cas_data_merged_5_T_6[5]}},
     {8{_s3_cas_data_merged_5_T_6[4]}},
     {8{_s3_cas_data_merged_5_T_6[3]}},
     {8{_s3_cas_data_merged_5_T_6[2]}},
     {8{_s3_cas_data_merged_5_T_6[1]}},
     {8{_s3_cas_data_merged_5_T_6[0]}}};
  wire              _s3_sc_data_merged_6_T_8 = s3_req_word_idx == 3'h6;
  wire [7:0]        _s3_cas_data_merged_6_T_6 =
    ~s3_cas_fail & _s3_sc_data_merged_6_T_8 ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       s3_cas_data_merged_6_full_wmask =
    {{8{_s3_cas_data_merged_6_T_6[7]}},
     {8{_s3_cas_data_merged_6_T_6[6]}},
     {8{_s3_cas_data_merged_6_T_6[5]}},
     {8{_s3_cas_data_merged_6_T_6[4]}},
     {8{_s3_cas_data_merged_6_T_6[3]}},
     {8{_s3_cas_data_merged_6_T_6[2]}},
     {8{_s3_cas_data_merged_6_T_6[1]}},
     {8{_s3_cas_data_merged_6_T_6[0]}}};
  wire              h_select_7 =
    ~s3_cas_fail & _banked_wmask_T & _s3_sc_data_merged_6_T_8;
  wire [7:0]        _s3_cas_data_merged_7_T_6 =
    h_select_7
      ? s3_req_amo_mask[15:8]
      : ~s3_cas_fail & (&s3_req_word_idx) ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       s3_cas_data_merged_7_full_wmask =
    {{8{_s3_cas_data_merged_7_T_6[7]}},
     {8{_s3_cas_data_merged_7_T_6[6]}},
     {8{_s3_cas_data_merged_7_T_6[5]}},
     {8{_s3_cas_data_merged_7_T_6[4]}},
     {8{_s3_cas_data_merged_7_T_6[3]}},
     {8{_s3_cas_data_merged_7_T_6[2]}},
     {8{_s3_cas_data_merged_7_T_6[1]}},
     {8{_s3_cas_data_merged_7_T_6[0]}}};
  reg  [63:0]       s3_amo_data_merged_reg_0;
  reg  [63:0]       s3_amo_data_merged_reg_1;
  reg  [63:0]       s3_amo_data_merged_reg_2;
  reg  [63:0]       s3_amo_data_merged_reg_3;
  reg  [63:0]       s3_amo_data_merged_reg_4;
  reg  [63:0]       s3_amo_data_merged_reg_5;
  reg  [63:0]       s3_amo_data_merged_reg_6;
  reg  [63:0]       s3_amo_data_merged_reg_7;
  wire              s3_store_can_go =
    _io_error_bits_opType_store_T & ~s3_req_probe & ~s3_req_miss;
  wire              s3_amo_can_go =
    s3_amo_hit & (s3_s_amoalu | ~amo_wait_amoalu) | s3_sc_fail;
  wire              s3_miss_can_go =
    s3_req_miss & (s3_s_amoalu | ~amo_wait_amoalu) & io_wb_ready;
  wire              s3_replace_nothing = s3_req_replace & s3_coh_state == 2'h0;
  wire              s3_can_go =
    s3_req_probe & io_wb_ready | s3_store_can_go | s3_amo_can_go | s3_miss_can_go
    | s3_req_replace & (s3_replace_nothing | io_wb_ready);
  wire              s3_fire = s3_valid & s3_can_go;
  wire [7:0]        _s3_sc_data_merged_0_T_11 =
    _s3_sc_data_merged_0_T_8 & ~s3_sc_fail ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       _GEN_6 =
    {{8{_s3_sc_data_merged_0_T_11[7]}},
     {8{_s3_sc_data_merged_0_T_11[6]}},
     {8{_s3_sc_data_merged_0_T_11[5]}},
     {8{_s3_sc_data_merged_0_T_11[4]}},
     {8{_s3_sc_data_merged_0_T_11[3]}},
     {8{_s3_sc_data_merged_0_T_11[2]}},
     {8{_s3_sc_data_merged_0_T_11[1]}},
     {8{_s3_sc_data_merged_0_T_11[0]}}};
  wire [7:0]        _s3_sc_data_merged_1_T_11 =
    _s3_sc_data_merged_1_T_8 & ~s3_sc_fail ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       _GEN_7 =
    {{8{_s3_sc_data_merged_1_T_11[7]}},
     {8{_s3_sc_data_merged_1_T_11[6]}},
     {8{_s3_sc_data_merged_1_T_11[5]}},
     {8{_s3_sc_data_merged_1_T_11[4]}},
     {8{_s3_sc_data_merged_1_T_11[3]}},
     {8{_s3_sc_data_merged_1_T_11[2]}},
     {8{_s3_sc_data_merged_1_T_11[1]}},
     {8{_s3_sc_data_merged_1_T_11[0]}}};
  wire [7:0]        _s3_sc_data_merged_2_T_11 =
    _s3_sc_data_merged_2_T_8 & ~s3_sc_fail ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       _GEN_8 =
    {{8{_s3_sc_data_merged_2_T_11[7]}},
     {8{_s3_sc_data_merged_2_T_11[6]}},
     {8{_s3_sc_data_merged_2_T_11[5]}},
     {8{_s3_sc_data_merged_2_T_11[4]}},
     {8{_s3_sc_data_merged_2_T_11[3]}},
     {8{_s3_sc_data_merged_2_T_11[2]}},
     {8{_s3_sc_data_merged_2_T_11[1]}},
     {8{_s3_sc_data_merged_2_T_11[0]}}};
  wire [7:0]        _s3_sc_data_merged_3_T_11 =
    _s3_sc_data_merged_3_T_8 & ~s3_sc_fail ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       _GEN_9 =
    {{8{_s3_sc_data_merged_3_T_11[7]}},
     {8{_s3_sc_data_merged_3_T_11[6]}},
     {8{_s3_sc_data_merged_3_T_11[5]}},
     {8{_s3_sc_data_merged_3_T_11[4]}},
     {8{_s3_sc_data_merged_3_T_11[3]}},
     {8{_s3_sc_data_merged_3_T_11[2]}},
     {8{_s3_sc_data_merged_3_T_11[1]}},
     {8{_s3_sc_data_merged_3_T_11[0]}}};
  wire [7:0]        _s3_sc_data_merged_4_T_11 =
    _s3_sc_data_merged_4_T_8 & ~s3_sc_fail ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       _GEN_10 =
    {{8{_s3_sc_data_merged_4_T_11[7]}},
     {8{_s3_sc_data_merged_4_T_11[6]}},
     {8{_s3_sc_data_merged_4_T_11[5]}},
     {8{_s3_sc_data_merged_4_T_11[4]}},
     {8{_s3_sc_data_merged_4_T_11[3]}},
     {8{_s3_sc_data_merged_4_T_11[2]}},
     {8{_s3_sc_data_merged_4_T_11[1]}},
     {8{_s3_sc_data_merged_4_T_11[0]}}};
  wire [7:0]        _s3_sc_data_merged_5_T_11 =
    _s3_sc_data_merged_5_T_8 & ~s3_sc_fail ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       _GEN_11 =
    {{8{_s3_sc_data_merged_5_T_11[7]}},
     {8{_s3_sc_data_merged_5_T_11[6]}},
     {8{_s3_sc_data_merged_5_T_11[5]}},
     {8{_s3_sc_data_merged_5_T_11[4]}},
     {8{_s3_sc_data_merged_5_T_11[3]}},
     {8{_s3_sc_data_merged_5_T_11[2]}},
     {8{_s3_sc_data_merged_5_T_11[1]}},
     {8{_s3_sc_data_merged_5_T_11[0]}}};
  wire [7:0]        _s3_sc_data_merged_6_T_11 =
    _s3_sc_data_merged_6_T_8 & ~s3_sc_fail ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       _GEN_12 =
    {{8{_s3_sc_data_merged_6_T_11[7]}},
     {8{_s3_sc_data_merged_6_T_11[6]}},
     {8{_s3_sc_data_merged_6_T_11[5]}},
     {8{_s3_sc_data_merged_6_T_11[4]}},
     {8{_s3_sc_data_merged_6_T_11[3]}},
     {8{_s3_sc_data_merged_6_T_11[2]}},
     {8{_s3_sc_data_merged_6_T_11[1]}},
     {8{_s3_sc_data_merged_6_T_11[0]}}};
  wire [7:0]        _s3_sc_data_merged_7_T_11 =
    (&s3_req_word_idx) & ~s3_sc_fail ? s3_req_amo_mask[7:0] : 8'h0;
  wire [63:0]       _GEN_13 =
    {{8{_s3_sc_data_merged_7_T_11[7]}},
     {8{_s3_sc_data_merged_7_T_11[6]}},
     {8{_s3_sc_data_merged_7_T_11[5]}},
     {8{_s3_sc_data_merged_7_T_11[4]}},
     {8{_s3_sc_data_merged_7_T_11[3]}},
     {8{_s3_sc_data_merged_7_T_11[2]}},
     {8{_s3_sc_data_merged_7_T_11[1]}},
     {8{_s3_sc_data_merged_7_T_11[0]}}};
  wire              _io_data_write_valid_T =
    s3_valid & (s3_store_can_go | s3_amo_can_go | s3_miss_can_go);
  assign s3_ready = ~s3_valid | s3_can_go;
  assign s3_s0_set_conflict =
    s3_valid & s3_idx == _main_pipe_req_arb_io_out_bits_vaddr[6];
  assign s3_s0_set_conflict_store = s3_valid & s3_idx == io_store_req_bits_vaddr[6];
  wire              io_tag_read_valid_0 =
    _main_pipe_req_arb_io_out_valid & ~_main_pipe_req_arb_io_out_bits_replace;
  wire              io_miss_req_valid_0 = s2_valid & s2_can_go_to_mq;
  wire              _atomic_replay_resp_valid_T =
    s2_can_go_to_mq & (~io_miss_req_ready | io_wbq_block_miss_req);
  wire              atomic_replay_resp_valid =
    s2_valid & (_atomic_replay_resp_valid_T | s2_grow_perm_fail)
    & _atomic_replay_resp_valid_T_3;
  wire              io_meta_write_valid_0 =
    s3_fire & (s3_req_miss | probe_update_meta | store_update_meta | amo_update_meta)
    & ~s3_req_replace;
  wire              io_mainpipe_info_s2_valid_0 = s2_valid & s2_req_miss;
  wire              io_wb_bits_corrupt_0 = s3_tag_error | s3_data_error;
  reg               io_replace_access_valid_last_REG;
  reg               io_status_dup_0_s1_bits_set_r;
  reg               io_status_dup_0_s2_valid_r;
  reg               io_status_dup_0_s2_bits_set_r;
  reg               io_status_dup_0_s3_valid_r;
  reg               io_status_dup_0_s3_bits_set_r;
  reg  [3:0]        io_status_dup_0_s3_bits_way_en_r;
  reg               io_status_dup_1_s1_bits_set_r;
  reg               io_status_dup_1_s2_valid_r;
  reg               io_status_dup_1_s2_bits_set_r;
  reg               io_status_dup_1_s3_valid_r;
  reg               io_status_dup_1_s3_bits_set_r;
  reg  [3:0]        io_status_dup_1_s3_bits_way_en_r;
  reg               io_status_dup_2_s1_bits_set_r;
  reg               io_status_dup_2_s2_valid_r;
  reg               io_status_dup_2_s2_bits_set_r;
  reg               io_status_dup_2_s3_valid_r;
  reg               io_status_dup_2_s3_bits_set_r;
  reg  [3:0]        io_status_dup_2_s3_bits_way_en_r;
  reg               io_status_dup_3_s1_bits_set_r;
  reg               io_status_dup_3_s2_valid_r;
  reg               io_status_dup_3_s2_bits_set_r;
  reg               io_status_dup_3_s3_valid_r;
  reg               io_status_dup_3_s3_bits_set_r;
  reg  [3:0]        io_status_dup_3_s3_bits_way_en_r;
  reg               io_status_dup_4_s1_bits_set_r;
  reg               io_status_dup_4_s2_valid_r;
  reg               io_status_dup_4_s2_bits_set_r;
  reg               io_status_dup_4_s3_valid_r;
  reg               io_status_dup_4_s3_bits_set_r;
  reg  [3:0]        io_status_dup_4_s3_bits_way_en_r;
  reg               io_status_dup_5_s1_bits_set_r;
  reg               io_status_dup_5_s2_valid_r;
  reg               io_status_dup_5_s2_bits_set_r;
  reg               io_status_dup_5_s3_valid_r;
  reg               io_status_dup_5_s3_bits_set_r;
  reg  [3:0]        io_status_dup_5_s3_bits_way_en_r;
  reg               io_status_dup_6_s1_bits_set_r;
  reg               io_status_dup_6_s2_valid_r;
  reg               io_status_dup_6_s2_bits_set_r;
  reg               io_status_dup_6_s3_valid_r;
  reg               io_status_dup_6_s3_bits_set_r;
  reg  [3:0]        io_status_dup_6_s3_bits_way_en_r;
  reg               io_status_dup_7_s1_bits_set_r;
  reg               io_status_dup_7_s2_valid_r;
  reg               io_status_dup_7_s2_bits_set_r;
  reg               io_status_dup_7_s3_valid_r;
  reg               io_status_dup_7_s3_bits_set_r;
  reg  [3:0]        io_status_dup_7_s3_bits_way_en_r;
  reg               io_status_dup_8_s1_bits_set_r;
  reg               io_status_dup_8_s2_valid_r;
  reg               io_status_dup_8_s2_bits_set_r;
  reg               io_status_dup_8_s3_valid_r;
  reg               io_status_dup_8_s3_bits_set_r;
  reg  [3:0]        io_status_dup_8_s3_bits_way_en_r;
  reg               io_status_dup_9_s1_bits_set_r;
  reg               io_status_dup_9_s2_valid_r;
  reg               io_status_dup_9_s2_bits_set_r;
  reg               io_status_dup_9_s3_valid_r;
  reg               io_status_dup_9_s3_bits_set_r;
  reg  [3:0]        io_status_dup_9_s3_bits_way_en_r;
  reg               io_status_dup_10_s1_bits_set_r;
  reg               io_status_dup_10_s2_valid_r;
  reg               io_status_dup_10_s2_bits_set_r;
  reg               io_status_dup_10_s3_valid_r;
  reg               io_status_dup_10_s3_bits_set_r;
  reg  [3:0]        io_status_dup_10_s3_bits_way_en_r;
  reg               io_status_dup_11_s1_bits_set_r;
  reg               io_status_dup_11_s2_valid_r;
  reg               io_status_dup_11_s2_bits_set_r;
  reg               io_status_dup_11_s3_valid_r;
  reg               io_status_dup_11_s3_bits_set_r;
  reg  [3:0]        io_status_dup_11_s3_bits_way_en_r;
  reg               io_status_dup_12_s1_bits_set_r;
  reg               io_status_dup_12_s2_valid_r;
  reg               io_status_dup_12_s2_bits_set_r;
  reg               io_status_dup_12_s3_valid_r;
  reg               io_status_dup_12_s3_bits_set_r;
  reg  [3:0]        io_status_dup_12_s3_bits_way_en_r;
  reg               io_status_dup_13_s1_bits_set_r;
  reg               io_status_dup_13_s2_valid_r;
  reg               io_status_dup_13_s2_bits_set_r;
  reg               io_status_dup_13_s3_valid_r;
  reg               io_status_dup_13_s3_bits_set_r;
  reg  [3:0]        io_status_dup_13_s3_bits_way_en_r;
  reg               io_status_dup_14_s1_bits_set_r;
  reg               io_status_dup_14_s2_valid_r;
  reg               io_status_dup_14_s2_bits_set_r;
  reg               io_status_dup_14_s3_valid_r;
  reg               io_status_dup_14_s3_bits_set_r;
  reg  [3:0]        io_status_dup_14_s3_bits_way_en_r;
  reg               io_status_dup_15_s1_bits_set_r;
  reg               io_status_dup_15_s2_valid_r;
  reg               io_status_dup_15_s2_bits_set_r;
  reg               io_status_dup_15_s3_valid_r;
  reg               io_status_dup_15_s3_bits_set_r;
  reg  [3:0]        io_status_dup_15_s3_bits_way_en_r;
  reg               io_status_dup_16_s1_bits_set_r;
  reg               io_status_dup_16_s2_valid_r;
  reg               io_status_dup_16_s2_bits_set_r;
  reg               io_status_dup_16_s3_valid_r;
  reg               io_status_dup_16_s3_bits_set_r;
  reg  [3:0]        io_status_dup_16_s3_bits_way_en_r;
  reg               io_status_dup_17_s1_bits_set_r;
  reg               io_status_dup_17_s2_valid_r;
  reg               io_status_dup_17_s2_bits_set_r;
  reg               io_status_dup_17_s3_valid_r;
  reg               io_status_dup_17_s3_bits_set_r;
  reg  [3:0]        io_status_dup_17_s3_bits_way_en_r;
  reg               io_status_dup_18_s1_bits_set_r;
  reg               io_status_dup_18_s2_valid_r;
  reg               io_status_dup_18_s2_bits_set_r;
  reg               io_status_dup_18_s3_valid_r;
  reg               io_status_dup_18_s3_bits_set_r;
  reg  [3:0]        io_status_dup_18_s3_bits_way_en_r;
  reg               io_status_dup_19_s1_bits_set_r;
  reg               io_status_dup_19_s2_valid_r;
  reg               io_status_dup_19_s2_bits_set_r;
  reg               io_status_dup_19_s3_valid_r;
  reg               io_status_dup_19_s3_bits_set_r;
  reg  [3:0]        io_status_dup_19_s3_bits_way_en_r;
  reg               io_status_dup_20_s1_bits_set_r;
  reg               io_status_dup_20_s2_valid_r;
  reg               io_status_dup_20_s2_bits_set_r;
  reg               io_status_dup_20_s3_valid_r;
  reg               io_status_dup_20_s3_bits_set_r;
  reg  [3:0]        io_status_dup_20_s3_bits_way_en_r;
  reg               io_status_dup_21_s1_bits_set_r;
  reg               io_status_dup_21_s2_valid_r;
  reg               io_status_dup_21_s2_bits_set_r;
  reg               io_status_dup_21_s3_valid_r;
  reg               io_status_dup_21_s3_bits_set_r;
  reg  [3:0]        io_status_dup_21_s3_bits_way_en_r;
  reg               io_status_dup_22_s1_bits_set_r;
  reg               io_status_dup_22_s2_valid_r;
  reg               io_status_dup_22_s2_bits_set_r;
  reg               io_status_dup_22_s3_valid_r;
  reg               io_status_dup_22_s3_bits_set_r;
  reg  [3:0]        io_status_dup_22_s3_bits_way_en_r;
  reg               io_status_dup_23_s1_bits_set_r;
  reg               io_status_dup_23_s2_valid_r;
  reg               io_status_dup_23_s2_bits_set_r;
  reg               io_status_dup_23_s3_valid_r;
  reg               io_status_dup_23_s3_bits_set_r;
  reg  [3:0]        io_status_dup_23_s3_bits_way_en_r;
  wire [3:0]        _io_mainpipe_info_s2_next_evict_way_T = ~io_btot_ways_for_set;
  reg               io_mainpipe_info_s3_refill_resp_REG;
  reg               io_error_valid_last_REG;
  reg               io_error_bits_report_to_beu_REG;
  reg               io_perf_0_value_REG;
  reg               io_perf_0_value_REG_1;
  reg  [2:0]        io_perf_1_value_REG;
  reg  [2:0]        io_perf_1_value_REG_1;
  wire              s2_l2_error =
    io_refill_info_valid ? io_refill_info_bits_error : s2_req_error;
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      s1_valid <= 1'h0;
      last_REG <= 1'h0;
      last_REG_1 <= 1'h0;
      s1_real_tag_match_way_last_REG <= 1'h0;
      s1_real_tag_match_way_r <= 4'h0;
      s1_repl_way_en_last_REG <= 1'h0;
      s2_valid <= 1'h0;
      s2_can_go_to_mq_no_data_r <= 1'h0;
      io_data_readline_can_go_last_REG <= 1'h0;
      s3_valid <= 1'h0;
      s3_tag_error <= 1'h0;
      s3_data_error_last_REG <= 1'h0;
      s3_data_error_last_REG_1 <= 1'h0;
      s3_l2_error <= 1'h0;
      s3_flag_error <= 1'h0;
      s3_error_r <= 1'h0;
      lrsc_count <= 6'h0;
      s3_s_amoalu <= 1'h0;
      io_block_lr_last_REG <= 1'h0;
      io_replace_access_valid_last_REG <= 1'h0;
      io_error_valid_last_REG <= 1'h0;
    end
    else begin
      s1_valid <= s0_fire | ~s1_fire & s1_valid;
      last_REG <= s0_fire;
      last_REG_1 <= s0_fire;
      s1_real_tag_match_way_last_REG <= s0_fire;
      if (s1_valid & s1_real_tag_match_way_last_REG)
        s1_real_tag_match_way_r <= _s1_real_tag_match_way_T_20;
      s1_repl_way_en_last_REG <= s0_fire;
      s2_valid <= s1_fire | ~s2_fire & s2_valid;
      if (s2_valid)
        s2_can_go_to_mq_no_data_r <= s2_req_miss_without_data & ~s2_can_go_to_mq_no_data;
      io_data_readline_can_go_last_REG <= s1_fire;
      s3_valid <= s2_fire_to_s3 | ~s3_fire & s3_valid;
      if (s2_fire) begin
        s3_tag_error <= s2_tag_error;
        s3_l2_error <= s2_l2_error;
        s3_flag_error <= s2_flag_error;
        s3_error_r <= s2_flag_error | s2_tag_error | s2_l2_error;
      end
      s3_data_error_last_REG <= s1_fire;
      s3_data_error_last_REG_1 <= s3_data_error_last_REG;
      if (_GEN_3)
        lrsc_count <= {6{_GEN_4}};
      else if (io_invalid_resv_set)
        lrsc_count <= 6'h0;
      else if (|lrsc_count)
        lrsc_count <= 6'(lrsc_count - 6'h1);
      s3_s_amoalu <= ~s3_fire & (do_amoalu | s3_s_amoalu);
      io_block_lr_last_REG <= |lrsc_count;
      io_replace_access_valid_last_REG <= s2_fire_to_s3;
      io_error_valid_last_REG <=
        s2_fire
        & ~(~s2_req_miss
            & (_atomic_replay_resp_valid_T_3 & s2_req_cmd != 5'h6
               | _io_store_replay_resp_valid_T_3));
    end
  end // always @(posedge, posedge)
  wire [7:0]        bank_write =
    {|(_main_pipe_req_arb_io_out_bits_store_mask[63:56]),
     |(_main_pipe_req_arb_io_out_bits_store_mask[55:48]),
     |(_main_pipe_req_arb_io_out_bits_store_mask[47:40]),
     |(_main_pipe_req_arb_io_out_bits_store_mask[39:32]),
     |(_main_pipe_req_arb_io_out_bits_store_mask[31:24]),
     |(_main_pipe_req_arb_io_out_bits_store_mask[23:16]),
     |(_main_pipe_req_arb_io_out_bits_store_mask[15:8]),
     |(_main_pipe_req_arb_io_out_bits_store_mask[7:0])};
  wire [7:0]        banked_store_rmask =
    bank_write
    & ~{&(_main_pipe_req_arb_io_out_bits_store_mask[63:56]),
        &(_main_pipe_req_arb_io_out_bits_store_mask[55:48]),
        &(_main_pipe_req_arb_io_out_bits_store_mask[47:40]),
        &(_main_pipe_req_arb_io_out_bits_store_mask[39:32]),
        &(_main_pipe_req_arb_io_out_bits_store_mask[31:24]),
        &(_main_pipe_req_arb_io_out_bits_store_mask[23:16]),
        &(_main_pipe_req_arb_io_out_bits_store_mask[15:8]),
        &(_main_pipe_req_arb_io_out_bits_store_mask[7:0])};
  wire              store_need_data =
    ~_main_pipe_req_arb_io_out_bits_probe & _main_pipe_req_arb_io_out_bits_source == 4'h1
    & (|banked_store_rmask);
  wire              amo_need_data =
    ~_main_pipe_req_arb_io_out_bits_probe & _main_pipe_req_arb_io_out_bits_source == 4'h2;
  wire [1:0]        s1_hit_coh_state =
    (_s1_tag_ecc_match_way_T_2 ? meta_resp_0 : 2'h0)
    | (_s1_tag_ecc_match_way_T_5 ? meta_resp_1 : 2'h0)
    | (_s1_tag_ecc_match_way_T_8 ? meta_resp_2 : 2'h0)
    | (_s1_tag_ecc_match_way_T_11 ? meta_resp_3 : 2'h0);
  wire [1:0]        _s1_repl_coh_T_6 =
    (s1_repl_way_en[0] ? meta_resp_0 : 2'h0) | (s1_repl_way_en[1] ? meta_resp_1 : 2'h0)
    | (s1_repl_way_en[2] ? meta_resp_2 : 2'h0) | (s1_repl_way_en[3] ? meta_resp_3 : 2'h0);
  wire              _r_c_cat_T_29 = s1_req_cmd == 5'h1;
  wire              _r_c_cat_T_30 = s1_req_cmd == 5'h11;
  wire              _r_c_cat_T_32 = s1_req_cmd == 5'h7;
  wire              _r_c_cat_T_34 = s1_req_cmd == 5'h4;
  wire              _r_c_cat_T_35 = s1_req_cmd == 5'h9;
  wire              _r_c_cat_T_36 = s1_req_cmd == 5'hA;
  wire              _r_c_cat_T_37 = s1_req_cmd == 5'hB;
  wire              _r_c_cat_T_41 = s1_req_cmd == 5'h8;
  wire              _r_c_cat_T_42 = s1_req_cmd == 5'hC;
  wire              _r_c_cat_T_43 = s1_req_cmd == 5'hD;
  wire              _r_c_cat_T_44 = s1_req_cmd == 5'hE;
  wire              _r_c_cat_T_45 = s1_req_cmd == 5'hF;
  wire              _r_c_cat_T_51 = s1_req_cmd == 5'h1A;
  wire              _r_c_cat_T_52 = s1_req_cmd == 5'h1B;
  wire              _r_c_cat_T_54 = s1_req_cmd == 5'h18;
  wire [3:0]        _r_T =
    {_r_c_cat_T_29 | _r_c_cat_T_30 | _r_c_cat_T_32 | _r_c_cat_T_34 | _r_c_cat_T_35
       | _r_c_cat_T_36 | _r_c_cat_T_37 | _r_c_cat_T_41 | _r_c_cat_T_42 | _r_c_cat_T_43
       | _r_c_cat_T_44 | _r_c_cat_T_45 | _r_c_cat_T_51 | _r_c_cat_T_52 | _r_c_cat_T_54,
     _r_c_cat_T_29 | _r_c_cat_T_30 | _r_c_cat_T_32 | _r_c_cat_T_34 | _r_c_cat_T_35
       | _r_c_cat_T_36 | _r_c_cat_T_37 | _r_c_cat_T_41 | _r_c_cat_T_42 | _r_c_cat_T_43
       | _r_c_cat_T_44 | _r_c_cat_T_45 | _r_c_cat_T_51 | _r_c_cat_T_52 | _r_c_cat_T_54
       | s1_req_cmd == 5'h3 | s1_req_cmd == 5'h6,
     s1_hit_coh_state};
  wire [1:0]        _r_T_27 = {1'h0, _r_T == 4'hC};
  wire              s1_has_permission =
    _r_T == 4'h3 | _r_T == 4'h2 | _r_T == 4'h1 | _r_T == 4'h7 | _r_T == 4'h6 | (&_r_T)
    | _r_T == 4'hE;
  wire [15:0][1:0]  _GEN_14 =
    {{2'h3},
     {2'h3},
     {2'h2},
     {_r_T_27},
     {_r_T_27},
     {_r_T_27},
     {_r_T_27},
     {_r_T_27},
     {2'h3},
     {2'h2},
     {2'h2},
     {2'h1},
     {2'h3},
     {2'h2},
     {2'h1},
     {2'h0}};
  wire              s2_amo_hit =
    s2_hit & ~s2_req_probe & ~s2_req_miss & _atomic_replay_resp_valid_T_3;
  wire [511:0]      _new_data_T_7 =
    s2_req_miss ? io_refill_info_bits_store_data : s2_req_store_data;
  wire [63:0]       _s2_merge_mask_7_T =
    s2_req_miss ? io_refill_info_bits_store_mask : s2_req_store_mask;
  wire [7:0]        s2_merge_mask_0 = s2_amo_hit ? 8'h0 : _s2_merge_mask_7_T[7:0];
  wire [7:0]        s2_merge_mask_1 = s2_amo_hit ? 8'h0 : _s2_merge_mask_7_T[15:8];
  wire [7:0]        s2_merge_mask_2 = s2_amo_hit ? 8'h0 : _s2_merge_mask_7_T[23:16];
  wire [7:0]        s2_merge_mask_3 = s2_amo_hit ? 8'h0 : _s2_merge_mask_7_T[31:24];
  wire [7:0]        s2_merge_mask_4 = s2_amo_hit ? 8'h0 : _s2_merge_mask_7_T[39:32];
  wire [7:0]        s2_merge_mask_5 = s2_amo_hit ? 8'h0 : _s2_merge_mask_7_T[47:40];
  wire [7:0]        s2_merge_mask_6 = s2_amo_hit ? 8'h0 : _s2_merge_mask_7_T[55:48];
  wire [7:0]        s2_merge_mask_7 = s2_amo_hit ? 8'h0 : _s2_merge_mask_7_T[63:56];
  wire [63:0]       s3_amo_data_merged_0_full_wmask = {64{_s3_sc_data_merged_0_T_8}};
  wire [63:0]       s3_amo_data_merged_1_full_wmask = {64{_s3_sc_data_merged_1_T_8}};
  wire [63:0]       s3_amo_data_merged_2_full_wmask = {64{_s3_sc_data_merged_2_T_8}};
  wire [63:0]       s3_amo_data_merged_3_full_wmask = {64{_s3_sc_data_merged_3_T_8}};
  wire [63:0]       s3_amo_data_merged_4_full_wmask = {64{_s3_sc_data_merged_4_T_8}};
  wire [63:0]       s3_amo_data_merged_5_full_wmask = {64{_s3_sc_data_merged_5_T_8}};
  wire [63:0]       s3_amo_data_merged_6_full_wmask = {64{_s3_sc_data_merged_6_T_8}};
  wire [63:0]       s3_amo_data_merged_7_full_wmask = {64{&s3_req_word_idx}};
  always @(posedge clock) begin
    if (s0_fire) begin
      s1_need_data <=
        store_need_data | _main_pipe_req_arb_io_out_bits_probe | amo_need_data
        | _main_pipe_req_arb_io_out_bits_miss | _main_pipe_req_arb_io_out_bits_replace;
      s1_req_miss <= _main_pipe_req_arb_io_out_bits_miss;
      s1_req_miss_id <= _main_pipe_req_arb_io_out_bits_miss_id;
      s1_req_occupy_way <= _main_pipe_req_arb_io_out_bits_occupy_way;
      s1_req_miss_fail_cause_evict_btot <=
        _main_pipe_req_arb_io_out_bits_miss_fail_cause_evict_btot;
      s1_req_probe <= _main_pipe_req_arb_io_out_bits_probe;
      s1_req_probe_param <= _main_pipe_req_arb_io_out_bits_probe_param;
      s1_req_probe_need_data <= _main_pipe_req_arb_io_out_bits_probe_need_data;
      s1_req_source <= _main_pipe_req_arb_io_out_bits_source;
      s1_req_cmd <= _main_pipe_req_arb_io_out_bits_cmd;
      s1_req_vaddr <= _main_pipe_req_arb_io_out_bits_vaddr;
      s1_req_addr <= _main_pipe_req_arb_io_out_bits_addr;
      s1_req_store_data <= _main_pipe_req_arb_io_out_bits_store_data;
      s1_req_store_mask <= _main_pipe_req_arb_io_out_bits_store_mask;
      s1_req_word_idx <= _main_pipe_req_arb_io_out_bits_word_idx;
      s1_req_amo_data <= _main_pipe_req_arb_io_out_bits_amo_data;
      s1_req_amo_mask <= _main_pipe_req_arb_io_out_bits_amo_mask;
      s1_req_amo_cmp <= _main_pipe_req_arb_io_out_bits_amo_cmp;
      s1_req_error <= _main_pipe_req_arb_io_out_bits_error;
      s1_req_replace <= _main_pipe_req_arb_io_out_bits_replace;
      s1_req_id <= _main_pipe_req_arb_io_out_bits_id;
      s1_banked_rmask <=
        store_need_data
          ? banked_store_rmask
          : {8{_main_pipe_req_arb_io_out_bits_probe | amo_need_data
                 | _main_pipe_req_arb_io_out_bits_miss
                 | _main_pipe_req_arb_io_out_bits_replace}};
      s1_banked_store_wmask <= bank_write;
      s1_need_tag <= io_tag_read_valid_0;
      io_status_dup_0_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_1_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_2_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_3_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_4_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_5_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_6_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_7_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_8_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_9_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_10_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_11_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_12_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_13_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_14_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_15_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_16_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_17_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_18_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_19_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_20_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_21_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_22_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
      io_status_dup_23_s1_bits_set_r <= _main_pipe_req_arb_io_out_bits_vaddr[6];
    end
    if (s1_valid & last_REG) begin
      r_0 <= io_meta_resp_0_coh_state;
      r_1 <= io_meta_resp_1_coh_state;
      r_2 <= io_meta_resp_2_coh_state;
      r_3 <= io_meta_resp_3_coh_state;
    end
    if (s1_valid & last_REG_1) begin
      r_1_0 <= pseudo_encTag_resp_0;
      r_1_1 <= pseudo_encTag_resp_1;
      r_1_2 <= pseudo_encTag_resp_2;
      r_1_3 <= pseudo_encTag_resp_3;
    end
    if (s1_valid & s1_repl_way_en_last_REG)
      s1_repl_way_en_r <= _s1_repl_way_en_T_1;
    if (s1_fire) begin
      s2_req_miss <= s1_req_miss;
      s2_req_miss_id <= s1_req_miss_id;
      s2_req_probe <= s1_req_probe;
      s2_req_probe_param <= s1_req_probe_param;
      s2_req_probe_need_data <= s1_req_probe_need_data;
      s2_req_source <= s1_req_source;
      s2_req_cmd <= s1_req_cmd;
      s2_req_vaddr <= s1_req_vaddr;
      s2_req_addr <= s1_req_addr;
      s2_req_store_data <= s1_req_store_data;
      s2_req_store_mask <= s1_req_store_mask;
      s2_req_word_idx <= s1_req_word_idx;
      s2_req_amo_data <= s1_req_amo_data;
      s2_req_amo_mask <= s1_req_amo_mask;
      s2_req_amo_cmp <= s1_req_amo_cmp;
      s2_req_error <= s1_req_error;
      s2_req_replace <= s1_req_replace;
      s2_req_id <= s1_req_id;
      s2_tag_errors <=
        {_s1_tag_errors_T_15,
         _s1_tag_errors_T_11,
         _s1_tag_errors_T_7,
         _s1_tag_errors_T_3};
      s2_tag_match <= s1_tag_match;
      s2_tag_ecc_match_way <=
        {_s1_tag_ecc_match_way_T_11,
         _s1_tag_ecc_match_way_T_8,
         _s1_tag_ecc_match_way_T_5,
         _s1_tag_ecc_match_way_T_2};
      s2_hit_coh_state <= s1_hit_coh_state;
      s2_has_permission <= s1_has_permission;
      s2_new_hit_coh_state <= _GEN_14[_r_T];
      s2_grow_perm_r <= _GEN_14[_r_T] == 2'h2 & ~s1_has_permission;
      s2_repl_tag <=
        (s1_repl_way_en[0] ? encTag_resp_0[40:0] : 41'h0)
        | (s1_repl_way_en[1] ? encTag_resp_1[40:0] : 41'h0)
        | (s1_repl_way_en[2] ? encTag_resp_2[40:0] : 41'h0)
        | (s1_repl_way_en[3] ? encTag_resp_3[40:0] : 41'h0);
      s2_repl_coh_state <= _s1_repl_coh_T_6;
      s2_need_replacement <= s1_need_replacement;
      s2_need_eviction <= s1_req_miss & ~s1_tag_match & (|_s1_repl_coh_T_6);
      s2_need_data <= s1_need_data;
      s2_need_tag <= s1_need_tag;
      s2_way_en <= s1_way_en;
      s2_tag_r <= s1_req_addr[47:7];
      s2_coh_r_state <= s1_hit_coh_state;
      s2_banked_store_wmask <= s1_banked_store_wmask;
      s2_flag_error <=
        _s1_tag_ecc_match_way_T_2 & io_extra_meta_resp_0_error | _s1_tag_ecc_match_way_T_5
        & io_extra_meta_resp_1_error | _s1_tag_ecc_match_way_T_8
        & io_extra_meta_resp_2_error | _s1_tag_ecc_match_way_T_11
        & io_extra_meta_resp_3_error;
      s2_can_go_to_mq <=
        ~s1_req_replace & ~s1_req_probe & ~s1_req_miss
        & (s1_req_source == 4'h1 | s1_req_source == 4'h2 & s1_req_cmd != 5'h7)
        & ~(s1_tag_match & s1_has_permission);
      io_status_dup_0_s2_valid_r <= s1_req_replace;
      io_status_dup_0_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_1_s2_valid_r <= s1_req_replace;
      io_status_dup_1_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_2_s2_valid_r <= s1_req_replace;
      io_status_dup_2_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_3_s2_valid_r <= s1_req_replace;
      io_status_dup_3_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_4_s2_valid_r <= s1_req_replace;
      io_status_dup_4_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_5_s2_valid_r <= s1_req_replace;
      io_status_dup_5_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_6_s2_valid_r <= s1_req_replace;
      io_status_dup_6_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_7_s2_valid_r <= s1_req_replace;
      io_status_dup_7_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_8_s2_valid_r <= s1_req_replace;
      io_status_dup_8_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_9_s2_valid_r <= s1_req_replace;
      io_status_dup_9_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_10_s2_valid_r <= s1_req_replace;
      io_status_dup_10_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_11_s2_valid_r <= s1_req_replace;
      io_status_dup_11_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_12_s2_valid_r <= s1_req_replace;
      io_status_dup_12_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_13_s2_valid_r <= s1_req_replace;
      io_status_dup_13_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_14_s2_valid_r <= s1_req_replace;
      io_status_dup_14_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_15_s2_valid_r <= s1_req_replace;
      io_status_dup_15_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_16_s2_valid_r <= s1_req_replace;
      io_status_dup_16_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_17_s2_valid_r <= s1_req_replace;
      io_status_dup_17_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_18_s2_valid_r <= s1_req_replace;
      io_status_dup_18_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_19_s2_valid_r <= s1_req_replace;
      io_status_dup_19_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_20_s2_valid_r <= s1_req_replace;
      io_status_dup_20_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_21_s2_valid_r <= s1_req_replace;
      io_status_dup_21_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_22_s2_valid_r <= s1_req_replace;
      io_status_dup_22_s2_bits_set_r <= s1_req_vaddr[6];
      io_status_dup_23_s2_valid_r <= s1_req_replace;
      io_status_dup_23_s2_bits_set_r <= s1_req_vaddr[6];
    end
    if (s2_fire_to_s3) begin
      s3_req_miss <= s2_req_miss;
      s3_req_miss_id <= s2_req_miss_id;
      s3_req_probe <= s2_req_probe;
      s3_req_probe_param <= s2_req_probe_param;
      s3_req_probe_need_data <= s2_req_probe_need_data;
      s3_req_source <= s2_req_source;
      s3_req_cmd <= s2_req_cmd;
      s3_req_vaddr <= s2_req_vaddr;
      s3_req_addr <= s2_req_addr;
      s3_req_word_idx <= s2_req_word_idx;
      s3_req_amo_data <= s2_req_amo_data;
      s3_req_amo_mask <= s2_req_amo_mask;
      s3_req_amo_cmp <= s2_req_amo_cmp;
      s3_req_replace <= s2_req_replace;
      s3_req_id <= s2_req_id;
      s3_miss_param <= io_refill_info_bits_miss_param;
      s3_tag <= s2_tag;
      s3_tag_match <= s2_tag_match;
      s3_coh_state <= s2_coh_state;
      s3_hit <= s2_hit;
      s3_amo_hit <= s2_amo_hit;
      s3_store_hit <=
        s2_hit & ~s2_req_probe & ~s2_req_miss & _io_store_replay_resp_valid_T_3;
      s3_hit_coh_state <= s2_hit_coh_state;
      s3_new_hit_coh_state <= s2_new_hit_coh_state;
      s3_way_en <= s2_way_en;
      s3_banked_store_wmask <= s2_banked_store_wmask;
      s3_idx <= s2_req_vaddr[6];
      s3_store_data_merged_without_cache_0 <=
        {{8{s2_merge_mask_0[7]}},
         {8{s2_merge_mask_0[6]}},
         {8{s2_merge_mask_0[5]}},
         {8{s2_merge_mask_0[4]}},
         {8{s2_merge_mask_0[3]}},
         {8{s2_merge_mask_0[2]}},
         {8{s2_merge_mask_0[1]}},
         {8{s2_merge_mask_0[0]}}} & _new_data_T_7[63:0];
      s3_store_data_merged_without_cache_1 <=
        {{8{s2_merge_mask_1[7]}},
         {8{s2_merge_mask_1[6]}},
         {8{s2_merge_mask_1[5]}},
         {8{s2_merge_mask_1[4]}},
         {8{s2_merge_mask_1[3]}},
         {8{s2_merge_mask_1[2]}},
         {8{s2_merge_mask_1[1]}},
         {8{s2_merge_mask_1[0]}}} & _new_data_T_7[127:64];
      s3_store_data_merged_without_cache_2 <=
        {{8{s2_merge_mask_2[7]}},
         {8{s2_merge_mask_2[6]}},
         {8{s2_merge_mask_2[5]}},
         {8{s2_merge_mask_2[4]}},
         {8{s2_merge_mask_2[3]}},
         {8{s2_merge_mask_2[2]}},
         {8{s2_merge_mask_2[1]}},
         {8{s2_merge_mask_2[0]}}} & _new_data_T_7[191:128];
      s3_store_data_merged_without_cache_3 <=
        {{8{s2_merge_mask_3[7]}},
         {8{s2_merge_mask_3[6]}},
         {8{s2_merge_mask_3[5]}},
         {8{s2_merge_mask_3[4]}},
         {8{s2_merge_mask_3[3]}},
         {8{s2_merge_mask_3[2]}},
         {8{s2_merge_mask_3[1]}},
         {8{s2_merge_mask_3[0]}}} & _new_data_T_7[255:192];
      s3_store_data_merged_without_cache_4 <=
        {{8{s2_merge_mask_4[7]}},
         {8{s2_merge_mask_4[6]}},
         {8{s2_merge_mask_4[5]}},
         {8{s2_merge_mask_4[4]}},
         {8{s2_merge_mask_4[3]}},
         {8{s2_merge_mask_4[2]}},
         {8{s2_merge_mask_4[1]}},
         {8{s2_merge_mask_4[0]}}} & _new_data_T_7[319:256];
      s3_store_data_merged_without_cache_5 <=
        {{8{s2_merge_mask_5[7]}},
         {8{s2_merge_mask_5[6]}},
         {8{s2_merge_mask_5[5]}},
         {8{s2_merge_mask_5[4]}},
         {8{s2_merge_mask_5[3]}},
         {8{s2_merge_mask_5[2]}},
         {8{s2_merge_mask_5[1]}},
         {8{s2_merge_mask_5[0]}}} & _new_data_T_7[383:320];
      s3_store_data_merged_without_cache_6 <=
        {{8{s2_merge_mask_6[7]}},
         {8{s2_merge_mask_6[6]}},
         {8{s2_merge_mask_6[5]}},
         {8{s2_merge_mask_6[4]}},
         {8{s2_merge_mask_6[3]}},
         {8{s2_merge_mask_6[2]}},
         {8{s2_merge_mask_6[1]}},
         {8{s2_merge_mask_6[0]}}} & _new_data_T_7[447:384];
      s3_store_data_merged_without_cache_7 <=
        {{8{s2_merge_mask_7[7]}},
         {8{s2_merge_mask_7[6]}},
         {8{s2_merge_mask_7[5]}},
         {8{s2_merge_mask_7[4]}},
         {8{s2_merge_mask_7[3]}},
         {8{s2_merge_mask_7[2]}},
         {8{s2_merge_mask_7[1]}},
         {8{s2_merge_mask_7[0]}}} & _new_data_T_7[511:448];
      s3_merge_mask_0 <= ~s2_merge_mask_0;
      s3_merge_mask_1 <= ~s2_merge_mask_1;
      s3_merge_mask_2 <= ~s2_merge_mask_2;
      s3_merge_mask_3 <= ~s2_merge_mask_3;
      s3_merge_mask_4 <= ~s2_merge_mask_4;
      s3_merge_mask_5 <= ~s2_merge_mask_5;
      s3_merge_mask_6 <= ~s2_merge_mask_6;
      s3_merge_mask_7 <= ~s2_merge_mask_7;
      s3_need_replacement <= s2_need_replacement;
      io_status_dup_0_s3_valid_r <= s2_req_replace;
      io_status_dup_0_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_0_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_1_s3_valid_r <= s2_req_replace;
      io_status_dup_1_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_1_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_2_s3_valid_r <= s2_req_replace;
      io_status_dup_2_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_2_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_3_s3_valid_r <= s2_req_replace;
      io_status_dup_3_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_3_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_4_s3_valid_r <= s2_req_replace;
      io_status_dup_4_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_4_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_5_s3_valid_r <= s2_req_replace;
      io_status_dup_5_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_5_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_6_s3_valid_r <= s2_req_replace;
      io_status_dup_6_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_6_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_7_s3_valid_r <= s2_req_replace;
      io_status_dup_7_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_7_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_8_s3_valid_r <= s2_req_replace;
      io_status_dup_8_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_8_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_9_s3_valid_r <= s2_req_replace;
      io_status_dup_9_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_9_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_10_s3_valid_r <= s2_req_replace;
      io_status_dup_10_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_10_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_11_s3_valid_r <= s2_req_replace;
      io_status_dup_11_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_11_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_12_s3_valid_r <= s2_req_replace;
      io_status_dup_12_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_12_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_13_s3_valid_r <= s2_req_replace;
      io_status_dup_13_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_13_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_14_s3_valid_r <= s2_req_replace;
      io_status_dup_14_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_14_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_15_s3_valid_r <= s2_req_replace;
      io_status_dup_15_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_15_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_16_s3_valid_r <= s2_req_replace;
      io_status_dup_16_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_16_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_17_s3_valid_r <= s2_req_replace;
      io_status_dup_17_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_17_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_18_s3_valid_r <= s2_req_replace;
      io_status_dup_18_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_18_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_19_s3_valid_r <= s2_req_replace;
      io_status_dup_19_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_19_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_20_s3_valid_r <= s2_req_replace;
      io_status_dup_20_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_20_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_21_s3_valid_r <= s2_req_replace;
      io_status_dup_21_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_21_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_22_s3_valid_r <= s2_req_replace;
      io_status_dup_22_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_22_s3_bits_way_en_r <= s2_way_en;
      io_status_dup_23_s3_valid_r <= s2_req_replace;
      io_status_dup_23_s3_bits_set_r <= s2_req_vaddr[6];
      io_status_dup_23_s3_bits_way_en_r <= s2_way_en;
    end
    s3_data_error_REG <= s2_may_report_data_error;
    if (s3_data_error_last_REG_1)
      s3_data_error_REG_1 <= _s3_data_error_T;
    if (s2_fire)
      s3_error_paddr_r <= {s2_tag, s2_req_vaddr[6:0]};
    if (_GEN_3 & _GEN_4)
      lrsc_addr <= {s3_req_addr[47:6], 6'h0};
    if (do_amoalu) begin
      s3_amo_data_merged_reg_0 <=
        ~s3_amo_data_merged_0_full_wmask & s3_store_data_merged_0
        | s3_amo_data_merged_0_full_wmask & _amoalu_io_out;
      s3_amo_data_merged_reg_1 <=
        ~s3_amo_data_merged_1_full_wmask & s3_store_data_merged_1
        | s3_amo_data_merged_1_full_wmask & _amoalu_io_out;
      s3_amo_data_merged_reg_2 <=
        ~s3_amo_data_merged_2_full_wmask & s3_store_data_merged_2
        | s3_amo_data_merged_2_full_wmask & _amoalu_io_out;
      s3_amo_data_merged_reg_3 <=
        ~s3_amo_data_merged_3_full_wmask & s3_store_data_merged_3
        | s3_amo_data_merged_3_full_wmask & _amoalu_io_out;
      s3_amo_data_merged_reg_4 <=
        ~s3_amo_data_merged_4_full_wmask & s3_store_data_merged_4
        | s3_amo_data_merged_4_full_wmask & _amoalu_io_out;
      s3_amo_data_merged_reg_5 <=
        ~s3_amo_data_merged_5_full_wmask & s3_store_data_merged_5
        | s3_amo_data_merged_5_full_wmask & _amoalu_io_out;
      s3_amo_data_merged_reg_6 <=
        ~s3_amo_data_merged_6_full_wmask & s3_store_data_merged_6
        | s3_amo_data_merged_6_full_wmask & _amoalu_io_out;
      s3_amo_data_merged_reg_7 <=
        ~s3_amo_data_merged_7_full_wmask & s3_store_data_merged_7
        | s3_amo_data_merged_7_full_wmask & _amoalu_io_out;
    end
    io_mainpipe_info_s3_refill_resp_REG <= io_mainpipe_info_s2_valid_0 & s2_fire_to_s3;
    io_error_bits_report_to_beu_REG <= s2_fire;
    io_perf_0_value_REG <= s0_fire;
    io_perf_0_value_REG_1 <= io_perf_0_value_REG;
    io_perf_1_value_REG <=
      3'({1'h0, 2'({1'h0, s0_fire} + {1'h0, s1_valid})}
         + {1'h0, 2'({1'h0, s2_valid} + {1'h0, s3_valid})});
    io_perf_1_value_REG_1 <= io_perf_1_value_REG;
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:154];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [7:0] i = 8'h0; i < 8'h9B; i += 8'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        s1_valid = _RANDOM[8'h0][6];
        s1_need_data = _RANDOM[8'h0][7];
        s1_req_miss = _RANDOM[8'h0][8];
        s1_req_miss_id = _RANDOM[8'h0][10:9];
        s1_req_occupy_way = _RANDOM[8'h0][17:14];
        s1_req_miss_fail_cause_evict_btot = _RANDOM[8'h0][18];
        s1_req_probe = _RANDOM[8'h0][19];
        s1_req_probe_param = _RANDOM[8'h0][21:20];
        s1_req_probe_need_data = _RANDOM[8'h0][22];
        s1_req_source = _RANDOM[8'h0][26:23];
        s1_req_cmd = _RANDOM[8'h0][31:27];
        s1_req_vaddr = {_RANDOM[8'h1], _RANDOM[8'h2][17:0]};
        s1_req_addr = {_RANDOM[8'h2][31:18], _RANDOM[8'h3], _RANDOM[8'h4][1:0]};
        s1_req_store_data =
          {_RANDOM[8'h4][31:2],
           _RANDOM[8'h5],
           _RANDOM[8'h6],
           _RANDOM[8'h7],
           _RANDOM[8'h8],
           _RANDOM[8'h9],
           _RANDOM[8'hA],
           _RANDOM[8'hB],
           _RANDOM[8'hC],
           _RANDOM[8'hD],
           _RANDOM[8'hE],
           _RANDOM[8'hF],
           _RANDOM[8'h10],
           _RANDOM[8'h11],
           _RANDOM[8'h12],
           _RANDOM[8'h13],
           _RANDOM[8'h14][1:0]};
        s1_req_store_mask = {_RANDOM[8'h14][31:2], _RANDOM[8'h15], _RANDOM[8'h16][1:0]};
        s1_req_word_idx = _RANDOM[8'h16][4:2];
        s1_req_amo_data =
          {_RANDOM[8'h16][31:5],
           _RANDOM[8'h17],
           _RANDOM[8'h18],
           _RANDOM[8'h19],
           _RANDOM[8'h1A][4:0]};
        s1_req_amo_mask = _RANDOM[8'h1A][20:5];
        s1_req_amo_cmp =
          {_RANDOM[8'h1A][31:21],
           _RANDOM[8'h1B],
           _RANDOM[8'h1C],
           _RANDOM[8'h1D],
           _RANDOM[8'h1E][20:0]};
        s1_req_error = _RANDOM[8'h1E][21];
        s1_req_replace = _RANDOM[8'h1E][22];
        s1_req_id = {_RANDOM[8'h1E][31], _RANDOM[8'h1F][2:0]};
        s1_banked_rmask = _RANDOM[8'h1F][10:3];
        s1_banked_store_wmask = _RANDOM[8'h1F][18:11];
        s1_need_tag = _RANDOM[8'h1F][19];
        last_REG = _RANDOM[8'h1F][22];
        r_0 = _RANDOM[8'h1F][24:23];
        r_1 = _RANDOM[8'h1F][26:25];
        r_2 = _RANDOM[8'h1F][28:27];
        r_3 = _RANDOM[8'h1F][30:29];
        last_REG_1 = _RANDOM[8'h1F][31];
        r_1_0 = {_RANDOM[8'h20], _RANDOM[8'h21][15:0]};
        r_1_1 = {_RANDOM[8'h21][31:16], _RANDOM[8'h22]};
        r_1_2 = {_RANDOM[8'h23], _RANDOM[8'h24][15:0]};
        r_1_3 = {_RANDOM[8'h24][31:16], _RANDOM[8'h25]};
        s1_real_tag_match_way_last_REG = _RANDOM[8'h26][0];
        s1_real_tag_match_way_r = _RANDOM[8'h26][4:1];
        s1_repl_way_en_last_REG = _RANDOM[8'h26][5];
        s1_repl_way_en_r = _RANDOM[8'h26][9:6];
        s2_valid = _RANDOM[8'h26][11];
        s2_req_miss = _RANDOM[8'h26][12];
        s2_req_miss_id = _RANDOM[8'h26][14:13];
        s2_req_probe = _RANDOM[8'h26][23];
        s2_req_probe_param = _RANDOM[8'h26][25:24];
        s2_req_probe_need_data = _RANDOM[8'h26][26];
        s2_req_source = _RANDOM[8'h26][30:27];
        s2_req_cmd = {_RANDOM[8'h26][31], _RANDOM[8'h27][3:0]};
        s2_req_vaddr = {_RANDOM[8'h27][31:4], _RANDOM[8'h28][21:0]};
        s2_req_addr = {_RANDOM[8'h28][31:22], _RANDOM[8'h29], _RANDOM[8'h2A][5:0]};
        s2_req_store_data =
          {_RANDOM[8'h2A][31:6],
           _RANDOM[8'h2B],
           _RANDOM[8'h2C],
           _RANDOM[8'h2D],
           _RANDOM[8'h2E],
           _RANDOM[8'h2F],
           _RANDOM[8'h30],
           _RANDOM[8'h31],
           _RANDOM[8'h32],
           _RANDOM[8'h33],
           _RANDOM[8'h34],
           _RANDOM[8'h35],
           _RANDOM[8'h36],
           _RANDOM[8'h37],
           _RANDOM[8'h38],
           _RANDOM[8'h39],
           _RANDOM[8'h3A][5:0]};
        s2_req_store_mask = {_RANDOM[8'h3A][31:6], _RANDOM[8'h3B], _RANDOM[8'h3C][5:0]};
        s2_req_word_idx = _RANDOM[8'h3C][8:6];
        s2_req_amo_data =
          {_RANDOM[8'h3C][31:9],
           _RANDOM[8'h3D],
           _RANDOM[8'h3E],
           _RANDOM[8'h3F],
           _RANDOM[8'h40][8:0]};
        s2_req_amo_mask = _RANDOM[8'h40][24:9];
        s2_req_amo_cmp =
          {_RANDOM[8'h40][31:25],
           _RANDOM[8'h41],
           _RANDOM[8'h42],
           _RANDOM[8'h43],
           _RANDOM[8'h44][24:0]};
        s2_req_error = _RANDOM[8'h44][25];
        s2_req_replace = _RANDOM[8'h44][26];
        s2_req_id = _RANDOM[8'h45][6:3];
        s2_tag_errors = _RANDOM[8'h45][10:7];
        s2_tag_match = _RANDOM[8'h45][11];
        s2_tag_ecc_match_way = _RANDOM[8'h45][19:16];
        s2_hit_coh_state = _RANDOM[8'h45][21:20];
        s2_has_permission = _RANDOM[8'h45][22];
        s2_new_hit_coh_state = _RANDOM[8'h45][24:23];
        s2_grow_perm_r = _RANDOM[8'h45][25];
        s2_repl_tag = {_RANDOM[8'h45][31:26], _RANDOM[8'h46], _RANDOM[8'h47][2:0]};
        s2_repl_coh_state = _RANDOM[8'h47][4:3];
        s2_need_replacement = _RANDOM[8'h47][8];
        s2_need_eviction = _RANDOM[8'h47][9];
        s2_need_data = _RANDOM[8'h47][10];
        s2_need_tag = _RANDOM[8'h47][11];
        s2_way_en = _RANDOM[8'h47][15:12];
        s2_tag_r = {_RANDOM[8'h47][31:16], _RANDOM[8'h48][24:0]};
        s2_coh_r_state = _RANDOM[8'h48][26:25];
        s2_banked_store_wmask = {_RANDOM[8'h48][31:27], _RANDOM[8'h49][2:0]};
        s2_flag_error = _RANDOM[8'h49][3];
        s2_can_go_to_mq_no_data_r = _RANDOM[8'h49][4];
        s2_can_go_to_mq = _RANDOM[8'h49][5];
        io_data_readline_can_go_last_REG = _RANDOM[8'h49][7];
        s3_valid = _RANDOM[8'h49][8];
        s3_req_miss = _RANDOM[8'h49][9];
        s3_req_miss_id = _RANDOM[8'h49][11:10];
        s3_req_probe = _RANDOM[8'h49][20];
        s3_req_probe_param = _RANDOM[8'h49][22:21];
        s3_req_probe_need_data = _RANDOM[8'h49][23];
        s3_req_source = _RANDOM[8'h49][27:24];
        s3_req_cmd = {_RANDOM[8'h49][31:28], _RANDOM[8'h4A][0]};
        s3_req_vaddr = {_RANDOM[8'h4A][31:1], _RANDOM[8'h4B][18:0]};
        s3_req_addr = {_RANDOM[8'h4B][31:19], _RANDOM[8'h4C], _RANDOM[8'h4D][2:0]};
        s3_req_word_idx = _RANDOM[8'h5F][5:3];
        s3_req_amo_data =
          {_RANDOM[8'h5F][31:6],
           _RANDOM[8'h60],
           _RANDOM[8'h61],
           _RANDOM[8'h62],
           _RANDOM[8'h63][5:0]};
        s3_req_amo_mask = _RANDOM[8'h63][21:6];
        s3_req_amo_cmp =
          {_RANDOM[8'h63][31:22],
           _RANDOM[8'h64],
           _RANDOM[8'h65],
           _RANDOM[8'h66],
           _RANDOM[8'h67][21:0]};
        s3_req_replace = _RANDOM[8'h67][23];
        s3_req_id = _RANDOM[8'h68][3:0];
        s3_miss_param = _RANDOM[8'h68][5:4];
        s3_tag = {_RANDOM[8'h68][31:7], _RANDOM[8'h69][15:0]};
        s3_tag_match = _RANDOM[8'h69][16];
        s3_coh_state = _RANDOM[8'h69][18:17];
        s3_hit = _RANDOM[8'h69][19];
        s3_amo_hit = _RANDOM[8'h69][20];
        s3_store_hit = _RANDOM[8'h69][21];
        s3_hit_coh_state = _RANDOM[8'h69][23:22];
        s3_new_hit_coh_state = _RANDOM[8'h69][25:24];
        s3_way_en = _RANDOM[8'h69][29:26];
        s3_banked_store_wmask = {_RANDOM[8'h69][31:30], _RANDOM[8'h6A][5:0]};
        s3_idx = _RANDOM[8'h6A][6];
        s3_store_data_merged_without_cache_0 =
          {_RANDOM[8'h6A][31:7], _RANDOM[8'h6B], _RANDOM[8'h6C][6:0]};
        s3_store_data_merged_without_cache_1 =
          {_RANDOM[8'h6C][31:7], _RANDOM[8'h6D], _RANDOM[8'h6E][6:0]};
        s3_store_data_merged_without_cache_2 =
          {_RANDOM[8'h6E][31:7], _RANDOM[8'h6F], _RANDOM[8'h70][6:0]};
        s3_store_data_merged_without_cache_3 =
          {_RANDOM[8'h70][31:7], _RANDOM[8'h71], _RANDOM[8'h72][6:0]};
        s3_store_data_merged_without_cache_4 =
          {_RANDOM[8'h72][31:7], _RANDOM[8'h73], _RANDOM[8'h74][6:0]};
        s3_store_data_merged_without_cache_5 =
          {_RANDOM[8'h74][31:7], _RANDOM[8'h75], _RANDOM[8'h76][6:0]};
        s3_store_data_merged_without_cache_6 =
          {_RANDOM[8'h76][31:7], _RANDOM[8'h77], _RANDOM[8'h78][6:0]};
        s3_store_data_merged_without_cache_7 =
          {_RANDOM[8'h78][31:7], _RANDOM[8'h79], _RANDOM[8'h7A][6:0]};
        s3_merge_mask_0 = _RANDOM[8'h7A][14:7];
        s3_merge_mask_1 = _RANDOM[8'h7A][22:15];
        s3_merge_mask_2 = _RANDOM[8'h7A][30:23];
        s3_merge_mask_3 = {_RANDOM[8'h7A][31], _RANDOM[8'h7B][6:0]};
        s3_merge_mask_4 = _RANDOM[8'h7B][14:7];
        s3_merge_mask_5 = _RANDOM[8'h7B][22:15];
        s3_merge_mask_6 = _RANDOM[8'h7B][30:23];
        s3_merge_mask_7 = {_RANDOM[8'h7B][31], _RANDOM[8'h7C][6:0]};
        s3_need_replacement = _RANDOM[8'h7C][7];
        s3_tag_error = _RANDOM[8'h7C][8];
        s3_data_error_last_REG = _RANDOM[8'h7C][9];
        s3_data_error_last_REG_1 = _RANDOM[8'h7C][10];
        s3_data_error_REG = _RANDOM[8'h7C][11];
        s3_data_error_REG_1 = _RANDOM[8'h7C][12];
        s3_l2_error = _RANDOM[8'h7C][13];
        s3_flag_error = _RANDOM[8'h7C][14];
        s3_error_r = _RANDOM[8'h7C][15];
        s3_error_paddr_r = {_RANDOM[8'h7C][31:16], _RANDOM[8'h7D]};
        lrsc_count = _RANDOM[8'h80][5:0];
        lrsc_addr = {_RANDOM[8'h80][31:6], _RANDOM[8'h81][21:0]};
        s3_s_amoalu = _RANDOM[8'h81][22];
        io_block_lr_last_REG = _RANDOM[8'h81][23];
        s3_amo_data_merged_reg_0 =
          {_RANDOM[8'h81][31:24], _RANDOM[8'h82], _RANDOM[8'h83][23:0]};
        s3_amo_data_merged_reg_1 =
          {_RANDOM[8'h83][31:24], _RANDOM[8'h84], _RANDOM[8'h85][23:0]};
        s3_amo_data_merged_reg_2 =
          {_RANDOM[8'h85][31:24], _RANDOM[8'h86], _RANDOM[8'h87][23:0]};
        s3_amo_data_merged_reg_3 =
          {_RANDOM[8'h87][31:24], _RANDOM[8'h88], _RANDOM[8'h89][23:0]};
        s3_amo_data_merged_reg_4 =
          {_RANDOM[8'h89][31:24], _RANDOM[8'h8A], _RANDOM[8'h8B][23:0]};
        s3_amo_data_merged_reg_5 =
          {_RANDOM[8'h8B][31:24], _RANDOM[8'h8C], _RANDOM[8'h8D][23:0]};
        s3_amo_data_merged_reg_6 =
          {_RANDOM[8'h8D][31:24], _RANDOM[8'h8E], _RANDOM[8'h8F][23:0]};
        s3_amo_data_merged_reg_7 =
          {_RANDOM[8'h8F][31:24], _RANDOM[8'h90], _RANDOM[8'h91][23:0]};
        io_replace_access_valid_last_REG = _RANDOM[8'h91][27];
        io_status_dup_0_s1_bits_set_r = _RANDOM[8'h93][16];
        io_status_dup_0_s2_valid_r = _RANDOM[8'h93][17];
        io_status_dup_0_s2_bits_set_r = _RANDOM[8'h93][18];
        io_status_dup_0_s3_valid_r = _RANDOM[8'h93][19];
        io_status_dup_0_s3_bits_set_r = _RANDOM[8'h93][20];
        io_status_dup_0_s3_bits_way_en_r = _RANDOM[8'h93][24:21];
        io_status_dup_1_s1_bits_set_r = _RANDOM[8'h93][25];
        io_status_dup_1_s2_valid_r = _RANDOM[8'h93][26];
        io_status_dup_1_s2_bits_set_r = _RANDOM[8'h93][27];
        io_status_dup_1_s3_valid_r = _RANDOM[8'h93][28];
        io_status_dup_1_s3_bits_set_r = _RANDOM[8'h93][29];
        io_status_dup_1_s3_bits_way_en_r = {_RANDOM[8'h93][31:30], _RANDOM[8'h94][1:0]};
        io_status_dup_2_s1_bits_set_r = _RANDOM[8'h94][2];
        io_status_dup_2_s2_valid_r = _RANDOM[8'h94][3];
        io_status_dup_2_s2_bits_set_r = _RANDOM[8'h94][4];
        io_status_dup_2_s3_valid_r = _RANDOM[8'h94][5];
        io_status_dup_2_s3_bits_set_r = _RANDOM[8'h94][6];
        io_status_dup_2_s3_bits_way_en_r = _RANDOM[8'h94][10:7];
        io_status_dup_3_s1_bits_set_r = _RANDOM[8'h94][11];
        io_status_dup_3_s2_valid_r = _RANDOM[8'h94][12];
        io_status_dup_3_s2_bits_set_r = _RANDOM[8'h94][13];
        io_status_dup_3_s3_valid_r = _RANDOM[8'h94][14];
        io_status_dup_3_s3_bits_set_r = _RANDOM[8'h94][15];
        io_status_dup_3_s3_bits_way_en_r = _RANDOM[8'h94][19:16];
        io_status_dup_4_s1_bits_set_r = _RANDOM[8'h94][20];
        io_status_dup_4_s2_valid_r = _RANDOM[8'h94][21];
        io_status_dup_4_s2_bits_set_r = _RANDOM[8'h94][22];
        io_status_dup_4_s3_valid_r = _RANDOM[8'h94][23];
        io_status_dup_4_s3_bits_set_r = _RANDOM[8'h94][24];
        io_status_dup_4_s3_bits_way_en_r = _RANDOM[8'h94][28:25];
        io_status_dup_5_s1_bits_set_r = _RANDOM[8'h94][29];
        io_status_dup_5_s2_valid_r = _RANDOM[8'h94][30];
        io_status_dup_5_s2_bits_set_r = _RANDOM[8'h94][31];
        io_status_dup_5_s3_valid_r = _RANDOM[8'h95][0];
        io_status_dup_5_s3_bits_set_r = _RANDOM[8'h95][1];
        io_status_dup_5_s3_bits_way_en_r = _RANDOM[8'h95][5:2];
        io_status_dup_6_s1_bits_set_r = _RANDOM[8'h95][6];
        io_status_dup_6_s2_valid_r = _RANDOM[8'h95][7];
        io_status_dup_6_s2_bits_set_r = _RANDOM[8'h95][8];
        io_status_dup_6_s3_valid_r = _RANDOM[8'h95][9];
        io_status_dup_6_s3_bits_set_r = _RANDOM[8'h95][10];
        io_status_dup_6_s3_bits_way_en_r = _RANDOM[8'h95][14:11];
        io_status_dup_7_s1_bits_set_r = _RANDOM[8'h95][15];
        io_status_dup_7_s2_valid_r = _RANDOM[8'h95][16];
        io_status_dup_7_s2_bits_set_r = _RANDOM[8'h95][17];
        io_status_dup_7_s3_valid_r = _RANDOM[8'h95][18];
        io_status_dup_7_s3_bits_set_r = _RANDOM[8'h95][19];
        io_status_dup_7_s3_bits_way_en_r = _RANDOM[8'h95][23:20];
        io_status_dup_8_s1_bits_set_r = _RANDOM[8'h95][24];
        io_status_dup_8_s2_valid_r = _RANDOM[8'h95][25];
        io_status_dup_8_s2_bits_set_r = _RANDOM[8'h95][26];
        io_status_dup_8_s3_valid_r = _RANDOM[8'h95][27];
        io_status_dup_8_s3_bits_set_r = _RANDOM[8'h95][28];
        io_status_dup_8_s3_bits_way_en_r = {_RANDOM[8'h95][31:29], _RANDOM[8'h96][0]};
        io_status_dup_9_s1_bits_set_r = _RANDOM[8'h96][1];
        io_status_dup_9_s2_valid_r = _RANDOM[8'h96][2];
        io_status_dup_9_s2_bits_set_r = _RANDOM[8'h96][3];
        io_status_dup_9_s3_valid_r = _RANDOM[8'h96][4];
        io_status_dup_9_s3_bits_set_r = _RANDOM[8'h96][5];
        io_status_dup_9_s3_bits_way_en_r = _RANDOM[8'h96][9:6];
        io_status_dup_10_s1_bits_set_r = _RANDOM[8'h96][10];
        io_status_dup_10_s2_valid_r = _RANDOM[8'h96][11];
        io_status_dup_10_s2_bits_set_r = _RANDOM[8'h96][12];
        io_status_dup_10_s3_valid_r = _RANDOM[8'h96][13];
        io_status_dup_10_s3_bits_set_r = _RANDOM[8'h96][14];
        io_status_dup_10_s3_bits_way_en_r = _RANDOM[8'h96][18:15];
        io_status_dup_11_s1_bits_set_r = _RANDOM[8'h96][19];
        io_status_dup_11_s2_valid_r = _RANDOM[8'h96][20];
        io_status_dup_11_s2_bits_set_r = _RANDOM[8'h96][21];
        io_status_dup_11_s3_valid_r = _RANDOM[8'h96][22];
        io_status_dup_11_s3_bits_set_r = _RANDOM[8'h96][23];
        io_status_dup_11_s3_bits_way_en_r = _RANDOM[8'h96][27:24];
        io_status_dup_12_s1_bits_set_r = _RANDOM[8'h96][28];
        io_status_dup_12_s2_valid_r = _RANDOM[8'h96][29];
        io_status_dup_12_s2_bits_set_r = _RANDOM[8'h96][30];
        io_status_dup_12_s3_valid_r = _RANDOM[8'h96][31];
        io_status_dup_12_s3_bits_set_r = _RANDOM[8'h97][0];
        io_status_dup_12_s3_bits_way_en_r = _RANDOM[8'h97][4:1];
        io_status_dup_13_s1_bits_set_r = _RANDOM[8'h97][5];
        io_status_dup_13_s2_valid_r = _RANDOM[8'h97][6];
        io_status_dup_13_s2_bits_set_r = _RANDOM[8'h97][7];
        io_status_dup_13_s3_valid_r = _RANDOM[8'h97][8];
        io_status_dup_13_s3_bits_set_r = _RANDOM[8'h97][9];
        io_status_dup_13_s3_bits_way_en_r = _RANDOM[8'h97][13:10];
        io_status_dup_14_s1_bits_set_r = _RANDOM[8'h97][14];
        io_status_dup_14_s2_valid_r = _RANDOM[8'h97][15];
        io_status_dup_14_s2_bits_set_r = _RANDOM[8'h97][16];
        io_status_dup_14_s3_valid_r = _RANDOM[8'h97][17];
        io_status_dup_14_s3_bits_set_r = _RANDOM[8'h97][18];
        io_status_dup_14_s3_bits_way_en_r = _RANDOM[8'h97][22:19];
        io_status_dup_15_s1_bits_set_r = _RANDOM[8'h97][23];
        io_status_dup_15_s2_valid_r = _RANDOM[8'h97][24];
        io_status_dup_15_s2_bits_set_r = _RANDOM[8'h97][25];
        io_status_dup_15_s3_valid_r = _RANDOM[8'h97][26];
        io_status_dup_15_s3_bits_set_r = _RANDOM[8'h97][27];
        io_status_dup_15_s3_bits_way_en_r = _RANDOM[8'h97][31:28];
        io_status_dup_16_s1_bits_set_r = _RANDOM[8'h98][0];
        io_status_dup_16_s2_valid_r = _RANDOM[8'h98][1];
        io_status_dup_16_s2_bits_set_r = _RANDOM[8'h98][2];
        io_status_dup_16_s3_valid_r = _RANDOM[8'h98][3];
        io_status_dup_16_s3_bits_set_r = _RANDOM[8'h98][4];
        io_status_dup_16_s3_bits_way_en_r = _RANDOM[8'h98][8:5];
        io_status_dup_17_s1_bits_set_r = _RANDOM[8'h98][9];
        io_status_dup_17_s2_valid_r = _RANDOM[8'h98][10];
        io_status_dup_17_s2_bits_set_r = _RANDOM[8'h98][11];
        io_status_dup_17_s3_valid_r = _RANDOM[8'h98][12];
        io_status_dup_17_s3_bits_set_r = _RANDOM[8'h98][13];
        io_status_dup_17_s3_bits_way_en_r = _RANDOM[8'h98][17:14];
        io_status_dup_18_s1_bits_set_r = _RANDOM[8'h98][18];
        io_status_dup_18_s2_valid_r = _RANDOM[8'h98][19];
        io_status_dup_18_s2_bits_set_r = _RANDOM[8'h98][20];
        io_status_dup_18_s3_valid_r = _RANDOM[8'h98][21];
        io_status_dup_18_s3_bits_set_r = _RANDOM[8'h98][22];
        io_status_dup_18_s3_bits_way_en_r = _RANDOM[8'h98][26:23];
        io_status_dup_19_s1_bits_set_r = _RANDOM[8'h98][27];
        io_status_dup_19_s2_valid_r = _RANDOM[8'h98][28];
        io_status_dup_19_s2_bits_set_r = _RANDOM[8'h98][29];
        io_status_dup_19_s3_valid_r = _RANDOM[8'h98][30];
        io_status_dup_19_s3_bits_set_r = _RANDOM[8'h98][31];
        io_status_dup_19_s3_bits_way_en_r = _RANDOM[8'h99][3:0];
        io_status_dup_20_s1_bits_set_r = _RANDOM[8'h99][4];
        io_status_dup_20_s2_valid_r = _RANDOM[8'h99][5];
        io_status_dup_20_s2_bits_set_r = _RANDOM[8'h99][6];
        io_status_dup_20_s3_valid_r = _RANDOM[8'h99][7];
        io_status_dup_20_s3_bits_set_r = _RANDOM[8'h99][8];
        io_status_dup_20_s3_bits_way_en_r = _RANDOM[8'h99][12:9];
        io_status_dup_21_s1_bits_set_r = _RANDOM[8'h99][13];
        io_status_dup_21_s2_valid_r = _RANDOM[8'h99][14];
        io_status_dup_21_s2_bits_set_r = _RANDOM[8'h99][15];
        io_status_dup_21_s3_valid_r = _RANDOM[8'h99][16];
        io_status_dup_21_s3_bits_set_r = _RANDOM[8'h99][17];
        io_status_dup_21_s3_bits_way_en_r = _RANDOM[8'h99][21:18];
        io_status_dup_22_s1_bits_set_r = _RANDOM[8'h99][22];
        io_status_dup_22_s2_valid_r = _RANDOM[8'h99][23];
        io_status_dup_22_s2_bits_set_r = _RANDOM[8'h99][24];
        io_status_dup_22_s3_valid_r = _RANDOM[8'h99][25];
        io_status_dup_22_s3_bits_set_r = _RANDOM[8'h99][26];
        io_status_dup_22_s3_bits_way_en_r = _RANDOM[8'h99][30:27];
        io_status_dup_23_s1_bits_set_r = _RANDOM[8'h99][31];
        io_status_dup_23_s2_valid_r = _RANDOM[8'h9A][0];
        io_status_dup_23_s2_bits_set_r = _RANDOM[8'h9A][1];
        io_status_dup_23_s3_valid_r = _RANDOM[8'h9A][2];
        io_status_dup_23_s3_bits_set_r = _RANDOM[8'h9A][3];
        io_status_dup_23_s3_bits_way_en_r = _RANDOM[8'h9A][7:4];
        io_mainpipe_info_s3_refill_resp_REG = _RANDOM[8'h9A][8];
        io_error_valid_last_REG = _RANDOM[8'h9A][9];
        io_error_bits_report_to_beu_REG = _RANDOM[8'h9A][10];
        io_perf_0_value_REG = _RANDOM[8'h9A][11];
        io_perf_0_value_REG_1 = _RANDOM[8'h9A][12];
        io_perf_1_value_REG = _RANDOM[8'h9A][15:13];
        io_perf_1_value_REG_1 = _RANDOM[8'h9A][18:16];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        s1_valid = 1'h0;
        last_REG = 1'h0;
        last_REG_1 = 1'h0;
        s1_real_tag_match_way_last_REG = 1'h0;
        s1_real_tag_match_way_r = 4'h0;
        s1_repl_way_en_last_REG = 1'h0;
        s2_valid = 1'h0;
        s2_can_go_to_mq_no_data_r = 1'h0;
        io_data_readline_can_go_last_REG = 1'h0;
        s3_valid = 1'h0;
        s3_tag_error = 1'h0;
        s3_data_error_last_REG = 1'h0;
        s3_data_error_last_REG_1 = 1'h0;
        s3_l2_error = 1'h0;
        s3_flag_error = 1'h0;
        s3_error_r = 1'h0;
        lrsc_count = 6'h0;
        s3_s_amoalu = 1'h0;
        io_block_lr_last_REG = 1'h0;
        io_replace_access_valid_last_REG = 1'h0;
        io_error_valid_last_REG = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Arbiter4_MainPipeReq main_pipe_req_arb (
    .io_in_0_ready                           (io_probe_req_ready),
    .io_in_0_valid                           (io_probe_req_valid),
    .io_in_0_bits_miss                       (io_probe_req_bits_miss),
    .io_in_0_bits_miss_id                    (io_probe_req_bits_miss_id),
    .io_in_0_bits_occupy_way                 (io_probe_req_bits_occupy_way),
    .io_in_0_bits_miss_fail_cause_evict_btot
      (io_probe_req_bits_miss_fail_cause_evict_btot),
    .io_in_0_bits_probe                      (io_probe_req_bits_probe),
    .io_in_0_bits_probe_param                (io_probe_req_bits_probe_param),
    .io_in_0_bits_probe_need_data            (io_probe_req_bits_probe_need_data),
    .io_in_0_bits_source                     (io_probe_req_bits_source),
    .io_in_0_bits_cmd                        (io_probe_req_bits_cmd),
    .io_in_0_bits_vaddr                      (io_probe_req_bits_vaddr),
    .io_in_0_bits_addr                       (io_probe_req_bits_addr),
    .io_in_0_bits_store_data                 (io_probe_req_bits_store_data),
    .io_in_0_bits_store_mask                 (io_probe_req_bits_store_mask),
    .io_in_0_bits_word_idx                   (io_probe_req_bits_word_idx),
    .io_in_0_bits_amo_data                   (io_probe_req_bits_amo_data),
    .io_in_0_bits_amo_mask                   (io_probe_req_bits_amo_mask),
    .io_in_0_bits_amo_cmp                    (io_probe_req_bits_amo_cmp),
    .io_in_0_bits_error                      (io_probe_req_bits_error),
    .io_in_0_bits_replace                    (io_probe_req_bits_replace),
    .io_in_0_bits_id                         (io_probe_req_bits_id),
    .io_in_1_ready                           (io_refill_req_ready),
    .io_in_1_valid                           (io_refill_req_valid),
    .io_in_1_bits_miss                       (io_refill_req_bits_miss),
    .io_in_1_bits_miss_id                    (io_refill_req_bits_miss_id),
    .io_in_1_bits_occupy_way                 (io_refill_req_bits_occupy_way),
    .io_in_1_bits_miss_fail_cause_evict_btot
      (io_refill_req_bits_miss_fail_cause_evict_btot),
    .io_in_1_bits_probe                      (1'h0),
    .io_in_1_bits_probe_param                (2'h0),
    .io_in_1_bits_probe_need_data            (1'h0),
    .io_in_1_bits_source                     (io_refill_req_bits_source),
    .io_in_1_bits_cmd                        (io_refill_req_bits_cmd),
    .io_in_1_bits_vaddr                      (io_refill_req_bits_vaddr),
    .io_in_1_bits_addr                       (io_refill_req_bits_addr),
    .io_in_1_bits_word_idx                   (io_refill_req_bits_word_idx),
    .io_in_1_bits_amo_data                   (io_refill_req_bits_amo_data),
    .io_in_1_bits_amo_mask                   (io_refill_req_bits_amo_mask),
    .io_in_1_bits_amo_cmp                    (io_refill_req_bits_amo_cmp),
    .io_in_1_bits_id                         (io_refill_req_bits_id),
    .io_in_2_ready                           (/* unused */),
    .io_in_2_valid                           (io_store_req_valid),
    .io_in_2_bits_probe                      (1'h0),
    .io_in_2_bits_probe_param                (2'h0),
    .io_in_2_bits_probe_need_data            (1'h0),
    .io_in_2_bits_source                     (4'h1),
    .io_in_2_bits_cmd                        (5'h1),
    .io_in_2_bits_vaddr                      (io_store_req_bits_vaddr),
    .io_in_2_bits_addr                       (io_store_req_bits_addr),
    .io_in_2_bits_store_data                 (io_store_req_bits_data),
    .io_in_2_bits_store_mask                 (io_store_req_bits_mask),
    .io_in_2_bits_id                         (io_store_req_bits_id),
    .io_in_3_ready                           (io_atomic_req_ready),
    .io_in_3_valid                           (io_atomic_req_valid),
    .io_in_3_bits_probe                      (1'h0),
    .io_in_3_bits_probe_param                (2'h0),
    .io_in_3_bits_probe_need_data            (1'h0),
    .io_in_3_bits_source                     (4'h2),
    .io_in_3_bits_cmd                        (io_atomic_req_bits_cmd),
    .io_in_3_bits_vaddr                      (io_atomic_req_bits_vaddr),
    .io_in_3_bits_addr                       (io_atomic_req_bits_addr),
    .io_in_3_bits_word_idx                   (io_atomic_req_bits_word_idx),
    .io_in_3_bits_amo_data                   (io_atomic_req_bits_amo_data),
    .io_in_3_bits_amo_mask                   (io_atomic_req_bits_amo_mask),
    .io_in_3_bits_amo_cmp                    (io_atomic_req_bits_amo_cmp),
    .io_in_3_bits_id                         (4'h0),
    .io_out_ready                            (req_ready),
    .io_out_valid                            (_main_pipe_req_arb_io_out_valid),
    .io_out_bits_miss                        (_main_pipe_req_arb_io_out_bits_miss),
    .io_out_bits_miss_id                     (_main_pipe_req_arb_io_out_bits_miss_id),
    .io_out_bits_occupy_way                  (_main_pipe_req_arb_io_out_bits_occupy_way),
    .io_out_bits_miss_fail_cause_evict_btot
      (_main_pipe_req_arb_io_out_bits_miss_fail_cause_evict_btot),
    .io_out_bits_probe                       (_main_pipe_req_arb_io_out_bits_probe),
    .io_out_bits_probe_param                 (_main_pipe_req_arb_io_out_bits_probe_param),
    .io_out_bits_probe_need_data
      (_main_pipe_req_arb_io_out_bits_probe_need_data),
    .io_out_bits_source                      (_main_pipe_req_arb_io_out_bits_source),
    .io_out_bits_cmd                         (_main_pipe_req_arb_io_out_bits_cmd),
    .io_out_bits_vaddr                       (_main_pipe_req_arb_io_out_bits_vaddr),
    .io_out_bits_addr                        (_main_pipe_req_arb_io_out_bits_addr),
    .io_out_bits_store_data                  (_main_pipe_req_arb_io_out_bits_store_data),
    .io_out_bits_store_mask                  (_main_pipe_req_arb_io_out_bits_store_mask),
    .io_out_bits_word_idx                    (_main_pipe_req_arb_io_out_bits_word_idx),
    .io_out_bits_amo_data                    (_main_pipe_req_arb_io_out_bits_amo_data),
    .io_out_bits_amo_mask                    (_main_pipe_req_arb_io_out_bits_amo_mask),
    .io_out_bits_amo_cmp                     (_main_pipe_req_arb_io_out_bits_amo_cmp),
    .io_out_bits_error                       (_main_pipe_req_arb_io_out_bits_error),
    .io_out_bits_replace                     (_main_pipe_req_arb_io_out_bits_replace),
    .io_out_bits_id                          (_main_pipe_req_arb_io_out_bits_id)
  );
  AMOALU amoalu (
    .io_mask (s3_req_amo_mask[7:0]),
    .io_cmd  (s3_req_cmd),
    .io_lhs  (_GEN_5[s3_req_word_idx]),
    .io_rhs  (s3_req_amo_data[63:0]),
    .io_out  (_amoalu_io_out)
  );
  assign io_miss_req_valid = io_miss_req_valid_0;
  assign io_miss_req_bits_source = s2_req_source;
  assign io_miss_req_bits_cmd = s2_req_cmd;
  assign io_miss_req_bits_addr = s2_req_addr;
  assign io_miss_req_bits_vaddr = s2_req_vaddr;
  assign io_miss_req_bits_full_overwrite =
    _io_store_replay_resp_valid_T_3 & (&s2_req_store_mask);
  assign io_miss_req_bits_word_idx = s2_req_word_idx;
  assign io_miss_req_bits_amo_data = s2_req_amo_data;
  assign io_miss_req_bits_amo_mask = s2_req_amo_mask;
  assign io_miss_req_bits_amo_cmp = s2_req_amo_cmp;
  assign io_miss_req_bits_req_coh_state = s2_hit_coh_state;
  assign io_miss_req_bits_id = s2_req_id;
  assign io_miss_req_bits_isBtoT = s2_grow_perm;
  assign io_miss_req_bits_occupy_way = s2_tag_ecc_match_way;
  assign io_miss_req_bits_cancel = s2_grow_perm_fail;
  assign io_miss_req_bits_store_data = s2_req_store_data;
  assign io_miss_req_bits_store_mask = s2_req_store_mask;
  assign io_wbq_conflict_check_valid = io_miss_req_valid_0;
  assign io_wbq_conflict_check_bits = s2_req_addr;
  assign io_store_req_ready =
    io_tag_read_ready & s1_ready
    & ~(s1_s0_set_conflict_store | s2_s0_set_conlict_store | s3_s0_set_conflict_store)
    & ~io_probe_req_valid & ~io_refill_req_valid & ~io_atomic_req_valid;
  assign io_store_replay_resp_valid =
    s2_valid & (_atomic_replay_resp_valid_T | s2_grow_perm_fail)
    & _io_store_replay_resp_valid_T_3;
  assign io_store_replay_resp_bits_id = s2_req_id;
  assign io_store_hit_resp_valid =
    s3_valid & (s3_store_can_go | s3_miss_can_go & _io_error_bits_opType_store_T);
  assign io_store_hit_resp_bits_id = s3_req_id;
  assign io_atomic_resp_valid =
    atomic_replay_resp_valid | s3_valid
    & (s3_amo_can_go | s3_miss_can_go & _io_error_bits_opType_atom_T);
  assign io_atomic_resp_bits_source =
    atomic_replay_resp_valid ? s2_req_source : s3_req_source;
  assign io_atomic_resp_bits_data =
    atomic_replay_resp_valid ? 128'h0 : s3_sc ? {127'h0, s3_sc_fail} : _GEN_2;
  assign io_atomic_resp_bits_miss = atomic_replay_resp_valid;
  assign io_atomic_resp_bits_miss_id = atomic_replay_resp_valid ? 2'h0 : s3_req_miss_id;
  assign io_atomic_resp_bits_replay = atomic_replay_resp_valid;
  assign io_atomic_resp_bits_error = ~atomic_replay_resp_valid & s3_error;
  assign io_atomic_resp_bits_ack_miss_queue = ~atomic_replay_resp_valid & s3_req_miss;
  assign io_atomic_resp_bits_id = atomic_replay_resp_valid ? 4'h0 : {3'h0, lrsc_valid};
  assign io_mainpipe_info_s2_valid = io_mainpipe_info_s2_valid_0;
  assign io_mainpipe_info_s2_miss_id = s2_req_miss_id;
  assign io_mainpipe_info_s2_replay_to_mq = s2_can_go_to_mq_no_data;
  assign io_mainpipe_info_s2_evict_BtoT_way = io_replace_block;
  assign io_mainpipe_info_s2_next_evict_way =
    _io_mainpipe_info_s2_next_evict_way_T[0]
      ? 4'h1
      : _io_mainpipe_info_s2_next_evict_way_T[1]
          ? 4'h2
          : _io_mainpipe_info_s2_next_evict_way_T[2]
              ? 4'h4
              : {_io_mainpipe_info_s2_next_evict_way_T[3], 3'h0};
  assign io_mainpipe_info_s3_valid = s3_valid;
  assign io_mainpipe_info_s3_miss_id = s3_req_miss_id;
  assign io_mainpipe_info_s3_refill_resp = io_mainpipe_info_s3_refill_resp_REG;
  assign io_wb_valid =
    s3_valid
    & (s3_req_replace & ~s3_replace_nothing | s3_req_probe | s3_req_miss
       & (s3_s_amoalu | ~amo_wait_amoalu))
    & (s3_req_miss & s3_need_replacement & (|s3_coh_state) | s3_req_probe
       | s3_req_replace);
  assign io_wb_bits_param =
    s3_req_probe
      ? (_GEN
           ? 3'h3
           : _r_T_108
               ? 3'h4
               : _r_T_104
                   ? 3'h5
                   : _r_T_100 | _r_T_96
                       ? 3'h0
                       : _r_T_92
                           ? 3'h4
                           : _r_T_59 == 4'h4
                               ? 3'h5
                               : _r_T_59 == 4'hB | _r_T_59 == 4'hA
                                   ? 3'h1
                                   : _r_T_59 == 4'h9
                                       ? 3'h2
                                       : _r_T_59 == 4'h8 ? 3'h5 : 3'h0)
      : (&s3_coh_state) | s3_coh_state == 2'h2
          ? 3'h1
          : s3_coh_state == 2'h1 ? 3'h2 : s3_coh_state == 2'h0 ? 3'h5 : 3'h0;
  assign io_wb_bits_voluntary = s3_req_miss | s3_req_replace;
  assign io_wb_bits_hasData =
    (s3_tag_match & s3_req_probe & s3_req_probe_need_data | (&s3_coh_state))
    & ~s3_tag_error;
  assign io_wb_bits_corrupt = io_wb_bits_corrupt_0;
  assign io_wb_bits_addr = {s3_tag, s3_req_vaddr[6], 6'h0};
  assign io_wb_bits_data =
    {io_data_resp_7_raw_data,
     io_data_resp_6_raw_data,
     io_data_resp_5_raw_data,
     io_data_resp_4_raw_data,
     io_data_resp_3_raw_data,
     io_data_resp_2_raw_data,
     io_data_resp_1_raw_data,
     io_data_resp_0_raw_data};
  assign io_data_readline_valid = s1_valid & s1_need_data;
  assign io_data_readline_bits_way_en = s1_way_en;
  assign io_data_readline_bits_addr = s1_req_vaddr[47:0];
  assign io_data_readline_bits_rmask = s1_banked_rmask;
  assign io_data_readline_can_go = io_data_readline_can_go_last_REG;
  assign io_data_readline_stall = s2_valid;
  assign io_data_readline_can_resp = s2_fire_to_s3;
  assign io_data_write_valid = _io_data_write_valid_T & update_data;
  assign io_data_write_bits_wmask =
    s3_req_miss
      ? 8'hFF
      : s3_store_hit
          ? s3_banked_store_wmask
          : s3_can_do_amo_write
              ? (_banked_wmask_T
                   ? {{2{&(s3_req_word_idx[2:1])}},
                      {2{s3_req_word_idx[2:1] == 2'h2}},
                      {2{s3_req_word_idx[2:1] == 2'h1}},
                      {2{s3_req_word_idx[2:1] == 2'h0}}}
                   : 8'h1 << s3_req_word_idx)
              : 8'h0;
  assign io_data_write_bits_data_0 =
    amo_wait_amoalu
      ? s3_amo_data_merged_reg_0
      : s3_sc
          ? ~_GEN_6 & s3_store_data_merged_0 | _GEN_6 & s3_req_amo_data[63:0]
          : s3_cas
              ? ~s3_cas_data_merged_0_full_wmask & s3_store_data_merged_0
                | s3_cas_data_merged_0_full_wmask & s3_req_amo_data[63:0]
              : s3_store_data_merged_0;
  assign io_data_write_bits_data_1 =
    amo_wait_amoalu
      ? s3_amo_data_merged_reg_1
      : s3_sc
          ? ~_GEN_7 & s3_store_data_merged_1 | _GEN_7 & s3_req_amo_data[63:0]
          : s3_cas
              ? ~s3_cas_data_merged_1_full_wmask & s3_store_data_merged_1
                | s3_cas_data_merged_1_full_wmask
                & (h_select_1 ? s3_req_amo_data[127:64] : s3_req_amo_data[63:0])
              : s3_store_data_merged_1;
  assign io_data_write_bits_data_2 =
    amo_wait_amoalu
      ? s3_amo_data_merged_reg_2
      : s3_sc
          ? ~_GEN_8 & s3_store_data_merged_2 | _GEN_8 & s3_req_amo_data[63:0]
          : s3_cas
              ? ~s3_cas_data_merged_2_full_wmask & s3_store_data_merged_2
                | s3_cas_data_merged_2_full_wmask & s3_req_amo_data[63:0]
              : s3_store_data_merged_2;
  assign io_data_write_bits_data_3 =
    amo_wait_amoalu
      ? s3_amo_data_merged_reg_3
      : s3_sc
          ? ~_GEN_9 & s3_store_data_merged_3 | _GEN_9 & s3_req_amo_data[63:0]
          : s3_cas
              ? ~s3_cas_data_merged_3_full_wmask & s3_store_data_merged_3
                | s3_cas_data_merged_3_full_wmask
                & (h_select_3 ? s3_req_amo_data[127:64] : s3_req_amo_data[63:0])
              : s3_store_data_merged_3;
  assign io_data_write_bits_data_4 =
    amo_wait_amoalu
      ? s3_amo_data_merged_reg_4
      : s3_sc
          ? ~_GEN_10 & s3_store_data_merged_4 | _GEN_10 & s3_req_amo_data[63:0]
          : s3_cas
              ? ~s3_cas_data_merged_4_full_wmask & s3_store_data_merged_4
                | s3_cas_data_merged_4_full_wmask & s3_req_amo_data[63:0]
              : s3_store_data_merged_4;
  assign io_data_write_bits_data_5 =
    amo_wait_amoalu
      ? s3_amo_data_merged_reg_5
      : s3_sc
          ? ~_GEN_11 & s3_store_data_merged_5 | _GEN_11 & s3_req_amo_data[63:0]
          : s3_cas
              ? ~s3_cas_data_merged_5_full_wmask & s3_store_data_merged_5
                | s3_cas_data_merged_5_full_wmask
                & (h_select_5 ? s3_req_amo_data[127:64] : s3_req_amo_data[63:0])
              : s3_store_data_merged_5;
  assign io_data_write_bits_data_6 =
    amo_wait_amoalu
      ? s3_amo_data_merged_reg_6
      : s3_sc
          ? ~_GEN_12 & s3_store_data_merged_6 | _GEN_12 & s3_req_amo_data[63:0]
          : s3_cas
              ? ~s3_cas_data_merged_6_full_wmask & s3_store_data_merged_6
                | s3_cas_data_merged_6_full_wmask & s3_req_amo_data[63:0]
              : s3_store_data_merged_6;
  assign io_data_write_bits_data_7 =
    amo_wait_amoalu
      ? s3_amo_data_merged_reg_7
      : s3_sc
          ? ~_GEN_13 & s3_store_data_merged_7 | _GEN_13 & s3_req_amo_data[63:0]
          : s3_cas
              ? ~s3_cas_data_merged_7_full_wmask & s3_store_data_merged_7
                | s3_cas_data_merged_7_full_wmask
                & (h_select_7 ? s3_req_amo_data[127:64] : s3_req_amo_data[63:0])
              : s3_store_data_merged_7;
  assign io_data_write_dup_0_valid = _io_data_write_valid_T & update_data;
  assign io_data_write_dup_0_bits_way_en = s3_way_en;
  assign io_data_write_dup_0_bits_addr = s3_req_vaddr[47:0];
  assign io_data_write_dup_1_valid = _io_data_write_valid_T & update_data;
  assign io_data_write_dup_1_bits_way_en = s3_way_en;
  assign io_data_write_dup_1_bits_addr = s3_req_vaddr[47:0];
  assign io_data_write_dup_2_valid = _io_data_write_valid_T & update_data;
  assign io_data_write_dup_2_bits_way_en = s3_way_en;
  assign io_data_write_dup_2_bits_addr = s3_req_vaddr[47:0];
  assign io_data_write_dup_3_valid = _io_data_write_valid_T & update_data;
  assign io_data_write_dup_3_bits_way_en = s3_way_en;
  assign io_data_write_dup_3_bits_addr = s3_req_vaddr[47:0];
  assign io_data_write_dup_4_valid = _io_data_write_valid_T & update_data;
  assign io_data_write_dup_4_bits_way_en = s3_way_en;
  assign io_data_write_dup_4_bits_addr = s3_req_vaddr[47:0];
  assign io_data_write_dup_5_valid = _io_data_write_valid_T & update_data;
  assign io_data_write_dup_5_bits_way_en = s3_way_en;
  assign io_data_write_dup_5_bits_addr = s3_req_vaddr[47:0];
  assign io_data_write_dup_6_valid = _io_data_write_valid_T & update_data;
  assign io_data_write_dup_6_bits_way_en = s3_way_en;
  assign io_data_write_dup_6_bits_addr = s3_req_vaddr[47:0];
  assign io_data_write_dup_7_valid = _io_data_write_valid_T & update_data;
  assign io_data_write_dup_7_bits_way_en = s3_way_en;
  assign io_data_write_dup_7_bits_addr = s3_req_vaddr[47:0];
  assign io_meta_read_valid = _main_pipe_req_arb_io_out_valid;
  assign io_meta_read_bits_idx = _main_pipe_req_arb_io_out_bits_vaddr[6];
  assign io_meta_write_valid = io_meta_write_valid_0;
  assign io_meta_write_bits_idx = s3_idx;
  assign io_meta_write_bits_way_en = s3_way_en;
  assign io_meta_write_bits_meta_coh_state =
    s3_req_miss
      ? (_GEN_0 == 4'hC
           ? 2'h3
           : _GEN_0 == 4'h4
             | {_miss_new_coh_c_cat_T_28, _miss_new_coh_c_cat_T_61, s3_miss_param} == 4'h0
               ? 2'h2
               : {1'h0, _GEN_0 == 4'h1})
      : probe_update_meta
          ? r_3_0
          : store_update_meta | amo_update_meta ? s3_new_hit_coh_state : 2'h0;
  assign io_error_flag_write_valid = io_meta_write_valid_0 & (s3_l2_error | s3_req_miss);
  assign io_error_flag_write_bits_idx = s3_idx;
  assign io_error_flag_write_bits_way_en = s3_way_en;
  assign io_error_flag_write_bits_flag = s3_l2_error;
  assign io_tag_read_valid = io_tag_read_valid_0;
  assign io_tag_read_bits_idx = _main_pipe_req_arb_io_out_bits_vaddr[6];
  assign io_tag_write_valid = s3_fire & s3_req_miss;
  assign io_tag_write_bits_idx = s3_idx;
  assign io_tag_write_bits_way_en = s3_way_en;
  assign io_tag_write_bits_tag = s3_req_addr[47:7];
  assign io_tag_write_intend = s3_req_miss & s3_valid;
  assign io_replace_access_valid =
    io_replace_access_valid_last_REG & ~s3_req_probe
    & (s3_req_miss | (_io_error_bits_opType_atom_T | _io_error_bits_opType_store_T)
       & s3_hit);
  assign io_replace_access_bits_set = s3_idx;
  assign io_replace_access_bits_way = {|(s3_way_en[3:2]), s3_way_en[3] | s3_way_en[1]};
  assign io_replace_way_set_bits = s1_req_vaddr[6];
  assign io_evict_set = s2_req_vaddr[6];
  assign io_replace_addr_valid = s2_valid & s2_need_eviction;
  assign io_replace_addr_bits = {s2_tag, s2_req_vaddr[6], 6'h0};
  assign io_status_dup_0_s1_valid = s1_valid;
  assign io_status_dup_0_s1_bits_set = io_status_dup_0_s1_bits_set_r;
  assign io_status_dup_0_s1_bits_way_en = s1_way_en;
  assign io_status_dup_0_s2_valid = s2_valid & ~io_status_dup_0_s2_valid_r;
  assign io_status_dup_0_s2_bits_set = io_status_dup_0_s2_bits_set_r;
  assign io_status_dup_0_s2_bits_way_en = s2_way_en;
  assign io_status_dup_0_s3_valid = s3_valid & ~io_status_dup_0_s3_valid_r;
  assign io_status_dup_0_s3_bits_set = io_status_dup_0_s3_bits_set_r;
  assign io_status_dup_0_s3_bits_way_en = io_status_dup_0_s3_bits_way_en_r;
  assign io_status_dup_1_s1_valid = s1_valid;
  assign io_status_dup_1_s1_bits_set = io_status_dup_1_s1_bits_set_r;
  assign io_status_dup_1_s1_bits_way_en = s1_way_en;
  assign io_status_dup_1_s2_valid = s2_valid & ~io_status_dup_1_s2_valid_r;
  assign io_status_dup_1_s2_bits_set = io_status_dup_1_s2_bits_set_r;
  assign io_status_dup_1_s2_bits_way_en = s2_way_en;
  assign io_status_dup_1_s3_valid = s3_valid & ~io_status_dup_1_s3_valid_r;
  assign io_status_dup_1_s3_bits_set = io_status_dup_1_s3_bits_set_r;
  assign io_status_dup_1_s3_bits_way_en = io_status_dup_1_s3_bits_way_en_r;
  assign io_status_dup_2_s1_valid = s1_valid;
  assign io_status_dup_2_s1_bits_set = io_status_dup_2_s1_bits_set_r;
  assign io_status_dup_2_s1_bits_way_en = s1_way_en;
  assign io_status_dup_2_s2_valid = s2_valid & ~io_status_dup_2_s2_valid_r;
  assign io_status_dup_2_s2_bits_set = io_status_dup_2_s2_bits_set_r;
  assign io_status_dup_2_s2_bits_way_en = s2_way_en;
  assign io_status_dup_2_s3_valid = s3_valid & ~io_status_dup_2_s3_valid_r;
  assign io_status_dup_2_s3_bits_set = io_status_dup_2_s3_bits_set_r;
  assign io_status_dup_2_s3_bits_way_en = io_status_dup_2_s3_bits_way_en_r;
  assign io_status_dup_3_s1_valid = s1_valid;
  assign io_status_dup_3_s1_bits_set = io_status_dup_3_s1_bits_set_r;
  assign io_status_dup_3_s1_bits_way_en = s1_way_en;
  assign io_status_dup_3_s2_valid = s2_valid & ~io_status_dup_3_s2_valid_r;
  assign io_status_dup_3_s2_bits_set = io_status_dup_3_s2_bits_set_r;
  assign io_status_dup_3_s2_bits_way_en = s2_way_en;
  assign io_status_dup_3_s3_valid = s3_valid & ~io_status_dup_3_s3_valid_r;
  assign io_status_dup_3_s3_bits_set = io_status_dup_3_s3_bits_set_r;
  assign io_status_dup_3_s3_bits_way_en = io_status_dup_3_s3_bits_way_en_r;
  assign io_status_dup_4_s1_valid = s1_valid;
  assign io_status_dup_4_s1_bits_set = io_status_dup_4_s1_bits_set_r;
  assign io_status_dup_4_s1_bits_way_en = s1_way_en;
  assign io_status_dup_4_s2_valid = s2_valid & ~io_status_dup_4_s2_valid_r;
  assign io_status_dup_4_s2_bits_set = io_status_dup_4_s2_bits_set_r;
  assign io_status_dup_4_s2_bits_way_en = s2_way_en;
  assign io_status_dup_4_s3_valid = s3_valid & ~io_status_dup_4_s3_valid_r;
  assign io_status_dup_4_s3_bits_set = io_status_dup_4_s3_bits_set_r;
  assign io_status_dup_4_s3_bits_way_en = io_status_dup_4_s3_bits_way_en_r;
  assign io_status_dup_5_s1_valid = s1_valid;
  assign io_status_dup_5_s1_bits_set = io_status_dup_5_s1_bits_set_r;
  assign io_status_dup_5_s1_bits_way_en = s1_way_en;
  assign io_status_dup_5_s2_valid = s2_valid & ~io_status_dup_5_s2_valid_r;
  assign io_status_dup_5_s2_bits_set = io_status_dup_5_s2_bits_set_r;
  assign io_status_dup_5_s2_bits_way_en = s2_way_en;
  assign io_status_dup_5_s3_valid = s3_valid & ~io_status_dup_5_s3_valid_r;
  assign io_status_dup_5_s3_bits_set = io_status_dup_5_s3_bits_set_r;
  assign io_status_dup_5_s3_bits_way_en = io_status_dup_5_s3_bits_way_en_r;
  assign io_status_dup_6_s1_valid = s1_valid;
  assign io_status_dup_6_s1_bits_set = io_status_dup_6_s1_bits_set_r;
  assign io_status_dup_6_s1_bits_way_en = s1_way_en;
  assign io_status_dup_6_s2_valid = s2_valid & ~io_status_dup_6_s2_valid_r;
  assign io_status_dup_6_s2_bits_set = io_status_dup_6_s2_bits_set_r;
  assign io_status_dup_6_s2_bits_way_en = s2_way_en;
  assign io_status_dup_6_s3_valid = s3_valid & ~io_status_dup_6_s3_valid_r;
  assign io_status_dup_6_s3_bits_set = io_status_dup_6_s3_bits_set_r;
  assign io_status_dup_6_s3_bits_way_en = io_status_dup_6_s3_bits_way_en_r;
  assign io_status_dup_7_s1_valid = s1_valid;
  assign io_status_dup_7_s1_bits_set = io_status_dup_7_s1_bits_set_r;
  assign io_status_dup_7_s1_bits_way_en = s1_way_en;
  assign io_status_dup_7_s2_valid = s2_valid & ~io_status_dup_7_s2_valid_r;
  assign io_status_dup_7_s2_bits_set = io_status_dup_7_s2_bits_set_r;
  assign io_status_dup_7_s2_bits_way_en = s2_way_en;
  assign io_status_dup_7_s3_valid = s3_valid & ~io_status_dup_7_s3_valid_r;
  assign io_status_dup_7_s3_bits_set = io_status_dup_7_s3_bits_set_r;
  assign io_status_dup_7_s3_bits_way_en = io_status_dup_7_s3_bits_way_en_r;
  assign io_status_dup_8_s1_valid = s1_valid;
  assign io_status_dup_8_s1_bits_set = io_status_dup_8_s1_bits_set_r;
  assign io_status_dup_8_s1_bits_way_en = s1_way_en;
  assign io_status_dup_8_s2_valid = s2_valid & ~io_status_dup_8_s2_valid_r;
  assign io_status_dup_8_s2_bits_set = io_status_dup_8_s2_bits_set_r;
  assign io_status_dup_8_s2_bits_way_en = s2_way_en;
  assign io_status_dup_8_s3_valid = s3_valid & ~io_status_dup_8_s3_valid_r;
  assign io_status_dup_8_s3_bits_set = io_status_dup_8_s3_bits_set_r;
  assign io_status_dup_8_s3_bits_way_en = io_status_dup_8_s3_bits_way_en_r;
  assign io_status_dup_9_s1_valid = s1_valid;
  assign io_status_dup_9_s1_bits_set = io_status_dup_9_s1_bits_set_r;
  assign io_status_dup_9_s1_bits_way_en = s1_way_en;
  assign io_status_dup_9_s2_valid = s2_valid & ~io_status_dup_9_s2_valid_r;
  assign io_status_dup_9_s2_bits_set = io_status_dup_9_s2_bits_set_r;
  assign io_status_dup_9_s2_bits_way_en = s2_way_en;
  assign io_status_dup_9_s3_valid = s3_valid & ~io_status_dup_9_s3_valid_r;
  assign io_status_dup_9_s3_bits_set = io_status_dup_9_s3_bits_set_r;
  assign io_status_dup_9_s3_bits_way_en = io_status_dup_9_s3_bits_way_en_r;
  assign io_status_dup_10_s1_valid = s1_valid;
  assign io_status_dup_10_s1_bits_set = io_status_dup_10_s1_bits_set_r;
  assign io_status_dup_10_s1_bits_way_en = s1_way_en;
  assign io_status_dup_10_s2_valid = s2_valid & ~io_status_dup_10_s2_valid_r;
  assign io_status_dup_10_s2_bits_set = io_status_dup_10_s2_bits_set_r;
  assign io_status_dup_10_s2_bits_way_en = s2_way_en;
  assign io_status_dup_10_s3_valid = s3_valid & ~io_status_dup_10_s3_valid_r;
  assign io_status_dup_10_s3_bits_set = io_status_dup_10_s3_bits_set_r;
  assign io_status_dup_10_s3_bits_way_en = io_status_dup_10_s3_bits_way_en_r;
  assign io_status_dup_11_s1_valid = s1_valid;
  assign io_status_dup_11_s1_bits_set = io_status_dup_11_s1_bits_set_r;
  assign io_status_dup_11_s1_bits_way_en = s1_way_en;
  assign io_status_dup_11_s2_valid = s2_valid & ~io_status_dup_11_s2_valid_r;
  assign io_status_dup_11_s2_bits_set = io_status_dup_11_s2_bits_set_r;
  assign io_status_dup_11_s2_bits_way_en = s2_way_en;
  assign io_status_dup_11_s3_valid = s3_valid & ~io_status_dup_11_s3_valid_r;
  assign io_status_dup_11_s3_bits_set = io_status_dup_11_s3_bits_set_r;
  assign io_status_dup_11_s3_bits_way_en = io_status_dup_11_s3_bits_way_en_r;
  assign io_status_dup_12_s1_valid = s1_valid;
  assign io_status_dup_12_s1_bits_set = io_status_dup_12_s1_bits_set_r;
  assign io_status_dup_12_s1_bits_way_en = s1_way_en;
  assign io_status_dup_12_s2_valid = s2_valid & ~io_status_dup_12_s2_valid_r;
  assign io_status_dup_12_s2_bits_set = io_status_dup_12_s2_bits_set_r;
  assign io_status_dup_12_s2_bits_way_en = s2_way_en;
  assign io_status_dup_12_s3_valid = s3_valid & ~io_status_dup_12_s3_valid_r;
  assign io_status_dup_12_s3_bits_set = io_status_dup_12_s3_bits_set_r;
  assign io_status_dup_12_s3_bits_way_en = io_status_dup_12_s3_bits_way_en_r;
  assign io_status_dup_13_s1_valid = s1_valid;
  assign io_status_dup_13_s1_bits_set = io_status_dup_13_s1_bits_set_r;
  assign io_status_dup_13_s1_bits_way_en = s1_way_en;
  assign io_status_dup_13_s2_valid = s2_valid & ~io_status_dup_13_s2_valid_r;
  assign io_status_dup_13_s2_bits_set = io_status_dup_13_s2_bits_set_r;
  assign io_status_dup_13_s2_bits_way_en = s2_way_en;
  assign io_status_dup_13_s3_valid = s3_valid & ~io_status_dup_13_s3_valid_r;
  assign io_status_dup_13_s3_bits_set = io_status_dup_13_s3_bits_set_r;
  assign io_status_dup_13_s3_bits_way_en = io_status_dup_13_s3_bits_way_en_r;
  assign io_status_dup_14_s1_valid = s1_valid;
  assign io_status_dup_14_s1_bits_set = io_status_dup_14_s1_bits_set_r;
  assign io_status_dup_14_s1_bits_way_en = s1_way_en;
  assign io_status_dup_14_s2_valid = s2_valid & ~io_status_dup_14_s2_valid_r;
  assign io_status_dup_14_s2_bits_set = io_status_dup_14_s2_bits_set_r;
  assign io_status_dup_14_s2_bits_way_en = s2_way_en;
  assign io_status_dup_14_s3_valid = s3_valid & ~io_status_dup_14_s3_valid_r;
  assign io_status_dup_14_s3_bits_set = io_status_dup_14_s3_bits_set_r;
  assign io_status_dup_14_s3_bits_way_en = io_status_dup_14_s3_bits_way_en_r;
  assign io_status_dup_15_s1_valid = s1_valid;
  assign io_status_dup_15_s1_bits_set = io_status_dup_15_s1_bits_set_r;
  assign io_status_dup_15_s1_bits_way_en = s1_way_en;
  assign io_status_dup_15_s2_valid = s2_valid & ~io_status_dup_15_s2_valid_r;
  assign io_status_dup_15_s2_bits_set = io_status_dup_15_s2_bits_set_r;
  assign io_status_dup_15_s2_bits_way_en = s2_way_en;
  assign io_status_dup_15_s3_valid = s3_valid & ~io_status_dup_15_s3_valid_r;
  assign io_status_dup_15_s3_bits_set = io_status_dup_15_s3_bits_set_r;
  assign io_status_dup_15_s3_bits_way_en = io_status_dup_15_s3_bits_way_en_r;
  assign io_status_dup_16_s1_valid = s1_valid;
  assign io_status_dup_16_s1_bits_set = io_status_dup_16_s1_bits_set_r;
  assign io_status_dup_16_s1_bits_way_en = s1_way_en;
  assign io_status_dup_16_s2_valid = s2_valid & ~io_status_dup_16_s2_valid_r;
  assign io_status_dup_16_s2_bits_set = io_status_dup_16_s2_bits_set_r;
  assign io_status_dup_16_s2_bits_way_en = s2_way_en;
  assign io_status_dup_16_s3_valid = s3_valid & ~io_status_dup_16_s3_valid_r;
  assign io_status_dup_16_s3_bits_set = io_status_dup_16_s3_bits_set_r;
  assign io_status_dup_16_s3_bits_way_en = io_status_dup_16_s3_bits_way_en_r;
  assign io_status_dup_17_s1_valid = s1_valid;
  assign io_status_dup_17_s1_bits_set = io_status_dup_17_s1_bits_set_r;
  assign io_status_dup_17_s1_bits_way_en = s1_way_en;
  assign io_status_dup_17_s2_valid = s2_valid & ~io_status_dup_17_s2_valid_r;
  assign io_status_dup_17_s2_bits_set = io_status_dup_17_s2_bits_set_r;
  assign io_status_dup_17_s2_bits_way_en = s2_way_en;
  assign io_status_dup_17_s3_valid = s3_valid & ~io_status_dup_17_s3_valid_r;
  assign io_status_dup_17_s3_bits_set = io_status_dup_17_s3_bits_set_r;
  assign io_status_dup_17_s3_bits_way_en = io_status_dup_17_s3_bits_way_en_r;
  assign io_status_dup_18_s1_valid = s1_valid;
  assign io_status_dup_18_s1_bits_set = io_status_dup_18_s1_bits_set_r;
  assign io_status_dup_18_s1_bits_way_en = s1_way_en;
  assign io_status_dup_18_s2_valid = s2_valid & ~io_status_dup_18_s2_valid_r;
  assign io_status_dup_18_s2_bits_set = io_status_dup_18_s2_bits_set_r;
  assign io_status_dup_18_s2_bits_way_en = s2_way_en;
  assign io_status_dup_18_s3_valid = s3_valid & ~io_status_dup_18_s3_valid_r;
  assign io_status_dup_18_s3_bits_set = io_status_dup_18_s3_bits_set_r;
  assign io_status_dup_18_s3_bits_way_en = io_status_dup_18_s3_bits_way_en_r;
  assign io_status_dup_19_s1_valid = s1_valid;
  assign io_status_dup_19_s1_bits_set = io_status_dup_19_s1_bits_set_r;
  assign io_status_dup_19_s1_bits_way_en = s1_way_en;
  assign io_status_dup_19_s2_valid = s2_valid & ~io_status_dup_19_s2_valid_r;
  assign io_status_dup_19_s2_bits_set = io_status_dup_19_s2_bits_set_r;
  assign io_status_dup_19_s2_bits_way_en = s2_way_en;
  assign io_status_dup_19_s3_valid = s3_valid & ~io_status_dup_19_s3_valid_r;
  assign io_status_dup_19_s3_bits_set = io_status_dup_19_s3_bits_set_r;
  assign io_status_dup_19_s3_bits_way_en = io_status_dup_19_s3_bits_way_en_r;
  assign io_status_dup_20_s1_valid = s1_valid;
  assign io_status_dup_20_s1_bits_set = io_status_dup_20_s1_bits_set_r;
  assign io_status_dup_20_s1_bits_way_en = s1_way_en;
  assign io_status_dup_20_s2_valid = s2_valid & ~io_status_dup_20_s2_valid_r;
  assign io_status_dup_20_s2_bits_set = io_status_dup_20_s2_bits_set_r;
  assign io_status_dup_20_s2_bits_way_en = s2_way_en;
  assign io_status_dup_20_s3_valid = s3_valid & ~io_status_dup_20_s3_valid_r;
  assign io_status_dup_20_s3_bits_set = io_status_dup_20_s3_bits_set_r;
  assign io_status_dup_20_s3_bits_way_en = io_status_dup_20_s3_bits_way_en_r;
  assign io_status_dup_21_s1_valid = s1_valid;
  assign io_status_dup_21_s1_bits_set = io_status_dup_21_s1_bits_set_r;
  assign io_status_dup_21_s1_bits_way_en = s1_way_en;
  assign io_status_dup_21_s2_valid = s2_valid & ~io_status_dup_21_s2_valid_r;
  assign io_status_dup_21_s2_bits_set = io_status_dup_21_s2_bits_set_r;
  assign io_status_dup_21_s2_bits_way_en = s2_way_en;
  assign io_status_dup_21_s3_valid = s3_valid & ~io_status_dup_21_s3_valid_r;
  assign io_status_dup_21_s3_bits_set = io_status_dup_21_s3_bits_set_r;
  assign io_status_dup_21_s3_bits_way_en = io_status_dup_21_s3_bits_way_en_r;
  assign io_status_dup_22_s1_valid = s1_valid;
  assign io_status_dup_22_s1_bits_set = io_status_dup_22_s1_bits_set_r;
  assign io_status_dup_22_s1_bits_way_en = s1_way_en;
  assign io_status_dup_22_s2_valid = s2_valid & ~io_status_dup_22_s2_valid_r;
  assign io_status_dup_22_s2_bits_set = io_status_dup_22_s2_bits_set_r;
  assign io_status_dup_22_s2_bits_way_en = s2_way_en;
  assign io_status_dup_22_s3_valid = s3_valid & ~io_status_dup_22_s3_valid_r;
  assign io_status_dup_22_s3_bits_set = io_status_dup_22_s3_bits_set_r;
  assign io_status_dup_22_s3_bits_way_en = io_status_dup_22_s3_bits_way_en_r;
  assign io_status_dup_23_s1_valid = s1_valid;
  assign io_status_dup_23_s1_bits_set = io_status_dup_23_s1_bits_set_r;
  assign io_status_dup_23_s1_bits_way_en = s1_way_en;
  assign io_status_dup_23_s2_valid = s2_valid & ~io_status_dup_23_s2_valid_r;
  assign io_status_dup_23_s2_bits_set = io_status_dup_23_s2_bits_set_r;
  assign io_status_dup_23_s2_bits_way_en = s2_way_en;
  assign io_status_dup_23_s3_valid = s3_valid & ~io_status_dup_23_s3_valid_r;
  assign io_status_dup_23_s3_bits_set = io_status_dup_23_s3_bits_set_r;
  assign io_status_dup_23_s3_bits_way_en = io_status_dup_23_s3_bits_way_en_r;
  assign io_lrsc_locked_block_valid = lrsc_valid;
  assign io_lrsc_locked_block_bits = lrsc_addr;
  assign io_update_resv_set = s3_valid & s3_lr & s3_can_do_amo;
  assign io_block_lr = io_block_lr_last_REG;
  assign io_error_valid = s3_error & io_error_valid_last_REG;
  assign io_error_bits_source_tag = s3_tag_error;
  assign io_error_bits_source_data = s3_data_error;
  assign io_error_bits_source_l2 = s3_flag_error | s3_l2_error;
  assign io_error_bits_opType_store = _io_error_bits_opType_store_T & ~s3_req_probe;
  assign io_error_bits_opType_probe = s3_req_probe;
  assign io_error_bits_opType_release = s3_req_replace;
  assign io_error_bits_opType_atom = _io_error_bits_opType_atom_T & ~s3_req_probe;
  assign io_error_bits_paddr = {s3_error_paddr_r[47:6], 6'h0};
  assign io_error_bits_report_to_beu =
    io_wb_bits_corrupt_0 & io_error_bits_report_to_beu_REG;
  assign io_pseudo_tag_error_inj_done =
    s1_fire & (|{|meta_resp_3, |meta_resp_2, |meta_resp_1, |meta_resp_0});
  assign io_pseudo_data_error_inj_done =
    s2_fire_to_s3 & (s2_tag_error | s2_hit) & s2_may_report_data_error;
  assign io_perf_0_value = {5'h0, io_perf_0_value_REG_1};
  assign io_perf_1_value = {3'h0, io_perf_1_value_REG_1};
endmodule

