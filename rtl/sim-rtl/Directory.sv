// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module Directory(
  input         clock,
  input         reset,
  output        io_read_ready,
  input         io_read_valid,
  input  [40:0] io_read_bits_tag,
  input         io_read_bits_set,
  input  [3:0]  io_read_bits_wayMask,
  input  [2:0]  io_read_bits_replacerInfo_channel,
  input  [2:0]  io_read_bits_replacerInfo_opcode,
  input  [4:0]  io_read_bits_replacerInfo_reqSource,
  input         io_read_bits_replacerInfo_refill_prefetch,
  input         io_read_bits_refill,
  input  [7:0]  io_read_bits_mshrId,
  input         io_read_bits_cmoAll,
  input  [1:0]  io_read_bits_cmoWay,
  output        io_resp_valid,
  output        io_resp_bits_hit,
  output [40:0] io_resp_bits_tag,
  output        io_resp_bits_set,
  output [1:0]  io_resp_bits_way,
  output        io_resp_bits_meta_dirty,
  output [1:0]  io_resp_bits_meta_state,
  output        io_resp_bits_meta_clients,
  output        io_resp_bits_meta_accessed,
  output        io_resp_bits_meta_tagErr,
  output        io_resp_bits_meta_dataErr,
  output        io_resp_bits_error,
  output [2:0]  io_resp_bits_replacerInfo_channel,
  output [2:0]  io_resp_bits_replacerInfo_opcode,
  output [4:0]  io_resp_bits_replacerInfo_reqSource,
  output        io_resp_bits_replacerInfo_refill_prefetch,
  input         io_metaWReq_valid,
  input         io_metaWReq_bits_set,
  input  [3:0]  io_metaWReq_bits_wayOH,
  input         io_metaWReq_bits_wmeta_dirty,
  input  [1:0]  io_metaWReq_bits_wmeta_state,
  input         io_metaWReq_bits_wmeta_clients,
  input         io_metaWReq_bits_wmeta_accessed,
  input         io_metaWReq_bits_wmeta_tagErr,
  input         io_metaWReq_bits_wmeta_dataErr,
  input         io_tagWReq_valid,
  input         io_tagWReq_bits_set,
  input  [1:0]  io_tagWReq_bits_way,
  input  [40:0] io_tagWReq_bits_wtag,
  output        io_replResp_valid,
  output [40:0] io_replResp_bits_tag,
  output        io_replResp_bits_set,
  output [1:0]  io_replResp_bits_way,
  output        io_replResp_bits_meta_dirty,
  output [1:0]  io_replResp_bits_meta_state,
  output        io_replResp_bits_meta_clients,
  output        io_replResp_bits_meta_accessed,
  output        io_replResp_bits_meta_tagErr,
  output        io_replResp_bits_meta_dataErr,
  output [7:0]  io_replResp_bits_mshrId,
  output        io_replResp_bits_retry,
  input         io_msInfo_0_valid,
  input  [2:0]  io_msInfo_0_bits_channel,
  input         io_msInfo_0_bits_set,
  input  [1:0]  io_msInfo_0_bits_way,
  input  [40:0] io_msInfo_0_bits_reqTag,
  input         io_msInfo_0_bits_willFree,
  input         io_msInfo_0_bits_needRelease,
  input         io_msInfo_0_bits_blockRefill,
  input         io_msInfo_0_bits_meta_dirty,
  input  [1:0]  io_msInfo_0_bits_meta_state,
  input         io_msInfo_0_bits_meta_clients,
  input         io_msInfo_0_bits_meta_accessed,
  input         io_msInfo_0_bits_meta_tagErr,
  input         io_msInfo_0_bits_meta_dataErr,
  input  [40:0] io_msInfo_0_bits_metaTag,
  input         io_msInfo_0_bits_dirHit,
  input         io_msInfo_0_bits_isAcqOrPrefetch,
  input         io_msInfo_0_bits_isPrefetch,
  input  [2:0]  io_msInfo_0_bits_param,
  input         io_msInfo_0_bits_mergeA,
  input         io_msInfo_0_bits_w_grantfirst,
  input         io_msInfo_0_bits_s_release,
  input         io_msInfo_0_bits_s_refill,
  input         io_msInfo_0_bits_s_cmoresp,
  input         io_msInfo_0_bits_s_cmometaw,
  input         io_msInfo_0_bits_w_releaseack,
  input         io_msInfo_0_bits_w_replResp,
  input         io_msInfo_0_bits_w_rprobeacklast,
  input         io_msInfo_0_bits_replaceData,
  input         io_msInfo_0_bits_releaseToClean,
  input         io_msInfo_1_valid,
  input  [2:0]  io_msInfo_1_bits_channel,
  input         io_msInfo_1_bits_set,
  input  [1:0]  io_msInfo_1_bits_way,
  input  [40:0] io_msInfo_1_bits_reqTag,
  input         io_msInfo_1_bits_willFree,
  input         io_msInfo_1_bits_needRelease,
  input         io_msInfo_1_bits_blockRefill,
  input         io_msInfo_1_bits_meta_dirty,
  input  [1:0]  io_msInfo_1_bits_meta_state,
  input         io_msInfo_1_bits_meta_clients,
  input         io_msInfo_1_bits_meta_accessed,
  input         io_msInfo_1_bits_meta_tagErr,
  input         io_msInfo_1_bits_meta_dataErr,
  input  [40:0] io_msInfo_1_bits_metaTag,
  input         io_msInfo_1_bits_dirHit,
  input         io_msInfo_1_bits_isAcqOrPrefetch,
  input         io_msInfo_1_bits_isPrefetch,
  input  [2:0]  io_msInfo_1_bits_param,
  input         io_msInfo_1_bits_mergeA,
  input         io_msInfo_1_bits_w_grantfirst,
  input         io_msInfo_1_bits_s_release,
  input         io_msInfo_1_bits_s_refill,
  input         io_msInfo_1_bits_s_cmoresp,
  input         io_msInfo_1_bits_s_cmometaw,
  input         io_msInfo_1_bits_w_releaseack,
  input         io_msInfo_1_bits_w_replResp,
  input         io_msInfo_1_bits_w_rprobeacklast,
  input         io_msInfo_1_bits_replaceData,
  input         io_msInfo_1_bits_releaseToClean,
  input         io_msInfo_2_valid,
  input  [2:0]  io_msInfo_2_bits_channel,
  input         io_msInfo_2_bits_set,
  input  [1:0]  io_msInfo_2_bits_way,
  input  [40:0] io_msInfo_2_bits_reqTag,
  input         io_msInfo_2_bits_willFree,
  input         io_msInfo_2_bits_needRelease,
  input         io_msInfo_2_bits_blockRefill,
  input         io_msInfo_2_bits_meta_dirty,
  input  [1:0]  io_msInfo_2_bits_meta_state,
  input         io_msInfo_2_bits_meta_clients,
  input         io_msInfo_2_bits_meta_accessed,
  input         io_msInfo_2_bits_meta_tagErr,
  input         io_msInfo_2_bits_meta_dataErr,
  input  [40:0] io_msInfo_2_bits_metaTag,
  input         io_msInfo_2_bits_dirHit,
  input         io_msInfo_2_bits_isAcqOrPrefetch,
  input         io_msInfo_2_bits_isPrefetch,
  input  [2:0]  io_msInfo_2_bits_param,
  input         io_msInfo_2_bits_mergeA,
  input         io_msInfo_2_bits_w_grantfirst,
  input         io_msInfo_2_bits_s_release,
  input         io_msInfo_2_bits_s_refill,
  input         io_msInfo_2_bits_s_cmoresp,
  input         io_msInfo_2_bits_s_cmometaw,
  input         io_msInfo_2_bits_w_releaseack,
  input         io_msInfo_2_bits_w_replResp,
  input         io_msInfo_2_bits_w_rprobeacklast,
  input         io_msInfo_2_bits_replaceData,
  input         io_msInfo_2_bits_releaseToClean,
  input         io_msInfo_3_valid,
  input  [2:0]  io_msInfo_3_bits_channel,
  input         io_msInfo_3_bits_set,
  input  [1:0]  io_msInfo_3_bits_way,
  input  [40:0] io_msInfo_3_bits_reqTag,
  input         io_msInfo_3_bits_willFree,
  input         io_msInfo_3_bits_needRelease,
  input         io_msInfo_3_bits_blockRefill,
  input         io_msInfo_3_bits_meta_dirty,
  input  [1:0]  io_msInfo_3_bits_meta_state,
  input         io_msInfo_3_bits_meta_clients,
  input         io_msInfo_3_bits_meta_accessed,
  input         io_msInfo_3_bits_meta_tagErr,
  input         io_msInfo_3_bits_meta_dataErr,
  input  [40:0] io_msInfo_3_bits_metaTag,
  input         io_msInfo_3_bits_dirHit,
  input         io_msInfo_3_bits_isAcqOrPrefetch,
  input         io_msInfo_3_bits_isPrefetch,
  input  [2:0]  io_msInfo_3_bits_param,
  input         io_msInfo_3_bits_mergeA,
  input         io_msInfo_3_bits_w_grantfirst,
  input         io_msInfo_3_bits_s_release,
  input         io_msInfo_3_bits_s_refill,
  input         io_msInfo_3_bits_s_cmoresp,
  input         io_msInfo_3_bits_s_cmometaw,
  input         io_msInfo_3_bits_w_releaseack,
  input         io_msInfo_3_bits_w_replResp,
  input         io_msInfo_3_bits_w_rprobeacklast,
  input         io_msInfo_3_bits_replaceData,
  input         io_msInfo_3_bits_releaseToClean,
  input         io_msInfo_4_valid,
  input  [2:0]  io_msInfo_4_bits_channel,
  input         io_msInfo_4_bits_set,
  input  [1:0]  io_msInfo_4_bits_way,
  input  [40:0] io_msInfo_4_bits_reqTag,
  input         io_msInfo_4_bits_willFree,
  input         io_msInfo_4_bits_needRelease,
  input         io_msInfo_4_bits_blockRefill,
  input         io_msInfo_4_bits_meta_dirty,
  input  [1:0]  io_msInfo_4_bits_meta_state,
  input         io_msInfo_4_bits_meta_clients,
  input         io_msInfo_4_bits_meta_accessed,
  input         io_msInfo_4_bits_meta_tagErr,
  input         io_msInfo_4_bits_meta_dataErr,
  input  [40:0] io_msInfo_4_bits_metaTag,
  input         io_msInfo_4_bits_dirHit,
  input         io_msInfo_4_bits_isAcqOrPrefetch,
  input         io_msInfo_4_bits_isPrefetch,
  input  [2:0]  io_msInfo_4_bits_param,
  input         io_msInfo_4_bits_mergeA,
  input         io_msInfo_4_bits_w_grantfirst,
  input         io_msInfo_4_bits_s_release,
  input         io_msInfo_4_bits_s_refill,
  input         io_msInfo_4_bits_s_cmoresp,
  input         io_msInfo_4_bits_s_cmometaw,
  input         io_msInfo_4_bits_w_releaseack,
  input         io_msInfo_4_bits_w_replResp,
  input         io_msInfo_4_bits_w_rprobeacklast,
  input         io_msInfo_4_bits_replaceData,
  input         io_msInfo_4_bits_releaseToClean,
  input         io_msInfo_5_valid,
  input  [2:0]  io_msInfo_5_bits_channel,
  input         io_msInfo_5_bits_set,
  input  [1:0]  io_msInfo_5_bits_way,
  input  [40:0] io_msInfo_5_bits_reqTag,
  input         io_msInfo_5_bits_willFree,
  input         io_msInfo_5_bits_needRelease,
  input         io_msInfo_5_bits_blockRefill,
  input         io_msInfo_5_bits_meta_dirty,
  input  [1:0]  io_msInfo_5_bits_meta_state,
  input         io_msInfo_5_bits_meta_clients,
  input         io_msInfo_5_bits_meta_accessed,
  input         io_msInfo_5_bits_meta_tagErr,
  input         io_msInfo_5_bits_meta_dataErr,
  input  [40:0] io_msInfo_5_bits_metaTag,
  input         io_msInfo_5_bits_dirHit,
  input         io_msInfo_5_bits_isAcqOrPrefetch,
  input         io_msInfo_5_bits_isPrefetch,
  input  [2:0]  io_msInfo_5_bits_param,
  input         io_msInfo_5_bits_mergeA,
  input         io_msInfo_5_bits_w_grantfirst,
  input         io_msInfo_5_bits_s_release,
  input         io_msInfo_5_bits_s_refill,
  input         io_msInfo_5_bits_s_cmoresp,
  input         io_msInfo_5_bits_s_cmometaw,
  input         io_msInfo_5_bits_w_releaseack,
  input         io_msInfo_5_bits_w_replResp,
  input         io_msInfo_5_bits_w_rprobeacklast,
  input         io_msInfo_5_bits_replaceData,
  input         io_msInfo_5_bits_releaseToClean,
  input         io_msInfo_6_valid,
  input  [2:0]  io_msInfo_6_bits_channel,
  input         io_msInfo_6_bits_set,
  input  [1:0]  io_msInfo_6_bits_way,
  input  [40:0] io_msInfo_6_bits_reqTag,
  input         io_msInfo_6_bits_willFree,
  input         io_msInfo_6_bits_needRelease,
  input         io_msInfo_6_bits_blockRefill,
  input         io_msInfo_6_bits_meta_dirty,
  input  [1:0]  io_msInfo_6_bits_meta_state,
  input         io_msInfo_6_bits_meta_clients,
  input         io_msInfo_6_bits_meta_accessed,
  input         io_msInfo_6_bits_meta_tagErr,
  input         io_msInfo_6_bits_meta_dataErr,
  input  [40:0] io_msInfo_6_bits_metaTag,
  input         io_msInfo_6_bits_dirHit,
  input         io_msInfo_6_bits_isAcqOrPrefetch,
  input         io_msInfo_6_bits_isPrefetch,
  input  [2:0]  io_msInfo_6_bits_param,
  input         io_msInfo_6_bits_mergeA,
  input         io_msInfo_6_bits_w_grantfirst,
  input         io_msInfo_6_bits_s_release,
  input         io_msInfo_6_bits_s_refill,
  input         io_msInfo_6_bits_s_cmoresp,
  input         io_msInfo_6_bits_s_cmometaw,
  input         io_msInfo_6_bits_w_releaseack,
  input         io_msInfo_6_bits_w_replResp,
  input         io_msInfo_6_bits_w_rprobeacklast,
  input         io_msInfo_6_bits_replaceData,
  input         io_msInfo_6_bits_releaseToClean,
  input         io_msInfo_7_valid,
  input  [2:0]  io_msInfo_7_bits_channel,
  input         io_msInfo_7_bits_set,
  input  [1:0]  io_msInfo_7_bits_way,
  input  [40:0] io_msInfo_7_bits_reqTag,
  input         io_msInfo_7_bits_willFree,
  input         io_msInfo_7_bits_needRelease,
  input         io_msInfo_7_bits_blockRefill,
  input         io_msInfo_7_bits_meta_dirty,
  input  [1:0]  io_msInfo_7_bits_meta_state,
  input         io_msInfo_7_bits_meta_clients,
  input         io_msInfo_7_bits_meta_accessed,
  input         io_msInfo_7_bits_meta_tagErr,
  input         io_msInfo_7_bits_meta_dataErr,
  input  [40:0] io_msInfo_7_bits_metaTag,
  input         io_msInfo_7_bits_dirHit,
  input         io_msInfo_7_bits_isAcqOrPrefetch,
  input         io_msInfo_7_bits_isPrefetch,
  input  [2:0]  io_msInfo_7_bits_param,
  input         io_msInfo_7_bits_mergeA,
  input         io_msInfo_7_bits_w_grantfirst,
  input         io_msInfo_7_bits_s_release,
  input         io_msInfo_7_bits_s_refill,
  input         io_msInfo_7_bits_s_cmoresp,
  input         io_msInfo_7_bits_s_cmometaw,
  input         io_msInfo_7_bits_w_releaseack,
  input         io_msInfo_7_bits_w_replResp,
  input         io_msInfo_7_bits_w_rprobeacklast,
  input         io_msInfo_7_bits_replaceData,
  input         io_msInfo_7_bits_releaseToClean,
  input         io_msInfo_8_valid,
  input  [2:0]  io_msInfo_8_bits_channel,
  input         io_msInfo_8_bits_set,
  input  [1:0]  io_msInfo_8_bits_way,
  input  [40:0] io_msInfo_8_bits_reqTag,
  input         io_msInfo_8_bits_willFree,
  input         io_msInfo_8_bits_needRelease,
  input         io_msInfo_8_bits_blockRefill,
  input         io_msInfo_8_bits_meta_dirty,
  input  [1:0]  io_msInfo_8_bits_meta_state,
  input         io_msInfo_8_bits_meta_clients,
  input         io_msInfo_8_bits_meta_accessed,
  input         io_msInfo_8_bits_meta_tagErr,
  input         io_msInfo_8_bits_meta_dataErr,
  input  [40:0] io_msInfo_8_bits_metaTag,
  input         io_msInfo_8_bits_dirHit,
  input         io_msInfo_8_bits_isAcqOrPrefetch,
  input         io_msInfo_8_bits_isPrefetch,
  input  [2:0]  io_msInfo_8_bits_param,
  input         io_msInfo_8_bits_mergeA,
  input         io_msInfo_8_bits_w_grantfirst,
  input         io_msInfo_8_bits_s_release,
  input         io_msInfo_8_bits_s_refill,
  input         io_msInfo_8_bits_s_cmoresp,
  input         io_msInfo_8_bits_s_cmometaw,
  input         io_msInfo_8_bits_w_releaseack,
  input         io_msInfo_8_bits_w_replResp,
  input         io_msInfo_8_bits_w_rprobeacklast,
  input         io_msInfo_8_bits_replaceData,
  input         io_msInfo_8_bits_releaseToClean,
  input         io_msInfo_9_valid,
  input  [2:0]  io_msInfo_9_bits_channel,
  input         io_msInfo_9_bits_set,
  input  [1:0]  io_msInfo_9_bits_way,
  input  [40:0] io_msInfo_9_bits_reqTag,
  input         io_msInfo_9_bits_willFree,
  input         io_msInfo_9_bits_needRelease,
  input         io_msInfo_9_bits_blockRefill,
  input         io_msInfo_9_bits_meta_dirty,
  input  [1:0]  io_msInfo_9_bits_meta_state,
  input         io_msInfo_9_bits_meta_clients,
  input         io_msInfo_9_bits_meta_accessed,
  input         io_msInfo_9_bits_meta_tagErr,
  input         io_msInfo_9_bits_meta_dataErr,
  input  [40:0] io_msInfo_9_bits_metaTag,
  input         io_msInfo_9_bits_dirHit,
  input         io_msInfo_9_bits_isAcqOrPrefetch,
  input         io_msInfo_9_bits_isPrefetch,
  input  [2:0]  io_msInfo_9_bits_param,
  input         io_msInfo_9_bits_mergeA,
  input         io_msInfo_9_bits_w_grantfirst,
  input         io_msInfo_9_bits_s_release,
  input         io_msInfo_9_bits_s_refill,
  input         io_msInfo_9_bits_s_cmoresp,
  input         io_msInfo_9_bits_s_cmometaw,
  input         io_msInfo_9_bits_w_releaseack,
  input         io_msInfo_9_bits_w_replResp,
  input         io_msInfo_9_bits_w_rprobeacklast,
  input         io_msInfo_9_bits_replaceData,
  input         io_msInfo_9_bits_releaseToClean,
  input         io_msInfo_10_valid,
  input  [2:0]  io_msInfo_10_bits_channel,
  input         io_msInfo_10_bits_set,
  input  [1:0]  io_msInfo_10_bits_way,
  input  [40:0] io_msInfo_10_bits_reqTag,
  input         io_msInfo_10_bits_willFree,
  input         io_msInfo_10_bits_needRelease,
  input         io_msInfo_10_bits_blockRefill,
  input         io_msInfo_10_bits_meta_dirty,
  input  [1:0]  io_msInfo_10_bits_meta_state,
  input         io_msInfo_10_bits_meta_clients,
  input         io_msInfo_10_bits_meta_accessed,
  input         io_msInfo_10_bits_meta_tagErr,
  input         io_msInfo_10_bits_meta_dataErr,
  input  [40:0] io_msInfo_10_bits_metaTag,
  input         io_msInfo_10_bits_dirHit,
  input         io_msInfo_10_bits_isAcqOrPrefetch,
  input         io_msInfo_10_bits_isPrefetch,
  input  [2:0]  io_msInfo_10_bits_param,
  input         io_msInfo_10_bits_mergeA,
  input         io_msInfo_10_bits_w_grantfirst,
  input         io_msInfo_10_bits_s_release,
  input         io_msInfo_10_bits_s_refill,
  input         io_msInfo_10_bits_s_cmoresp,
  input         io_msInfo_10_bits_s_cmometaw,
  input         io_msInfo_10_bits_w_releaseack,
  input         io_msInfo_10_bits_w_replResp,
  input         io_msInfo_10_bits_w_rprobeacklast,
  input         io_msInfo_10_bits_replaceData,
  input         io_msInfo_10_bits_releaseToClean,
  input         io_msInfo_11_valid,
  input  [2:0]  io_msInfo_11_bits_channel,
  input         io_msInfo_11_bits_set,
  input  [1:0]  io_msInfo_11_bits_way,
  input  [40:0] io_msInfo_11_bits_reqTag,
  input         io_msInfo_11_bits_willFree,
  input         io_msInfo_11_bits_needRelease,
  input         io_msInfo_11_bits_blockRefill,
  input         io_msInfo_11_bits_meta_dirty,
  input  [1:0]  io_msInfo_11_bits_meta_state,
  input         io_msInfo_11_bits_meta_clients,
  input         io_msInfo_11_bits_meta_accessed,
  input         io_msInfo_11_bits_meta_tagErr,
  input         io_msInfo_11_bits_meta_dataErr,
  input  [40:0] io_msInfo_11_bits_metaTag,
  input         io_msInfo_11_bits_dirHit,
  input         io_msInfo_11_bits_isAcqOrPrefetch,
  input         io_msInfo_11_bits_isPrefetch,
  input  [2:0]  io_msInfo_11_bits_param,
  input         io_msInfo_11_bits_mergeA,
  input         io_msInfo_11_bits_w_grantfirst,
  input         io_msInfo_11_bits_s_release,
  input         io_msInfo_11_bits_s_refill,
  input         io_msInfo_11_bits_s_cmoresp,
  input         io_msInfo_11_bits_s_cmometaw,
  input         io_msInfo_11_bits_w_releaseack,
  input         io_msInfo_11_bits_w_replResp,
  input         io_msInfo_11_bits_w_rprobeacklast,
  input         io_msInfo_11_bits_replaceData,
  input         io_msInfo_11_bits_releaseToClean,
  input         io_msInfo_12_valid,
  input  [2:0]  io_msInfo_12_bits_channel,
  input         io_msInfo_12_bits_set,
  input  [1:0]  io_msInfo_12_bits_way,
  input  [40:0] io_msInfo_12_bits_reqTag,
  input         io_msInfo_12_bits_willFree,
  input         io_msInfo_12_bits_needRelease,
  input         io_msInfo_12_bits_blockRefill,
  input         io_msInfo_12_bits_meta_dirty,
  input  [1:0]  io_msInfo_12_bits_meta_state,
  input         io_msInfo_12_bits_meta_clients,
  input         io_msInfo_12_bits_meta_accessed,
  input         io_msInfo_12_bits_meta_tagErr,
  input         io_msInfo_12_bits_meta_dataErr,
  input  [40:0] io_msInfo_12_bits_metaTag,
  input         io_msInfo_12_bits_dirHit,
  input         io_msInfo_12_bits_isAcqOrPrefetch,
  input         io_msInfo_12_bits_isPrefetch,
  input  [2:0]  io_msInfo_12_bits_param,
  input         io_msInfo_12_bits_mergeA,
  input         io_msInfo_12_bits_w_grantfirst,
  input         io_msInfo_12_bits_s_release,
  input         io_msInfo_12_bits_s_refill,
  input         io_msInfo_12_bits_s_cmoresp,
  input         io_msInfo_12_bits_s_cmometaw,
  input         io_msInfo_12_bits_w_releaseack,
  input         io_msInfo_12_bits_w_replResp,
  input         io_msInfo_12_bits_w_rprobeacklast,
  input         io_msInfo_12_bits_replaceData,
  input         io_msInfo_12_bits_releaseToClean,
  input         io_msInfo_13_valid,
  input  [2:0]  io_msInfo_13_bits_channel,
  input         io_msInfo_13_bits_set,
  input  [1:0]  io_msInfo_13_bits_way,
  input  [40:0] io_msInfo_13_bits_reqTag,
  input         io_msInfo_13_bits_willFree,
  input         io_msInfo_13_bits_needRelease,
  input         io_msInfo_13_bits_blockRefill,
  input         io_msInfo_13_bits_meta_dirty,
  input  [1:0]  io_msInfo_13_bits_meta_state,
  input         io_msInfo_13_bits_meta_clients,
  input         io_msInfo_13_bits_meta_accessed,
  input         io_msInfo_13_bits_meta_tagErr,
  input         io_msInfo_13_bits_meta_dataErr,
  input  [40:0] io_msInfo_13_bits_metaTag,
  input         io_msInfo_13_bits_dirHit,
  input         io_msInfo_13_bits_isAcqOrPrefetch,
  input         io_msInfo_13_bits_isPrefetch,
  input  [2:0]  io_msInfo_13_bits_param,
  input         io_msInfo_13_bits_mergeA,
  input         io_msInfo_13_bits_w_grantfirst,
  input         io_msInfo_13_bits_s_release,
  input         io_msInfo_13_bits_s_refill,
  input         io_msInfo_13_bits_s_cmoresp,
  input         io_msInfo_13_bits_s_cmometaw,
  input         io_msInfo_13_bits_w_releaseack,
  input         io_msInfo_13_bits_w_replResp,
  input         io_msInfo_13_bits_w_rprobeacklast,
  input         io_msInfo_13_bits_replaceData,
  input         io_msInfo_13_bits_releaseToClean,
  input         io_msInfo_14_valid,
  input  [2:0]  io_msInfo_14_bits_channel,
  input         io_msInfo_14_bits_set,
  input  [1:0]  io_msInfo_14_bits_way,
  input  [40:0] io_msInfo_14_bits_reqTag,
  input         io_msInfo_14_bits_willFree,
  input         io_msInfo_14_bits_needRelease,
  input         io_msInfo_14_bits_blockRefill,
  input         io_msInfo_14_bits_meta_dirty,
  input  [1:0]  io_msInfo_14_bits_meta_state,
  input         io_msInfo_14_bits_meta_clients,
  input         io_msInfo_14_bits_meta_accessed,
  input         io_msInfo_14_bits_meta_tagErr,
  input         io_msInfo_14_bits_meta_dataErr,
  input  [40:0] io_msInfo_14_bits_metaTag,
  input         io_msInfo_14_bits_dirHit,
  input         io_msInfo_14_bits_isAcqOrPrefetch,
  input         io_msInfo_14_bits_isPrefetch,
  input  [2:0]  io_msInfo_14_bits_param,
  input         io_msInfo_14_bits_mergeA,
  input         io_msInfo_14_bits_w_grantfirst,
  input         io_msInfo_14_bits_s_release,
  input         io_msInfo_14_bits_s_refill,
  input         io_msInfo_14_bits_s_cmoresp,
  input         io_msInfo_14_bits_s_cmometaw,
  input         io_msInfo_14_bits_w_releaseack,
  input         io_msInfo_14_bits_w_replResp,
  input         io_msInfo_14_bits_w_rprobeacklast,
  input         io_msInfo_14_bits_replaceData,
  input         io_msInfo_14_bits_releaseToClean,
  input         io_msInfo_15_valid,
  input  [2:0]  io_msInfo_15_bits_channel,
  input         io_msInfo_15_bits_set,
  input  [1:0]  io_msInfo_15_bits_way,
  input  [40:0] io_msInfo_15_bits_reqTag,
  input         io_msInfo_15_bits_willFree,
  input         io_msInfo_15_bits_needRelease,
  input         io_msInfo_15_bits_blockRefill,
  input         io_msInfo_15_bits_meta_dirty,
  input  [1:0]  io_msInfo_15_bits_meta_state,
  input         io_msInfo_15_bits_meta_clients,
  input         io_msInfo_15_bits_meta_accessed,
  input         io_msInfo_15_bits_meta_tagErr,
  input         io_msInfo_15_bits_meta_dataErr,
  input  [40:0] io_msInfo_15_bits_metaTag,
  input         io_msInfo_15_bits_dirHit,
  input         io_msInfo_15_bits_isAcqOrPrefetch,
  input         io_msInfo_15_bits_isPrefetch,
  input  [2:0]  io_msInfo_15_bits_param,
  input         io_msInfo_15_bits_mergeA,
  input         io_msInfo_15_bits_w_grantfirst,
  input         io_msInfo_15_bits_s_release,
  input         io_msInfo_15_bits_s_refill,
  input         io_msInfo_15_bits_s_cmoresp,
  input         io_msInfo_15_bits_s_cmometaw,
  input         io_msInfo_15_bits_w_releaseack,
  input         io_msInfo_15_bits_w_replResp,
  input         io_msInfo_15_bits_w_rprobeacklast,
  input         io_msInfo_15_bits_replaceData,
  input         io_msInfo_15_bits_releaseToClean
);

  wire             replacerWen;
  wire [1:0]       replaceWay;
  wire             io_read_ready_0;
  wire             _origin_bit_opt_io_r_resp_data_0;
  wire             _origin_bit_opt_io_r_resp_data_1;
  wire             _origin_bit_opt_io_r_resp_data_2;
  wire             _origin_bit_opt_io_r_resp_data_3;
  wire [7:0]       _replacer_sram_opt_io_r_resp_data_0;
  wire             _metaArray_io_r_resp_data_0_dirty;
  wire [1:0]       _metaArray_io_r_resp_data_0_state;
  wire             _metaArray_io_r_resp_data_0_clients;
  wire             _metaArray_io_r_resp_data_0_accessed;
  wire             _metaArray_io_r_resp_data_0_tagErr;
  wire             _metaArray_io_r_resp_data_0_dataErr;
  wire             _metaArray_io_r_resp_data_1_dirty;
  wire [1:0]       _metaArray_io_r_resp_data_1_state;
  wire             _metaArray_io_r_resp_data_1_clients;
  wire             _metaArray_io_r_resp_data_1_accessed;
  wire             _metaArray_io_r_resp_data_1_tagErr;
  wire             _metaArray_io_r_resp_data_1_dataErr;
  wire             _metaArray_io_r_resp_data_2_dirty;
  wire [1:0]       _metaArray_io_r_resp_data_2_state;
  wire             _metaArray_io_r_resp_data_2_clients;
  wire             _metaArray_io_r_resp_data_2_accessed;
  wire             _metaArray_io_r_resp_data_2_tagErr;
  wire             _metaArray_io_r_resp_data_2_dataErr;
  wire             _metaArray_io_r_resp_data_3_dirty;
  wire [1:0]       _metaArray_io_r_resp_data_3_state;
  wire             _metaArray_io_r_resp_data_3_clients;
  wire             _metaArray_io_r_resp_data_3_accessed;
  wire             _metaArray_io_r_resp_data_3_tagErr;
  wire             _metaArray_io_r_resp_data_3_dataErr;
  wire [40:0]      _tagArray_io_r_resp_data_0;
  wire [40:0]      _tagArray_io_r_resp_data_1;
  wire [40:0]      _tagArray_io_r_resp_data_2;
  wire [40:0]      _tagArray_io_r_resp_data_3;
  reg              resetFinish;
  reg              resetIdx;
  wire             _origin_bits_r_T = io_read_ready_0 & io_read_valid;
  reg              reqValid_s2;
  reg              reqValid_s3;
  reg  [40:0]      req_s2_tag;
  reg              req_s2_set;
  reg  [2:0]       req_s2_replacerInfo_channel;
  reg  [2:0]       req_s2_replacerInfo_opcode;
  reg  [4:0]       req_s2_replacerInfo_reqSource;
  reg              req_s2_replacerInfo_refill_prefetch;
  reg              req_s2_refill;
  reg  [7:0]       req_s2_mshrId;
  reg              req_s2_cmoAll;
  reg  [1:0]       req_s2_cmoWay;
  reg  [40:0]      req_s3_tag;
  reg              req_s3_set;
  reg  [2:0]       req_s3_replacerInfo_channel;
  reg  [2:0]       req_s3_replacerInfo_opcode;
  reg  [4:0]       req_s3_replacerInfo_reqSource;
  reg              req_s3_replacerInfo_refill_prefetch;
  reg              req_s3_refill;
  reg  [7:0]       req_s3_mshrId;
  reg              req_s3_cmoAll;
  reg  [1:0]       req_s3_cmoWay;
  reg              refillReqValid_s2;
  reg              refillReqValid_s3;
  reg              metaAll_s3_0_dirty;
  reg  [1:0]       metaAll_s3_0_state;
  reg              metaAll_s3_0_clients;
  reg              metaAll_s3_0_accessed;
  reg              metaAll_s3_0_tagErr;
  reg              metaAll_s3_0_dataErr;
  reg              metaAll_s3_1_dirty;
  reg  [1:0]       metaAll_s3_1_state;
  reg              metaAll_s3_1_clients;
  reg              metaAll_s3_1_accessed;
  reg              metaAll_s3_1_tagErr;
  reg              metaAll_s3_1_dataErr;
  reg              metaAll_s3_2_dirty;
  reg  [1:0]       metaAll_s3_2_state;
  reg              metaAll_s3_2_clients;
  reg              metaAll_s3_2_accessed;
  reg              metaAll_s3_2_tagErr;
  reg              metaAll_s3_2_dataErr;
  reg              metaAll_s3_3_dirty;
  reg  [1:0]       metaAll_s3_3_state;
  reg              metaAll_s3_3_clients;
  reg              metaAll_s3_3_accessed;
  reg              metaAll_s3_3_tagErr;
  reg              metaAll_s3_3_dataErr;
  reg  [40:0]      tagAll_s3_0;
  reg  [40:0]      tagAll_s3_1;
  reg  [40:0]      tagAll_s3_2;
  reg  [40:0]      tagAll_s3_3;
  wire             hitVec_1 = tagAll_s3_1 == req_s3_tag & (|metaAll_s3_1_state);
  wire             hitVec_2 = tagAll_s3_2 == req_s3_tag & (|metaAll_s3_2_state);
  wire             hitVec_3 = tagAll_s3_3 == req_s3_tag & (|metaAll_s3_3_state);
  reg  [3:0]       freeWayMask_s3;
  wire             invalid_vec_0 = metaAll_s3_0_state == 2'h0;
  wire             invalid_vec_1 = metaAll_s3_1_state == 2'h0;
  wire             invalid_vec_2 = metaAll_s3_2_state == 2'h0;
  wire [3:0]       _has_invalid_way_T =
    {invalid_vec_0, invalid_vec_1, invalid_vec_2, metaAll_s3_3_state == 2'h0};
  wire [1:0]       chosenWay =
    (|_has_invalid_way_T)
      ? (invalid_vec_0 | invalid_vec_1 ? {1'h0, ~invalid_vec_0} : {1'h1, ~invalid_vec_2})
      : replaceWay;
  wire [3:0]       _finalWay_T = freeWayMask_s3 >> chosenWay;
  wire [1:0]       finalWay =
    _finalWay_T[0]
      ? chosenWay
      : freeWayMask_s3[0]
          ? 2'h0
          : freeWayMask_s3[1] ? 2'h1 : {1'h1, ~(freeWayMask_s3[2])};
  wire             hit_s3 =
    (|{tagAll_s3_0 == req_s3_tag & (|metaAll_s3_0_state), hitVec_1, hitVec_2, hitVec_3})
    | req_s3_cmoAll;
  wire [1:0]       way_s3 =
    req_s3_cmoAll
      ? req_s3_cmoWay
      : hit_s3 ? {|{hitVec_3, hitVec_2}, hitVec_3 | hitVec_1} : finalWay;
  wire [3:0]       _GEN =
    {{metaAll_s3_3_dirty},
     {metaAll_s3_2_dirty},
     {metaAll_s3_1_dirty},
     {metaAll_s3_0_dirty}};
  wire [3:0][1:0]  _GEN_0 =
    {{metaAll_s3_3_state},
     {metaAll_s3_2_state},
     {metaAll_s3_1_state},
     {metaAll_s3_0_state}};
  wire [3:0]       _GEN_1 =
    {{metaAll_s3_3_clients},
     {metaAll_s3_2_clients},
     {metaAll_s3_1_clients},
     {metaAll_s3_0_clients}};
  wire [3:0]       _GEN_2 =
    {{metaAll_s3_3_accessed},
     {metaAll_s3_2_accessed},
     {metaAll_s3_1_accessed},
     {metaAll_s3_0_accessed}};
  wire [3:0]       _GEN_3 =
    {{metaAll_s3_3_tagErr},
     {metaAll_s3_2_tagErr},
     {metaAll_s3_1_tagErr},
     {metaAll_s3_0_tagErr}};
  wire [3:0]       _GEN_4 =
    {{metaAll_s3_3_dataErr},
     {metaAll_s3_2_dataErr},
     {metaAll_s3_1_dataErr},
     {metaAll_s3_0_dataErr}};
  wire [3:0][40:0] _GEN_5 = {{tagAll_s3_3}, {tagAll_s3_2}, {tagAll_s3_1}, {tagAll_s3_0}};
  assign io_read_ready_0 = ~io_metaWReq_valid & ~io_tagWReq_valid & ~replacerWen;
  reg  [7:0]       repl_state_s3;
  assign replaceWay =
    repl_state_s3[3:2] > repl_state_s3[1:0] | repl_state_s3[5:4] > repl_state_s3[1:0]
    | repl_state_s3[7:6] > repl_state_s3[1:0]
      ? (repl_state_s3[1:0] > repl_state_s3[3:2] | repl_state_s3[5:4] > repl_state_s3[3:2]
         | repl_state_s3[7:6] > repl_state_s3[3:2]
           ? {1'h1,
              repl_state_s3[1:0] > repl_state_s3[5:4]
                | repl_state_s3[3:2] > repl_state_s3[5:4]
                | repl_state_s3[7:6] > repl_state_s3[5:4]}
           : 2'h1)
      : 2'h0;
  wire             _updateHit_T_9 = req_s3_replacerInfo_opcode == 3'h6;
  wire             _rrip_req_type_T_4 = req_s3_replacerInfo_opcode == 3'h5;
  assign replacerWen =
    reqValid_s3 & hit_s3
    & (req_s3_replacerInfo_channel[0]
       & ((&req_s3_replacerInfo_opcode) | _updateHit_T_9 | _rrip_req_type_T_4)
       | req_s3_replacerInfo_channel[2]
       & (_updateHit_T_9 | (&req_s3_replacerInfo_opcode))) | refillReqValid_s3
    & (|freeWayMask_s3);
  reg              REG;
  reg              r_0;
  reg              r_1;
  reg              r_2;
  reg              r_3;
  wire             _GEN_6 = ~resetFinish | replacerWen;
  wire             _GEN_7 = resetFinish & hit_s3;
  wire             _GEN_8 = resetFinish ? req_s3_set : resetIdx;
  wire             _rrip_req_type_T_10 =
    ~refillReqValid_s3 & req_s3_replacerInfo_channel[0] & _rrip_req_type_T_4
    | refillReqValid_s3 & req_s3_replacerInfo_refill_prefetch;
  wire [3:0]       _GEN_9 =
    REG
      ? {{_origin_bit_opt_io_r_resp_data_3},
         {_origin_bit_opt_io_r_resp_data_2},
         {_origin_bit_opt_io_r_resp_data_1},
         {_origin_bit_opt_io_r_resp_data_0}}
      : {{r_3}, {r_2}, {r_1}, {r_0}};
  wire [3:0]       rrip_req_type =
    {_GEN_9[way_s3], req_s3_replacerInfo_channel[2], _rrip_req_type_T_10, req_s3_refill};
  wire [2:0]       _next_state_s3_nextState_3_T_35 =
    {req_s3_replacerInfo_channel[2], _rrip_req_type_T_10, req_s3_refill};
  wire             _next_state_s3_nextState_3_T_30 = rrip_req_type == 4'hC;
  wire             _next_state_s3_nextState_3_T_34 = rrip_req_type == 4'h4;
  wire             _next_state_s3_nextState_3_T_41 = hit_s3 | (|_has_invalid_way_T);
  wire [3:0][1:0]  _GEN_10 =
    {{repl_state_s3[7:6]},
     {repl_state_s3[5:4]},
     {repl_state_s3[3:2]},
     {repl_state_s3[1:0]}};
  wire [1:0]       _next_state_s3_increcement_T_1 = 2'(2'h3 - _GEN_10[way_s3]);
  always @(posedge clock or posedge reset) begin
    if (reset) begin
    resetFinish <= 1'h1;
      resetIdx <= 1'h1;
      reqValid_s2 <= 1'h0;
      reqValid_s3 <= 1'h0;
      req_s2_tag <= 41'h0;
      req_s2_set <= 1'h0;
      req_s2_replacerInfo_channel <= 3'h0;
      req_s2_replacerInfo_opcode <= 3'h0;
      req_s2_replacerInfo_reqSource <= 5'h0;
      req_s2_replacerInfo_refill_prefetch <= 1'h0;
      req_s2_refill <= 1'h0;
      req_s2_mshrId <= 8'h0;
      req_s2_cmoAll <= 1'h0;
      req_s2_cmoWay <= 2'h0;
      req_s3_tag <= 41'h0;
      req_s3_set <= 1'h0;
      req_s3_replacerInfo_channel <= 3'h0;
      req_s3_replacerInfo_opcode <= 3'h0;
      req_s3_replacerInfo_reqSource <= 5'h0;
      req_s3_replacerInfo_refill_prefetch <= 1'h0;
      req_s3_refill <= 1'h0;
      req_s3_mshrId <= 8'h0;
      req_s3_cmoAll <= 1'h0;
      req_s3_cmoWay <= 2'h0;
      refillReqValid_s2 <= 1'h0;
      refillReqValid_s3 <= 1'h0;
      metaAll_s3_0_dirty <= 1'h0;
      metaAll_s3_0_state <= 2'h0;
      metaAll_s3_0_clients <= 1'h0;
      metaAll_s3_0_accessed <= 1'h0;
      metaAll_s3_0_tagErr <= 1'h0;
      metaAll_s3_0_dataErr <= 1'h0;
      metaAll_s3_1_dirty <= 1'h0;
      metaAll_s3_1_state <= 2'h0;
      metaAll_s3_1_clients <= 1'h0;
      metaAll_s3_1_accessed <= 1'h0;
      metaAll_s3_1_tagErr <= 1'h0;
      metaAll_s3_1_dataErr <= 1'h0;
      metaAll_s3_2_dirty <= 1'h0;
      metaAll_s3_2_state <= 2'h0;
      metaAll_s3_2_clients <= 1'h0;
      metaAll_s3_2_accessed <= 1'h0;
      metaAll_s3_2_tagErr <= 1'h0;
      metaAll_s3_2_dataErr <= 1'h0;
      metaAll_s3_3_dirty <= 1'h0;
      metaAll_s3_3_state <= 2'h0;
      metaAll_s3_3_clients <= 1'h0;
      metaAll_s3_3_accessed <= 1'h0;
      metaAll_s3_3_tagErr <= 1'h0;
      metaAll_s3_3_dataErr <= 1'h0;
      tagAll_s3_0 <= 41'h0;
      tagAll_s3_1 <= 41'h0;
      tagAll_s3_2 <= 41'h0;
      tagAll_s3_3 <= 41'h0;
      repl_state_s3 <= 8'h0;
      REG <= 1'h0;
      r_0 <= 1'h0;
      r_1 <= 1'h0;
      r_2 <= 1'h0;
      r_3 <= 1'h0;
    end
    else begin
      resetFinish <= ~resetIdx | resetFinish;
      if (resetFinish) begin
      end
      else
        resetIdx <= 1'(resetIdx - 1'h1);
      reqValid_s2 <= _origin_bits_r_T;
      reqValid_s3 <= reqValid_s2;
      if (_origin_bits_r_T) begin
        req_s2_tag <= io_read_bits_tag;
        req_s2_set <= io_read_bits_set;
        req_s2_replacerInfo_channel <= io_read_bits_replacerInfo_channel;
        req_s2_replacerInfo_opcode <= io_read_bits_replacerInfo_opcode;
        req_s2_replacerInfo_reqSource <= io_read_bits_replacerInfo_reqSource;
        req_s2_replacerInfo_refill_prefetch <= io_read_bits_replacerInfo_refill_prefetch;
        req_s2_refill <= io_read_bits_refill;
        req_s2_mshrId <= io_read_bits_mshrId;
        req_s2_cmoAll <= io_read_bits_cmoAll;
        req_s2_cmoWay <= io_read_bits_cmoWay;
      end
      if (reqValid_s2) begin
        req_s3_tag <= req_s2_tag;
        req_s3_set <= req_s2_set;
        req_s3_replacerInfo_channel <= req_s2_replacerInfo_channel;
        req_s3_replacerInfo_opcode <= req_s2_replacerInfo_opcode;
        req_s3_replacerInfo_reqSource <= req_s2_replacerInfo_reqSource;
        req_s3_replacerInfo_refill_prefetch <= req_s2_replacerInfo_refill_prefetch;
        req_s3_refill <= req_s2_refill;
        req_s3_mshrId <= req_s2_mshrId;
        req_s3_cmoAll <= req_s2_cmoAll;
        req_s3_cmoWay <= req_s2_cmoWay;
        metaAll_s3_0_dirty <= _metaArray_io_r_resp_data_0_dirty;
        metaAll_s3_0_state <= _metaArray_io_r_resp_data_0_state;
        metaAll_s3_0_clients <= _metaArray_io_r_resp_data_0_clients;
        metaAll_s3_0_accessed <= _metaArray_io_r_resp_data_0_accessed;
        metaAll_s3_0_tagErr <= _metaArray_io_r_resp_data_0_tagErr;
        metaAll_s3_0_dataErr <= _metaArray_io_r_resp_data_0_dataErr;
        metaAll_s3_1_dirty <= _metaArray_io_r_resp_data_1_dirty;
        metaAll_s3_1_state <= _metaArray_io_r_resp_data_1_state;
        metaAll_s3_1_clients <= _metaArray_io_r_resp_data_1_clients;
        metaAll_s3_1_accessed <= _metaArray_io_r_resp_data_1_accessed;
        metaAll_s3_1_tagErr <= _metaArray_io_r_resp_data_1_tagErr;
        metaAll_s3_1_dataErr <= _metaArray_io_r_resp_data_1_dataErr;
        metaAll_s3_2_dirty <= _metaArray_io_r_resp_data_2_dirty;
        metaAll_s3_2_state <= _metaArray_io_r_resp_data_2_state;
        metaAll_s3_2_clients <= _metaArray_io_r_resp_data_2_clients;
        metaAll_s3_2_accessed <= _metaArray_io_r_resp_data_2_accessed;
        metaAll_s3_2_tagErr <= _metaArray_io_r_resp_data_2_tagErr;
        metaAll_s3_2_dataErr <= _metaArray_io_r_resp_data_2_dataErr;
        metaAll_s3_3_dirty <= _metaArray_io_r_resp_data_3_dirty;
        metaAll_s3_3_state <= _metaArray_io_r_resp_data_3_state;
        metaAll_s3_3_clients <= _metaArray_io_r_resp_data_3_clients;
        metaAll_s3_3_accessed <= _metaArray_io_r_resp_data_3_accessed;
        metaAll_s3_3_tagErr <= _metaArray_io_r_resp_data_3_tagErr;
        metaAll_s3_3_dataErr <= _metaArray_io_r_resp_data_3_dataErr;
        tagAll_s3_0 <= _tagArray_io_r_resp_data_0;
        tagAll_s3_1 <= _tagArray_io_r_resp_data_1;
        tagAll_s3_2 <= _tagArray_io_r_resp_data_2;
        tagAll_s3_3 <= _tagArray_io_r_resp_data_3;
        repl_state_s3 <= _replacer_sram_opt_io_r_resp_data_0;
      end
      refillReqValid_s2 <= _origin_bits_r_T & io_read_bits_refill;
      refillReqValid_s3 <= refillReqValid_s2;
      REG <= _origin_bits_r_T;
      if (REG) begin
        r_0 <= _origin_bit_opt_io_r_resp_data_0;
        r_1 <= _origin_bit_opt_io_r_resp_data_1;
        r_2 <= _origin_bit_opt_io_r_resp_data_2;
        r_3 <= _origin_bit_opt_io_r_resp_data_3;
      end
    end
  end // always @(posedge, posedge)
  always @(posedge clock) begin
    if (refillReqValid_s2)
      freeWayMask_s3 <=
        ~((io_msInfo_0_valid & io_msInfo_0_bits_set == req_s2_set
           & (io_msInfo_0_bits_blockRefill | io_msInfo_0_bits_dirHit)
             ? 4'h1 << io_msInfo_0_bits_way
             : 4'h0)
          | (io_msInfo_1_valid & io_msInfo_1_bits_set == req_s2_set
             & (io_msInfo_1_bits_blockRefill | io_msInfo_1_bits_dirHit)
               ? 4'h1 << io_msInfo_1_bits_way
               : 4'h0)
          | (io_msInfo_2_valid & io_msInfo_2_bits_set == req_s2_set
             & (io_msInfo_2_bits_blockRefill | io_msInfo_2_bits_dirHit)
               ? 4'h1 << io_msInfo_2_bits_way
               : 4'h0)
          | (io_msInfo_3_valid & io_msInfo_3_bits_set == req_s2_set
             & (io_msInfo_3_bits_blockRefill | io_msInfo_3_bits_dirHit)
               ? 4'h1 << io_msInfo_3_bits_way
               : 4'h0)
          | (io_msInfo_4_valid & io_msInfo_4_bits_set == req_s2_set
             & (io_msInfo_4_bits_blockRefill | io_msInfo_4_bits_dirHit)
               ? 4'h1 << io_msInfo_4_bits_way
               : 4'h0)
          | (io_msInfo_5_valid & io_msInfo_5_bits_set == req_s2_set
             & (io_msInfo_5_bits_blockRefill | io_msInfo_5_bits_dirHit)
               ? 4'h1 << io_msInfo_5_bits_way
               : 4'h0)
          | (io_msInfo_6_valid & io_msInfo_6_bits_set == req_s2_set
             & (io_msInfo_6_bits_blockRefill | io_msInfo_6_bits_dirHit)
               ? 4'h1 << io_msInfo_6_bits_way
               : 4'h0)
          | (io_msInfo_7_valid & io_msInfo_7_bits_set == req_s2_set
             & (io_msInfo_7_bits_blockRefill | io_msInfo_7_bits_dirHit)
               ? 4'h1 << io_msInfo_7_bits_way
               : 4'h0)
          | (io_msInfo_8_valid & io_msInfo_8_bits_set == req_s2_set
             & (io_msInfo_8_bits_blockRefill | io_msInfo_8_bits_dirHit)
               ? 4'h1 << io_msInfo_8_bits_way
               : 4'h0)
          | (io_msInfo_9_valid & io_msInfo_9_bits_set == req_s2_set
             & (io_msInfo_9_bits_blockRefill | io_msInfo_9_bits_dirHit)
               ? 4'h1 << io_msInfo_9_bits_way
               : 4'h0)
          | (io_msInfo_10_valid & io_msInfo_10_bits_set == req_s2_set
             & (io_msInfo_10_bits_blockRefill | io_msInfo_10_bits_dirHit)
               ? 4'h1 << io_msInfo_10_bits_way
               : 4'h0)
          | (io_msInfo_11_valid & io_msInfo_11_bits_set == req_s2_set
             & (io_msInfo_11_bits_blockRefill | io_msInfo_11_bits_dirHit)
               ? 4'h1 << io_msInfo_11_bits_way
               : 4'h0)
          | (io_msInfo_12_valid & io_msInfo_12_bits_set == req_s2_set
             & (io_msInfo_12_bits_blockRefill | io_msInfo_12_bits_dirHit)
               ? 4'h1 << io_msInfo_12_bits_way
               : 4'h0)
          | (io_msInfo_13_valid & io_msInfo_13_bits_set == req_s2_set
             & (io_msInfo_13_bits_blockRefill | io_msInfo_13_bits_dirHit)
               ? 4'h1 << io_msInfo_13_bits_way
               : 4'h0)
          | (io_msInfo_14_valid & io_msInfo_14_bits_set == req_s2_set
             & (io_msInfo_14_bits_blockRefill | io_msInfo_14_bits_dirHit)
               ? 4'h1 << io_msInfo_14_bits_way
               : 4'h0)
          | (io_msInfo_15_valid & io_msInfo_15_bits_set == req_s2_set
             & (io_msInfo_15_bits_blockRefill | io_msInfo_15_bits_dirHit)
               ? 4'h1 << io_msInfo_15_bits_way
               : 4'h0));
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:11];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [3:0] i = 4'h0; i < 4'hC; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        resetFinish = _RANDOM[4'h0][0];
        resetIdx = _RANDOM[4'h0][1];
        reqValid_s2 = _RANDOM[4'h0][26];
        reqValid_s3 = _RANDOM[4'h0][27];
        req_s2_tag = {_RANDOM[4'h0][31:28], _RANDOM[4'h1], _RANDOM[4'h2][4:0]};
        req_s2_set = _RANDOM[4'h2][5];
        req_s2_replacerInfo_channel = _RANDOM[4'h2][12:10];
        req_s2_replacerInfo_opcode = _RANDOM[4'h2][15:13];
        req_s2_replacerInfo_reqSource = _RANDOM[4'h2][20:16];
        req_s2_replacerInfo_refill_prefetch = _RANDOM[4'h2][21];
        req_s2_refill = _RANDOM[4'h2][22];
        req_s2_mshrId = _RANDOM[4'h2][30:23];
        req_s2_cmoAll = _RANDOM[4'h2][31];
        req_s2_cmoWay = _RANDOM[4'h3][1:0];
        req_s3_tag = {_RANDOM[4'h3][31:2], _RANDOM[4'h4][10:0]};
        req_s3_set = _RANDOM[4'h4][11];
        req_s3_replacerInfo_channel = _RANDOM[4'h4][18:16];
        req_s3_replacerInfo_opcode = _RANDOM[4'h4][21:19];
        req_s3_replacerInfo_reqSource = _RANDOM[4'h4][26:22];
        req_s3_replacerInfo_refill_prefetch = _RANDOM[4'h4][27];
        req_s3_refill = _RANDOM[4'h4][28];
        req_s3_mshrId = {_RANDOM[4'h4][31:29], _RANDOM[4'h5][4:0]};
        req_s3_cmoAll = _RANDOM[4'h5][5];
        req_s3_cmoWay = _RANDOM[4'h5][7:6];
        refillReqValid_s2 = _RANDOM[4'h5][8];
        refillReqValid_s3 = _RANDOM[4'h5][9];
        metaAll_s3_0_dirty = _RANDOM[4'h5][10];
        metaAll_s3_0_state = _RANDOM[4'h5][12:11];
        metaAll_s3_0_clients = _RANDOM[4'h5][13];
        metaAll_s3_0_accessed = _RANDOM[4'h5][14];
        metaAll_s3_0_tagErr = _RANDOM[4'h5][15];
        metaAll_s3_0_dataErr = _RANDOM[4'h5][16];
        metaAll_s3_1_dirty = _RANDOM[4'h5][17];
        metaAll_s3_1_state = _RANDOM[4'h5][19:18];
        metaAll_s3_1_clients = _RANDOM[4'h5][20];
        metaAll_s3_1_accessed = _RANDOM[4'h5][21];
        metaAll_s3_1_tagErr = _RANDOM[4'h5][22];
        metaAll_s3_1_dataErr = _RANDOM[4'h5][23];
        metaAll_s3_2_dirty = _RANDOM[4'h5][24];
        metaAll_s3_2_state = _RANDOM[4'h5][26:25];
        metaAll_s3_2_clients = _RANDOM[4'h5][27];
        metaAll_s3_2_accessed = _RANDOM[4'h5][28];
        metaAll_s3_2_tagErr = _RANDOM[4'h5][29];
        metaAll_s3_2_dataErr = _RANDOM[4'h5][30];
        metaAll_s3_3_dirty = _RANDOM[4'h5][31];
        metaAll_s3_3_state = _RANDOM[4'h6][1:0];
        metaAll_s3_3_clients = _RANDOM[4'h6][2];
        metaAll_s3_3_accessed = _RANDOM[4'h6][3];
        metaAll_s3_3_tagErr = _RANDOM[4'h6][4];
        metaAll_s3_3_dataErr = _RANDOM[4'h6][5];
        tagAll_s3_0 = {_RANDOM[4'h6][31:6], _RANDOM[4'h7][14:0]};
        tagAll_s3_1 = {_RANDOM[4'h7][31:15], _RANDOM[4'h8][23:0]};
        tagAll_s3_2 = {_RANDOM[4'h8][31:24], _RANDOM[4'h9], _RANDOM[4'hA][0]};
        tagAll_s3_3 = {_RANDOM[4'hA][31:1], _RANDOM[4'hB][9:0]};
        freeWayMask_s3 = _RANDOM[4'hB][17:14];
        repl_state_s3 = _RANDOM[4'hB][25:18];
        REG = _RANDOM[4'hB][26];
        r_0 = _RANDOM[4'hB][27];
        r_1 = _RANDOM[4'hB][28];
        r_2 = _RANDOM[4'hB][29];
        r_3 = _RANDOM[4'hB][30];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        resetFinish = 1'h0;
        resetIdx = 1'h1;
        reqValid_s2 = 1'h0;
        reqValid_s3 = 1'h0;
        req_s2_tag = 41'h0;
        req_s2_set = 1'h0;
        req_s2_replacerInfo_channel = 3'h0;
        req_s2_replacerInfo_opcode = 3'h0;
        req_s2_replacerInfo_reqSource = 5'h0;
        req_s2_replacerInfo_refill_prefetch = 1'h0;
        req_s2_refill = 1'h0;
        req_s2_mshrId = 8'h0;
        req_s2_cmoAll = 1'h0;
        req_s2_cmoWay = 2'h0;
        req_s3_tag = 41'h0;
        req_s3_set = 1'h0;
        req_s3_replacerInfo_channel = 3'h0;
        req_s3_replacerInfo_opcode = 3'h0;
        req_s3_replacerInfo_reqSource = 5'h0;
        req_s3_replacerInfo_refill_prefetch = 1'h0;
        req_s3_refill = 1'h0;
        req_s3_mshrId = 8'h0;
        req_s3_cmoAll = 1'h0;
        req_s3_cmoWay = 2'h0;
        refillReqValid_s2 = 1'h0;
        refillReqValid_s3 = 1'h0;
        metaAll_s3_0_dirty = 1'h0;
        metaAll_s3_0_state = 2'h0;
        metaAll_s3_0_clients = 1'h0;
        metaAll_s3_0_accessed = 1'h0;
        metaAll_s3_0_tagErr = 1'h0;
        metaAll_s3_0_dataErr = 1'h0;
        metaAll_s3_1_dirty = 1'h0;
        metaAll_s3_1_state = 2'h0;
        metaAll_s3_1_clients = 1'h0;
        metaAll_s3_1_accessed = 1'h0;
        metaAll_s3_1_tagErr = 1'h0;
        metaAll_s3_1_dataErr = 1'h0;
        metaAll_s3_2_dirty = 1'h0;
        metaAll_s3_2_state = 2'h0;
        metaAll_s3_2_clients = 1'h0;
        metaAll_s3_2_accessed = 1'h0;
        metaAll_s3_2_tagErr = 1'h0;
        metaAll_s3_2_dataErr = 1'h0;
        metaAll_s3_3_dirty = 1'h0;
        metaAll_s3_3_state = 2'h0;
        metaAll_s3_3_clients = 1'h0;
        metaAll_s3_3_accessed = 1'h0;
        metaAll_s3_3_tagErr = 1'h0;
        metaAll_s3_3_dataErr = 1'h0;
        tagAll_s3_0 = 41'h0;
        tagAll_s3_1 = 41'h0;
        tagAll_s3_2 = 41'h0;
        tagAll_s3_3 = 41'h0;
        repl_state_s3 = 8'h0;
        REG = 1'h0;
        r_0 = 1'h0;
        r_1 = 1'h0;
        r_2 = 1'h0;
        r_3 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  SplittedSRAM_2 tagArray (
    .clock                 (clock),
    .io_r_req_ready        (/* unused */),
    .io_r_req_valid        (_origin_bits_r_T),
    .io_r_req_bits_setIdx  (io_read_bits_set),
    .io_r_resp_data_0      (_tagArray_io_r_resp_data_0),
    .io_r_resp_data_1      (_tagArray_io_r_resp_data_1),
    .io_r_resp_data_2      (_tagArray_io_r_resp_data_2),
    .io_r_resp_data_3      (_tagArray_io_r_resp_data_3),
    .io_w_req_ready        (/* unused */),
    .io_w_req_valid        (io_tagWReq_valid),
    .io_w_req_bits_setIdx  (io_tagWReq_bits_set),
    .io_w_req_bits_data_0  (io_tagWReq_bits_wtag),
    .io_w_req_bits_data_1  (io_tagWReq_bits_wtag),
    .io_w_req_bits_data_2  (io_tagWReq_bits_wtag),
    .io_w_req_bits_data_3  (io_tagWReq_bits_wtag),
    .io_w_req_bits_waymask (4'h1 << io_tagWReq_bits_way)
  );
  SRAMTemplate_124 metaArray (
    .clock                         (clock),
    .io_r_req_ready                (/* unused */),
    .io_r_req_valid                (_origin_bits_r_T),
    .io_r_req_bits_setIdx          (io_read_bits_set),
    .io_r_resp_data_0_dirty        (_metaArray_io_r_resp_data_0_dirty),
    .io_r_resp_data_0_state        (_metaArray_io_r_resp_data_0_state),
    .io_r_resp_data_0_clients      (_metaArray_io_r_resp_data_0_clients),
    .io_r_resp_data_0_accessed     (_metaArray_io_r_resp_data_0_accessed),
    .io_r_resp_data_0_tagErr       (_metaArray_io_r_resp_data_0_tagErr),
    .io_r_resp_data_0_dataErr      (_metaArray_io_r_resp_data_0_dataErr),
    .io_r_resp_data_1_dirty        (_metaArray_io_r_resp_data_1_dirty),
    .io_r_resp_data_1_state        (_metaArray_io_r_resp_data_1_state),
    .io_r_resp_data_1_clients      (_metaArray_io_r_resp_data_1_clients),
    .io_r_resp_data_1_accessed     (_metaArray_io_r_resp_data_1_accessed),
    .io_r_resp_data_1_tagErr       (_metaArray_io_r_resp_data_1_tagErr),
    .io_r_resp_data_1_dataErr      (_metaArray_io_r_resp_data_1_dataErr),
    .io_r_resp_data_2_dirty        (_metaArray_io_r_resp_data_2_dirty),
    .io_r_resp_data_2_state        (_metaArray_io_r_resp_data_2_state),
    .io_r_resp_data_2_clients      (_metaArray_io_r_resp_data_2_clients),
    .io_r_resp_data_2_accessed     (_metaArray_io_r_resp_data_2_accessed),
    .io_r_resp_data_2_tagErr       (_metaArray_io_r_resp_data_2_tagErr),
    .io_r_resp_data_2_dataErr      (_metaArray_io_r_resp_data_2_dataErr),
    .io_r_resp_data_3_dirty        (_metaArray_io_r_resp_data_3_dirty),
    .io_r_resp_data_3_state        (_metaArray_io_r_resp_data_3_state),
    .io_r_resp_data_3_clients      (_metaArray_io_r_resp_data_3_clients),
    .io_r_resp_data_3_accessed     (_metaArray_io_r_resp_data_3_accessed),
    .io_r_resp_data_3_tagErr       (_metaArray_io_r_resp_data_3_tagErr),
    .io_r_resp_data_3_dataErr      (_metaArray_io_r_resp_data_3_dataErr),
    .io_w_req_ready                (/* unused */),
    .io_w_req_valid                (io_metaWReq_valid),
    .io_w_req_bits_setIdx          (io_metaWReq_bits_set),
    .io_w_req_bits_data_0_dirty    (io_metaWReq_bits_wmeta_dirty),
    .io_w_req_bits_data_0_state    (io_metaWReq_bits_wmeta_state),
    .io_w_req_bits_data_0_clients  (io_metaWReq_bits_wmeta_clients),
    .io_w_req_bits_data_0_accessed (io_metaWReq_bits_wmeta_accessed),
    .io_w_req_bits_data_0_tagErr   (io_metaWReq_bits_wmeta_tagErr),
    .io_w_req_bits_data_0_dataErr  (io_metaWReq_bits_wmeta_dataErr),
    .io_w_req_bits_data_1_dirty    (io_metaWReq_bits_wmeta_dirty),
    .io_w_req_bits_data_1_state    (io_metaWReq_bits_wmeta_state),
    .io_w_req_bits_data_1_clients  (io_metaWReq_bits_wmeta_clients),
    .io_w_req_bits_data_1_accessed (io_metaWReq_bits_wmeta_accessed),
    .io_w_req_bits_data_1_tagErr   (io_metaWReq_bits_wmeta_tagErr),
    .io_w_req_bits_data_1_dataErr  (io_metaWReq_bits_wmeta_dataErr),
    .io_w_req_bits_data_2_dirty    (io_metaWReq_bits_wmeta_dirty),
    .io_w_req_bits_data_2_state    (io_metaWReq_bits_wmeta_state),
    .io_w_req_bits_data_2_clients  (io_metaWReq_bits_wmeta_clients),
    .io_w_req_bits_data_2_accessed (io_metaWReq_bits_wmeta_accessed),
    .io_w_req_bits_data_2_tagErr   (io_metaWReq_bits_wmeta_tagErr),
    .io_w_req_bits_data_2_dataErr  (io_metaWReq_bits_wmeta_dataErr),
    .io_w_req_bits_data_3_dirty    (io_metaWReq_bits_wmeta_dirty),
    .io_w_req_bits_data_3_state    (io_metaWReq_bits_wmeta_state),
    .io_w_req_bits_data_3_clients  (io_metaWReq_bits_wmeta_clients),
    .io_w_req_bits_data_3_accessed (io_metaWReq_bits_wmeta_accessed),
    .io_w_req_bits_data_3_tagErr   (io_metaWReq_bits_wmeta_tagErr),
    .io_w_req_bits_data_3_dataErr  (io_metaWReq_bits_wmeta_dataErr),
    .io_w_req_bits_waymask         (io_metaWReq_bits_wayOH)
  );
  SRAMTemplate_125 replacer_sram_opt (
    .clock                (clock),
    .reset                (reset),
    .io_r_req_valid       (_origin_bits_r_T),
    .io_r_req_bits_setIdx (io_read_bits_set),
    .io_r_resp_data_0     (_replacer_sram_opt_io_r_resp_data_0),
    .io_w_req_valid       (_GEN_6),
    .io_w_req_bits_setIdx (_GEN_8),
    .io_w_req_bits_data_0
      (resetFinish
         ? {(&way_s3)
              ? (~(|_next_state_s3_nextState_3_T_35) & hit_s3
                 | _next_state_s3_nextState_3_T_35 == 3'h1
                 | _next_state_s3_nextState_3_T_30
                   ? 2'h0
                   : _next_state_s3_nextState_3_T_35 == 3'h3
                       ? 2'h1
                       : _next_state_s3_nextState_3_T_34
                         | _next_state_s3_nextState_3_T_35 == 3'h6
                           ? 2'h2
                           : repl_state_s3[7:6])
              : _next_state_s3_nextState_3_T_41
                  ? repl_state_s3[7:6]
                  : 2'(repl_state_s3[7:6] + _next_state_s3_increcement_T_1),
            way_s3 == 2'h2
              ? (~(|_next_state_s3_nextState_3_T_35) & hit_s3
                 | _next_state_s3_nextState_3_T_35 == 3'h1
                 | _next_state_s3_nextState_3_T_30
                   ? 2'h0
                   : _next_state_s3_nextState_3_T_35 == 3'h3
                       ? 2'h1
                       : _next_state_s3_nextState_3_T_34
                         | _next_state_s3_nextState_3_T_35 == 3'h6
                           ? 2'h2
                           : repl_state_s3[5:4])
              : _next_state_s3_nextState_3_T_41
                  ? repl_state_s3[5:4]
                  : 2'(repl_state_s3[5:4] + _next_state_s3_increcement_T_1),
            way_s3 == 2'h1
              ? (~(|_next_state_s3_nextState_3_T_35) & hit_s3
                 | _next_state_s3_nextState_3_T_35 == 3'h1
                 | _next_state_s3_nextState_3_T_30
                   ? 2'h0
                   : _next_state_s3_nextState_3_T_35 == 3'h3
                       ? 2'h1
                       : _next_state_s3_nextState_3_T_34
                         | _next_state_s3_nextState_3_T_35 == 3'h6
                           ? 2'h2
                           : repl_state_s3[3:2])
              : _next_state_s3_nextState_3_T_41
                  ? repl_state_s3[3:2]
                  : 2'(repl_state_s3[3:2] + _next_state_s3_increcement_T_1),
            way_s3 == 2'h0
              ? (~(|_next_state_s3_nextState_3_T_35) & hit_s3
                 | _next_state_s3_nextState_3_T_35 == 3'h1
                 | _next_state_s3_nextState_3_T_30
                   ? 2'h0
                   : _next_state_s3_nextState_3_T_35 == 3'h3
                       ? 2'h1
                       : _next_state_s3_nextState_3_T_34
                         | _next_state_s3_nextState_3_T_35 == 3'h6
                           ? 2'h2
                           : repl_state_s3[1:0])
              : _next_state_s3_nextState_3_T_41
                  ? repl_state_s3[1:0]
                  : 2'(repl_state_s3[1:0] + _next_state_s3_increcement_T_1)}
         : 8'hAA)
  );
  SRAMTemplate_126 origin_bit_opt (
    .clock                 (clock),
    .reset                 (reset),
    .io_r_req_valid        (_origin_bits_r_T),
    .io_r_req_bits_setIdx  (io_read_bits_set),
    .io_r_resp_data_0      (_origin_bit_opt_io_r_resp_data_0),
    .io_r_resp_data_1      (_origin_bit_opt_io_r_resp_data_1),
    .io_r_resp_data_2      (_origin_bit_opt_io_r_resp_data_2),
    .io_r_resp_data_3      (_origin_bit_opt_io_r_resp_data_3),
    .io_w_req_valid        (_GEN_6),
    .io_w_req_bits_setIdx  (_GEN_8),
    .io_w_req_bits_data_0  (_GEN_7),
    .io_w_req_bits_data_1  (_GEN_7),
    .io_w_req_bits_data_2  (_GEN_7),
    .io_w_req_bits_data_3  (_GEN_7),
    .io_w_req_bits_waymask (4'h1 << way_s3)
  );
  assign io_read_ready = io_read_ready_0;
  assign io_resp_valid = reqValid_s3;
  assign io_resp_bits_hit = hit_s3;
  assign io_resp_bits_tag = _GEN_5[way_s3];
  assign io_resp_bits_set = req_s3_set;
  assign io_resp_bits_way = way_s3;
  assign io_resp_bits_meta_dirty = _GEN[way_s3];
  assign io_resp_bits_meta_state = _GEN_0[way_s3];
  assign io_resp_bits_meta_clients = _GEN_1[way_s3];
  assign io_resp_bits_meta_accessed = _GEN_2[way_s3];
  assign io_resp_bits_meta_tagErr = _GEN_3[way_s3];
  assign io_resp_bits_meta_dataErr = _GEN_4[way_s3];
  assign io_resp_bits_error = 1'h0;
  assign io_resp_bits_replacerInfo_channel = req_s3_replacerInfo_channel;
  assign io_resp_bits_replacerInfo_opcode = req_s3_replacerInfo_opcode;
  assign io_resp_bits_replacerInfo_reqSource = req_s3_replacerInfo_reqSource;
  assign io_resp_bits_replacerInfo_refill_prefetch = req_s3_replacerInfo_refill_prefetch;
  assign io_replResp_valid = refillReqValid_s3;
  assign io_replResp_bits_tag = _GEN_5[finalWay];
  assign io_replResp_bits_set = req_s3_set;
  assign io_replResp_bits_way = finalWay;
  assign io_replResp_bits_meta_dirty = _GEN[finalWay];
  assign io_replResp_bits_meta_state = _GEN_0[finalWay];
  assign io_replResp_bits_meta_clients = _GEN_1[finalWay];
  assign io_replResp_bits_meta_accessed = _GEN_2[finalWay];
  assign io_replResp_bits_meta_tagErr = _GEN_3[finalWay];
  assign io_replResp_bits_meta_dataErr = _GEN_4[finalWay];
  assign io_replResp_bits_mshrId = req_s3_mshrId;
  assign io_replResp_bits_retry = ~(|freeWayMask_s3);
endmodule

