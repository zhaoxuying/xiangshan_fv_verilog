// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ProbeQueue(
  input          clock,
  input          reset,
  output         io_mem_probe_ready,
  input          io_mem_probe_valid,
  input  [1:0]   io_mem_probe_bits_param,
  input  [47:0]  io_mem_probe_bits_address,
  input  [255:0] io_mem_probe_bits_data,
  input          io_pipe_req_ready,
  output         io_pipe_req_valid,
  output         io_pipe_req_bits_miss,
  output [1:0]   io_pipe_req_bits_miss_id,
  output [3:0]   io_pipe_req_bits_occupy_way,
  output         io_pipe_req_bits_miss_fail_cause_evict_btot,
  output         io_pipe_req_bits_probe,
  output [1:0]   io_pipe_req_bits_probe_param,
  output         io_pipe_req_bits_probe_need_data,
  output [3:0]   io_pipe_req_bits_source,
  output [4:0]   io_pipe_req_bits_cmd,
  output [49:0]  io_pipe_req_bits_vaddr,
  output [47:0]  io_pipe_req_bits_addr,
  output [511:0] io_pipe_req_bits_store_data,
  output [63:0]  io_pipe_req_bits_store_mask,
  output [2:0]   io_pipe_req_bits_word_idx,
  output [127:0] io_pipe_req_bits_amo_data,
  output [15:0]  io_pipe_req_bits_amo_mask,
  output [127:0] io_pipe_req_bits_amo_cmp,
  output         io_pipe_req_bits_error,
  output         io_pipe_req_bits_replace,
  output [3:0]   io_pipe_req_bits_id,
  input          io_lrsc_locked_block_valid,
  input  [47:0]  io_lrsc_locked_block_bits,
  input          io_update_resv_set,
  output [5:0]   io_perf_0_value,
  output [5:0]   io_perf_1_value,
  output [5:0]   io_perf_2_value,
  output [5:0]   io_perf_3_value,
  output [5:0]   io_perf_4_value
);

  wire         io_pipe_req_valid_0;
  wire         _pipe_req_arb_io_out_ready_T_2;
  reg  [3:0]   selected_req_bits_id;
  wire         _entries_3_io_req_ready;
  wire         _entries_3_io_pipe_req_valid;
  wire [1:0]   _entries_3_io_pipe_req_bits_probe_param;
  wire         _entries_3_io_pipe_req_bits_probe_need_data;
  wire [49:0]  _entries_3_io_pipe_req_bits_vaddr;
  wire [47:0]  _entries_3_io_pipe_req_bits_addr;
  wire [3:0]   _entries_3_io_pipe_req_bits_id;
  wire         _entries_3_io_block_addr_valid;
  wire         _entries_2_io_req_ready;
  wire         _entries_2_io_pipe_req_valid;
  wire [1:0]   _entries_2_io_pipe_req_bits_probe_param;
  wire         _entries_2_io_pipe_req_bits_probe_need_data;
  wire [49:0]  _entries_2_io_pipe_req_bits_vaddr;
  wire [47:0]  _entries_2_io_pipe_req_bits_addr;
  wire [3:0]   _entries_2_io_pipe_req_bits_id;
  wire         _entries_2_io_block_addr_valid;
  wire         _entries_1_io_req_ready;
  wire         _entries_1_io_pipe_req_valid;
  wire [1:0]   _entries_1_io_pipe_req_bits_probe_param;
  wire         _entries_1_io_pipe_req_bits_probe_need_data;
  wire [49:0]  _entries_1_io_pipe_req_bits_vaddr;
  wire [47:0]  _entries_1_io_pipe_req_bits_addr;
  wire [3:0]   _entries_1_io_pipe_req_bits_id;
  wire         _entries_1_io_block_addr_valid;
  wire         _entries_0_io_req_ready;
  wire         _entries_0_io_pipe_req_valid;
  wire [1:0]   _entries_0_io_pipe_req_bits_probe_param;
  wire         _entries_0_io_pipe_req_bits_probe_need_data;
  wire [49:0]  _entries_0_io_pipe_req_bits_vaddr;
  wire [47:0]  _entries_0_io_pipe_req_bits_addr;
  wire [3:0]   _entries_0_io_pipe_req_bits_id;
  wire         _entries_0_io_block_addr_valid;
  wire         _pipe_req_arb_io_in_0_ready;
  wire         _pipe_req_arb_io_in_1_ready;
  wire         _pipe_req_arb_io_in_2_ready;
  wire         _pipe_req_arb_io_in_3_ready;
  wire         _pipe_req_arb_io_out_valid;
  wire         _pipe_req_arb_io_out_bits_miss;
  wire [1:0]   _pipe_req_arb_io_out_bits_miss_id;
  wire [3:0]   _pipe_req_arb_io_out_bits_occupy_way;
  wire         _pipe_req_arb_io_out_bits_miss_fail_cause_evict_btot;
  wire         _pipe_req_arb_io_out_bits_probe;
  wire [1:0]   _pipe_req_arb_io_out_bits_probe_param;
  wire         _pipe_req_arb_io_out_bits_probe_need_data;
  wire [3:0]   _pipe_req_arb_io_out_bits_source;
  wire [4:0]   _pipe_req_arb_io_out_bits_cmd;
  wire [49:0]  _pipe_req_arb_io_out_bits_vaddr;
  wire [47:0]  _pipe_req_arb_io_out_bits_addr;
  wire [511:0] _pipe_req_arb_io_out_bits_store_data;
  wire [63:0]  _pipe_req_arb_io_out_bits_store_mask;
  wire [2:0]   _pipe_req_arb_io_out_bits_word_idx;
  wire [127:0] _pipe_req_arb_io_out_bits_amo_data;
  wire [15:0]  _pipe_req_arb_io_out_bits_amo_mask;
  wire [127:0] _pipe_req_arb_io_out_bits_amo_cmp;
  wire         _pipe_req_arb_io_out_bits_error;
  wire         _pipe_req_arb_io_out_bits_replace;
  wire [3:0]   _pipe_req_arb_io_out_bits_id;
  wire [3:0]   _allocate_T =
    {_entries_3_io_req_ready,
     _entries_2_io_req_ready,
     _entries_1_io_req_ready,
     _entries_0_io_req_ready};
  wire [1:0]   alloc_idx =
    _entries_0_io_req_ready
      ? 2'h0
      : _entries_1_io_req_ready ? 2'h1 : {1'h1, ~_entries_2_io_req_ready};
  wire [49:0]  req_vaddr = {2'h0, io_mem_probe_bits_address};
  wire         perfEvents_0_2 = io_pipe_req_ready & io_pipe_req_valid_0;
  reg          selected_req_valid;
  wire         _selected_lrsc_blocked_T =
    _pipe_req_arb_io_out_ready_T_2 & _pipe_req_arb_io_out_valid;
  reg          selected_req_bits_miss;
  reg  [1:0]   selected_req_bits_miss_id;
  reg  [3:0]   selected_req_bits_occupy_way;
  reg          selected_req_bits_miss_fail_cause_evict_btot;
  reg          selected_req_bits_probe;
  reg  [1:0]   selected_req_bits_probe_param;
  reg          selected_req_bits_probe_need_data;
  reg  [3:0]   selected_req_bits_source;
  reg  [4:0]   selected_req_bits_cmd;
  reg  [49:0]  selected_req_bits_vaddr;
  reg  [47:0]  selected_req_bits_addr;
  reg  [511:0] selected_req_bits_store_data;
  reg  [63:0]  selected_req_bits_store_mask;
  reg  [2:0]   selected_req_bits_word_idx;
  reg  [127:0] selected_req_bits_amo_data;
  reg  [15:0]  selected_req_bits_amo_mask;
  reg  [127:0] selected_req_bits_amo_cmp;
  reg          selected_req_bits_error;
  reg          selected_req_bits_replace;
  reg          resvsetProbeBlock;
  assign _pipe_req_arb_io_out_ready_T_2 = ~selected_req_valid | perfEvents_0_2;
  assign io_pipe_req_valid_0 = selected_req_valid & ~resvsetProbeBlock;
  reg  [2:0]   perfValidCount;
  reg          io_perf_0_value_REG;
  reg          io_perf_0_value_REG_1;
  reg          io_perf_1_value_REG;
  reg          io_perf_1_value_REG_1;
  reg          io_perf_2_value_REG;
  reg          io_perf_2_value_REG_1;
  reg          io_perf_3_value_REG;
  reg          io_perf_3_value_REG_1;
  reg          io_perf_4_value_REG;
  reg          io_perf_4_value_REG_1;
  always @(posedge clock or posedge reset) begin
    if (reset)
      selected_req_valid <= 1'h0;
    else
      selected_req_valid <=
        _selected_lrsc_blocked_T | ~perfEvents_0_2 & selected_req_valid;
  end // always @(posedge, posedge)
  always @(posedge clock) begin
    if (_selected_lrsc_blocked_T) begin
      selected_req_bits_miss <= _pipe_req_arb_io_out_bits_miss;
      selected_req_bits_miss_id <= _pipe_req_arb_io_out_bits_miss_id;
      selected_req_bits_occupy_way <= _pipe_req_arb_io_out_bits_occupy_way;
      selected_req_bits_miss_fail_cause_evict_btot <=
        _pipe_req_arb_io_out_bits_miss_fail_cause_evict_btot;
      selected_req_bits_probe <= _pipe_req_arb_io_out_bits_probe;
      selected_req_bits_probe_param <= _pipe_req_arb_io_out_bits_probe_param;
      selected_req_bits_probe_need_data <= _pipe_req_arb_io_out_bits_probe_need_data;
      selected_req_bits_source <= _pipe_req_arb_io_out_bits_source;
      selected_req_bits_cmd <= _pipe_req_arb_io_out_bits_cmd;
      selected_req_bits_vaddr <= _pipe_req_arb_io_out_bits_vaddr;
      selected_req_bits_addr <= _pipe_req_arb_io_out_bits_addr;
      selected_req_bits_store_data <= _pipe_req_arb_io_out_bits_store_data;
      selected_req_bits_store_mask <= _pipe_req_arb_io_out_bits_store_mask;
      selected_req_bits_word_idx <= _pipe_req_arb_io_out_bits_word_idx;
      selected_req_bits_amo_data <= _pipe_req_arb_io_out_bits_amo_data;
      selected_req_bits_amo_mask <= _pipe_req_arb_io_out_bits_amo_mask;
      selected_req_bits_amo_cmp <= _pipe_req_arb_io_out_bits_amo_cmp;
      selected_req_bits_error <= _pipe_req_arb_io_out_bits_error;
      selected_req_bits_replace <= _pipe_req_arb_io_out_bits_replace;
      selected_req_bits_id <= _pipe_req_arb_io_out_bits_id;
    end
    resvsetProbeBlock <=
      io_update_resv_set
      | (_selected_lrsc_blocked_T
           ? io_lrsc_locked_block_valid
             & io_lrsc_locked_block_bits[47:6] == _pipe_req_arb_io_out_bits_addr[47:6]
           : io_lrsc_locked_block_valid
             & io_lrsc_locked_block_bits[47:6] == selected_req_bits_addr[47:6]
             & selected_req_valid);
    perfValidCount <=
      3'({1'h0,
          2'({1'h0, _entries_0_io_block_addr_valid}
             + {1'h0, _entries_1_io_block_addr_valid})}
         + {1'h0,
            2'({1'h0, _entries_2_io_block_addr_valid}
               + {1'h0, _entries_3_io_block_addr_valid})});
    io_perf_0_value_REG <= perfEvents_0_2;
    io_perf_0_value_REG_1 <= io_perf_0_value_REG;
    io_perf_1_value_REG <= perfValidCount == 3'h0;
    io_perf_1_value_REG_1 <= io_perf_1_value_REG;
    io_perf_2_value_REG <= (|(perfValidCount[2:1])) & perfValidCount < 3'h3;
    io_perf_2_value_REG_1 <= io_perf_2_value_REG;
    io_perf_3_value_REG <= perfValidCount > 3'h2 & {2'h0, perfValidCount} < 5'h4;
    io_perf_3_value_REG_1 <= io_perf_3_value_REG;
    io_perf_4_value_REG <= perfValidCount[2];
    io_perf_4_value_REG_1 <= io_perf_4_value_REG;
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:31];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [5:0] i = 6'h0; i < 6'h20; i += 6'h1) begin
          _RANDOM[i[4:0]] = `RANDOM;
        end
        selected_req_valid = _RANDOM[5'h0][0];
        selected_req_bits_miss = _RANDOM[5'h0][1];
        selected_req_bits_miss_id = _RANDOM[5'h0][3:2];
        selected_req_bits_occupy_way = _RANDOM[5'h0][10:7];
        selected_req_bits_miss_fail_cause_evict_btot = _RANDOM[5'h0][11];
        selected_req_bits_probe = _RANDOM[5'h0][12];
        selected_req_bits_probe_param = _RANDOM[5'h0][14:13];
        selected_req_bits_probe_need_data = _RANDOM[5'h0][15];
        selected_req_bits_source = _RANDOM[5'h0][19:16];
        selected_req_bits_cmd = _RANDOM[5'h0][24:20];
        selected_req_bits_vaddr =
          {_RANDOM[5'h0][31:25], _RANDOM[5'h1], _RANDOM[5'h2][10:0]};
        selected_req_bits_addr = {_RANDOM[5'h2][31:11], _RANDOM[5'h3][26:0]};
        selected_req_bits_store_data =
          {_RANDOM[5'h3][31:27],
           _RANDOM[5'h4],
           _RANDOM[5'h5],
           _RANDOM[5'h6],
           _RANDOM[5'h7],
           _RANDOM[5'h8],
           _RANDOM[5'h9],
           _RANDOM[5'hA],
           _RANDOM[5'hB],
           _RANDOM[5'hC],
           _RANDOM[5'hD],
           _RANDOM[5'hE],
           _RANDOM[5'hF],
           _RANDOM[5'h10],
           _RANDOM[5'h11],
           _RANDOM[5'h12],
           _RANDOM[5'h13][26:0]};
        selected_req_bits_store_mask =
          {_RANDOM[5'h13][31:27], _RANDOM[5'h14], _RANDOM[5'h15][26:0]};
        selected_req_bits_word_idx = _RANDOM[5'h15][29:27];
        selected_req_bits_amo_data =
          {_RANDOM[5'h15][31:30],
           _RANDOM[5'h16],
           _RANDOM[5'h17],
           _RANDOM[5'h18],
           _RANDOM[5'h19][29:0]};
        selected_req_bits_amo_mask = {_RANDOM[5'h19][31:30], _RANDOM[5'h1A][13:0]};
        selected_req_bits_amo_cmp =
          {_RANDOM[5'h1A][31:14],
           _RANDOM[5'h1B],
           _RANDOM[5'h1C],
           _RANDOM[5'h1D],
           _RANDOM[5'h1E][13:0]};
        selected_req_bits_error = _RANDOM[5'h1E][14];
        selected_req_bits_replace = _RANDOM[5'h1E][15];
        selected_req_bits_id = _RANDOM[5'h1E][27:24];
        resvsetProbeBlock = _RANDOM[5'h1E][28];
        perfValidCount = _RANDOM[5'h1E][31:29];
        io_perf_0_value_REG = _RANDOM[5'h1F][0];
        io_perf_0_value_REG_1 = _RANDOM[5'h1F][1];
        io_perf_1_value_REG = _RANDOM[5'h1F][2];
        io_perf_1_value_REG_1 = _RANDOM[5'h1F][3];
        io_perf_2_value_REG = _RANDOM[5'h1F][4];
        io_perf_2_value_REG_1 = _RANDOM[5'h1F][5];
        io_perf_3_value_REG = _RANDOM[5'h1F][6];
        io_perf_3_value_REG_1 = _RANDOM[5'h1F][7];
        io_perf_4_value_REG = _RANDOM[5'h1F][8];
        io_perf_4_value_REG_1 = _RANDOM[5'h1F][9];
      `endif // RANDOMIZE_REG_INIT
      if (reset)
        selected_req_valid = 1'h0;
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Arbiter4_MainPipeReq pipe_req_arb (
    .io_in_0_ready                           (_pipe_req_arb_io_in_0_ready),
    .io_in_0_valid                           (_entries_0_io_pipe_req_valid),
    .io_in_0_bits_miss                       (1'h0),
    .io_in_0_bits_miss_id                    (2'h0),
    .io_in_0_bits_occupy_way                 (4'h0),
    .io_in_0_bits_miss_fail_cause_evict_btot (1'h0),
    .io_in_0_bits_probe                      (1'h1),
    .io_in_0_bits_probe_param                (_entries_0_io_pipe_req_bits_probe_param),
    .io_in_0_bits_probe_need_data
      (_entries_0_io_pipe_req_bits_probe_need_data),
    .io_in_0_bits_source                     (4'h0),
    .io_in_0_bits_cmd                        (5'h0),
    .io_in_0_bits_vaddr                      (_entries_0_io_pipe_req_bits_vaddr),
    .io_in_0_bits_addr                       (_entries_0_io_pipe_req_bits_addr),
    .io_in_0_bits_store_data                 (512'h0),
    .io_in_0_bits_store_mask                 (64'h0),
    .io_in_0_bits_word_idx                   (3'h0),
    .io_in_0_bits_amo_data                   (128'h0),
    .io_in_0_bits_amo_mask                   (16'h0),
    .io_in_0_bits_amo_cmp                    (128'h0),
    .io_in_0_bits_error                      (1'h0),
    .io_in_0_bits_replace                    (1'h0),
    .io_in_0_bits_id                         (_entries_0_io_pipe_req_bits_id),
    .io_in_1_ready                           (_pipe_req_arb_io_in_1_ready),
    .io_in_1_valid                           (_entries_1_io_pipe_req_valid),
    .io_in_1_bits_miss                       (1'h0),
    .io_in_1_bits_miss_id                    (2'h0),
    .io_in_1_bits_occupy_way                 (4'h0),
    .io_in_1_bits_miss_fail_cause_evict_btot (1'h0),
    .io_in_1_bits_probe                      (1'h1),
    .io_in_1_bits_probe_param                (_entries_1_io_pipe_req_bits_probe_param),
    .io_in_1_bits_probe_need_data
      (_entries_1_io_pipe_req_bits_probe_need_data),
    .io_in_1_bits_source                     (4'h0),
    .io_in_1_bits_cmd                        (5'h0),
    .io_in_1_bits_vaddr                      (_entries_1_io_pipe_req_bits_vaddr),
    .io_in_1_bits_addr                       (_entries_1_io_pipe_req_bits_addr),
    .io_in_1_bits_word_idx                   (3'h0),
    .io_in_1_bits_amo_data                   (128'h0),
    .io_in_1_bits_amo_mask                   (16'h0),
    .io_in_1_bits_amo_cmp                    (128'h0),
    .io_in_1_bits_id                         (_entries_1_io_pipe_req_bits_id),
    .io_in_2_ready                           (_pipe_req_arb_io_in_2_ready),
    .io_in_2_valid                           (_entries_2_io_pipe_req_valid),
    .io_in_2_bits_probe                      (1'h1),
    .io_in_2_bits_probe_param                (_entries_2_io_pipe_req_bits_probe_param),
    .io_in_2_bits_probe_need_data
      (_entries_2_io_pipe_req_bits_probe_need_data),
    .io_in_2_bits_source                     (4'h0),
    .io_in_2_bits_cmd                        (5'h0),
    .io_in_2_bits_vaddr                      (_entries_2_io_pipe_req_bits_vaddr),
    .io_in_2_bits_addr                       (_entries_2_io_pipe_req_bits_addr),
    .io_in_2_bits_store_data                 (512'h0),
    .io_in_2_bits_store_mask                 (64'h0),
    .io_in_2_bits_id                         (_entries_2_io_pipe_req_bits_id),
    .io_in_3_ready                           (_pipe_req_arb_io_in_3_ready),
    .io_in_3_valid                           (_entries_3_io_pipe_req_valid),
    .io_in_3_bits_probe                      (1'h1),
    .io_in_3_bits_probe_param                (_entries_3_io_pipe_req_bits_probe_param),
    .io_in_3_bits_probe_need_data
      (_entries_3_io_pipe_req_bits_probe_need_data),
    .io_in_3_bits_source                     (4'h0),
    .io_in_3_bits_cmd                        (5'h0),
    .io_in_3_bits_vaddr                      (_entries_3_io_pipe_req_bits_vaddr),
    .io_in_3_bits_addr                       (_entries_3_io_pipe_req_bits_addr),
    .io_in_3_bits_word_idx                   (3'h0),
    .io_in_3_bits_amo_data                   (128'h0),
    .io_in_3_bits_amo_mask                   (16'h0),
    .io_in_3_bits_amo_cmp                    (128'h0),
    .io_in_3_bits_id                         (_entries_3_io_pipe_req_bits_id),
    .io_out_ready                            (_pipe_req_arb_io_out_ready_T_2),
    .io_out_valid                            (_pipe_req_arb_io_out_valid),
    .io_out_bits_miss                        (_pipe_req_arb_io_out_bits_miss),
    .io_out_bits_miss_id                     (_pipe_req_arb_io_out_bits_miss_id),
    .io_out_bits_occupy_way                  (_pipe_req_arb_io_out_bits_occupy_way),
    .io_out_bits_miss_fail_cause_evict_btot
      (_pipe_req_arb_io_out_bits_miss_fail_cause_evict_btot),
    .io_out_bits_probe                       (_pipe_req_arb_io_out_bits_probe),
    .io_out_bits_probe_param                 (_pipe_req_arb_io_out_bits_probe_param),
    .io_out_bits_probe_need_data             (_pipe_req_arb_io_out_bits_probe_need_data),
    .io_out_bits_source                      (_pipe_req_arb_io_out_bits_source),
    .io_out_bits_cmd                         (_pipe_req_arb_io_out_bits_cmd),
    .io_out_bits_vaddr                       (_pipe_req_arb_io_out_bits_vaddr),
    .io_out_bits_addr                        (_pipe_req_arb_io_out_bits_addr),
    .io_out_bits_store_data                  (_pipe_req_arb_io_out_bits_store_data),
    .io_out_bits_store_mask                  (_pipe_req_arb_io_out_bits_store_mask),
    .io_out_bits_word_idx                    (_pipe_req_arb_io_out_bits_word_idx),
    .io_out_bits_amo_data                    (_pipe_req_arb_io_out_bits_amo_data),
    .io_out_bits_amo_mask                    (_pipe_req_arb_io_out_bits_amo_mask),
    .io_out_bits_amo_cmp                     (_pipe_req_arb_io_out_bits_amo_cmp),
    .io_out_bits_error                       (_pipe_req_arb_io_out_bits_error),
    .io_out_bits_replace                     (_pipe_req_arb_io_out_bits_replace),
    .io_out_bits_id                          (_pipe_req_arb_io_out_bits_id)
  );
  ProbeEntry entries_0 (
    .clock                            (clock),
    .reset                            (reset),
    .io_req_ready                     (_entries_0_io_req_ready),
    .io_req_valid
      (alloc_idx == 2'h0 & (|_allocate_T) & io_mem_probe_valid),
    .io_req_bits_addr                 (io_mem_probe_bits_address),
    .io_req_bits_vaddr                (req_vaddr),
    .io_req_bits_param                (io_mem_probe_bits_param),
    .io_req_bits_needData             (io_mem_probe_bits_data[0]),
    .io_pipe_req_ready                (_pipe_req_arb_io_in_0_ready),
    .io_pipe_req_valid                (_entries_0_io_pipe_req_valid),
    .io_pipe_req_bits_probe_param     (_entries_0_io_pipe_req_bits_probe_param),
    .io_pipe_req_bits_probe_need_data (_entries_0_io_pipe_req_bits_probe_need_data),
    .io_pipe_req_bits_vaddr           (_entries_0_io_pipe_req_bits_vaddr),
    .io_pipe_req_bits_addr            (_entries_0_io_pipe_req_bits_addr),
    .io_pipe_req_bits_id              (_entries_0_io_pipe_req_bits_id),
    .io_pipe_resp_valid               (perfEvents_0_2),
    .io_pipe_resp_bits_id             (selected_req_bits_id[1:0]),
    .io_lrsc_locked_block_valid       (io_lrsc_locked_block_valid),
    .io_lrsc_locked_block_bits        (io_lrsc_locked_block_bits),
    .io_id                            (2'h0),
    .io_block_addr_valid              (_entries_0_io_block_addr_valid)
  );
  ProbeEntry entries_1 (
    .clock                            (clock),
    .reset                            (reset),
    .io_req_ready                     (_entries_1_io_req_ready),
    .io_req_valid
      (alloc_idx == 2'h1 & (|_allocate_T) & io_mem_probe_valid),
    .io_req_bits_addr                 (io_mem_probe_bits_address),
    .io_req_bits_vaddr                (req_vaddr),
    .io_req_bits_param                (io_mem_probe_bits_param),
    .io_req_bits_needData             (io_mem_probe_bits_data[0]),
    .io_pipe_req_ready                (_pipe_req_arb_io_in_1_ready),
    .io_pipe_req_valid                (_entries_1_io_pipe_req_valid),
    .io_pipe_req_bits_probe_param     (_entries_1_io_pipe_req_bits_probe_param),
    .io_pipe_req_bits_probe_need_data (_entries_1_io_pipe_req_bits_probe_need_data),
    .io_pipe_req_bits_vaddr           (_entries_1_io_pipe_req_bits_vaddr),
    .io_pipe_req_bits_addr            (_entries_1_io_pipe_req_bits_addr),
    .io_pipe_req_bits_id              (_entries_1_io_pipe_req_bits_id),
    .io_pipe_resp_valid               (perfEvents_0_2),
    .io_pipe_resp_bits_id             (selected_req_bits_id[1:0]),
    .io_lrsc_locked_block_valid       (io_lrsc_locked_block_valid),
    .io_lrsc_locked_block_bits        (io_lrsc_locked_block_bits),
    .io_id                            (2'h1),
    .io_block_addr_valid              (_entries_1_io_block_addr_valid)
  );
  ProbeEntry entries_2 (
    .clock                            (clock),
    .reset                            (reset),
    .io_req_ready                     (_entries_2_io_req_ready),
    .io_req_valid
      (alloc_idx == 2'h2 & (|_allocate_T) & io_mem_probe_valid),
    .io_req_bits_addr                 (io_mem_probe_bits_address),
    .io_req_bits_vaddr                (req_vaddr),
    .io_req_bits_param                (io_mem_probe_bits_param),
    .io_req_bits_needData             (io_mem_probe_bits_data[0]),
    .io_pipe_req_ready                (_pipe_req_arb_io_in_2_ready),
    .io_pipe_req_valid                (_entries_2_io_pipe_req_valid),
    .io_pipe_req_bits_probe_param     (_entries_2_io_pipe_req_bits_probe_param),
    .io_pipe_req_bits_probe_need_data (_entries_2_io_pipe_req_bits_probe_need_data),
    .io_pipe_req_bits_vaddr           (_entries_2_io_pipe_req_bits_vaddr),
    .io_pipe_req_bits_addr            (_entries_2_io_pipe_req_bits_addr),
    .io_pipe_req_bits_id              (_entries_2_io_pipe_req_bits_id),
    .io_pipe_resp_valid               (perfEvents_0_2),
    .io_pipe_resp_bits_id             (selected_req_bits_id[1:0]),
    .io_lrsc_locked_block_valid       (io_lrsc_locked_block_valid),
    .io_lrsc_locked_block_bits        (io_lrsc_locked_block_bits),
    .io_id                            (2'h2),
    .io_block_addr_valid              (_entries_2_io_block_addr_valid)
  );
  ProbeEntry entries_3 (
    .clock                            (clock),
    .reset                            (reset),
    .io_req_ready                     (_entries_3_io_req_ready),
    .io_req_valid
      ((&alloc_idx) & (|_allocate_T) & io_mem_probe_valid),
    .io_req_bits_addr                 (io_mem_probe_bits_address),
    .io_req_bits_vaddr                (req_vaddr),
    .io_req_bits_param                (io_mem_probe_bits_param),
    .io_req_bits_needData             (io_mem_probe_bits_data[0]),
    .io_pipe_req_ready                (_pipe_req_arb_io_in_3_ready),
    .io_pipe_req_valid                (_entries_3_io_pipe_req_valid),
    .io_pipe_req_bits_probe_param     (_entries_3_io_pipe_req_bits_probe_param),
    .io_pipe_req_bits_probe_need_data (_entries_3_io_pipe_req_bits_probe_need_data),
    .io_pipe_req_bits_vaddr           (_entries_3_io_pipe_req_bits_vaddr),
    .io_pipe_req_bits_addr            (_entries_3_io_pipe_req_bits_addr),
    .io_pipe_req_bits_id              (_entries_3_io_pipe_req_bits_id),
    .io_pipe_resp_valid               (perfEvents_0_2),
    .io_pipe_resp_bits_id             (selected_req_bits_id[1:0]),
    .io_lrsc_locked_block_valid       (io_lrsc_locked_block_valid),
    .io_lrsc_locked_block_bits        (io_lrsc_locked_block_bits),
    .io_id                            (2'h3),
    .io_block_addr_valid              (_entries_3_io_block_addr_valid)
  );
  assign io_mem_probe_ready = |_allocate_T;
  assign io_pipe_req_valid = io_pipe_req_valid_0;
  assign io_pipe_req_bits_miss = selected_req_bits_miss;
  assign io_pipe_req_bits_miss_id = selected_req_bits_miss_id;
  assign io_pipe_req_bits_occupy_way = selected_req_bits_occupy_way;
  assign io_pipe_req_bits_miss_fail_cause_evict_btot =
    selected_req_bits_miss_fail_cause_evict_btot;
  assign io_pipe_req_bits_probe = selected_req_bits_probe;
  assign io_pipe_req_bits_probe_param = selected_req_bits_probe_param;
  assign io_pipe_req_bits_probe_need_data = selected_req_bits_probe_need_data;
  assign io_pipe_req_bits_source = selected_req_bits_source;
  assign io_pipe_req_bits_cmd = selected_req_bits_cmd;
  assign io_pipe_req_bits_vaddr = selected_req_bits_vaddr;
  assign io_pipe_req_bits_addr = selected_req_bits_addr;
  assign io_pipe_req_bits_store_data = selected_req_bits_store_data;
  assign io_pipe_req_bits_store_mask = selected_req_bits_store_mask;
  assign io_pipe_req_bits_word_idx = selected_req_bits_word_idx;
  assign io_pipe_req_bits_amo_data = selected_req_bits_amo_data;
  assign io_pipe_req_bits_amo_mask = selected_req_bits_amo_mask;
  assign io_pipe_req_bits_amo_cmp = selected_req_bits_amo_cmp;
  assign io_pipe_req_bits_error = selected_req_bits_error;
  assign io_pipe_req_bits_replace = selected_req_bits_replace;
  assign io_pipe_req_bits_id = selected_req_bits_id;
  assign io_perf_0_value = {5'h0, io_perf_0_value_REG_1};
  assign io_perf_1_value = {5'h0, io_perf_1_value_REG_1};
  assign io_perf_2_value = {5'h0, io_perf_2_value_REG_1};
  assign io_perf_3_value = {5'h0, io_perf_3_value_REG_1};
  assign io_perf_4_value = {5'h0, io_perf_4_value_REG_1};
endmodule

