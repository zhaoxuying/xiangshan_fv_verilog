// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module SplittedSRAMTemplate_2(
  input         clock,
  input         reset,
  output        io_r_req_ready,
  input         io_r_req_valid,
  input  [4:0]  io_r_req_bits_setIdx,
  output        io_r_resp_data_0_entry_isCall,
  output        io_r_resp_data_0_entry_isRet,
  output        io_r_resp_data_0_entry_isJalr,
  output        io_r_resp_data_0_entry_valid,
  output [3:0]  io_r_resp_data_0_entry_brSlots_0_offset,
  output        io_r_resp_data_0_entry_brSlots_0_sharing,
  output        io_r_resp_data_0_entry_brSlots_0_valid,
  output [11:0] io_r_resp_data_0_entry_brSlots_0_lower,
  output [1:0]  io_r_resp_data_0_entry_brSlots_0_tarStat,
  output [3:0]  io_r_resp_data_0_entry_tailSlot_offset,
  output        io_r_resp_data_0_entry_tailSlot_sharing,
  output        io_r_resp_data_0_entry_tailSlot_valid,
  output [19:0] io_r_resp_data_0_entry_tailSlot_lower,
  output [1:0]  io_r_resp_data_0_entry_tailSlot_tarStat,
  output [3:0]  io_r_resp_data_0_entry_pftAddr,
  output        io_r_resp_data_0_entry_carry,
  output        io_r_resp_data_0_entry_last_may_be_rvi_call,
  output        io_r_resp_data_0_entry_strong_bias_0,
  output        io_r_resp_data_0_entry_strong_bias_1,
  output [19:0] io_r_resp_data_0_tag,
  output        io_r_resp_data_1_entry_isCall,
  output        io_r_resp_data_1_entry_isRet,
  output        io_r_resp_data_1_entry_isJalr,
  output        io_r_resp_data_1_entry_valid,
  output [3:0]  io_r_resp_data_1_entry_brSlots_0_offset,
  output        io_r_resp_data_1_entry_brSlots_0_sharing,
  output        io_r_resp_data_1_entry_brSlots_0_valid,
  output [11:0] io_r_resp_data_1_entry_brSlots_0_lower,
  output [1:0]  io_r_resp_data_1_entry_brSlots_0_tarStat,
  output [3:0]  io_r_resp_data_1_entry_tailSlot_offset,
  output        io_r_resp_data_1_entry_tailSlot_sharing,
  output        io_r_resp_data_1_entry_tailSlot_valid,
  output [19:0] io_r_resp_data_1_entry_tailSlot_lower,
  output [1:0]  io_r_resp_data_1_entry_tailSlot_tarStat,
  output [3:0]  io_r_resp_data_1_entry_pftAddr,
  output        io_r_resp_data_1_entry_carry,
  output        io_r_resp_data_1_entry_last_may_be_rvi_call,
  output        io_r_resp_data_1_entry_strong_bias_0,
  output        io_r_resp_data_1_entry_strong_bias_1,
  output [19:0] io_r_resp_data_1_tag,
  input         io_w_req_valid,
  input  [4:0]  io_w_req_bits_setIdx,
  input         io_w_req_bits_data_0_entry_isCall,
  input         io_w_req_bits_data_0_entry_isRet,
  input         io_w_req_bits_data_0_entry_isJalr,
  input         io_w_req_bits_data_0_entry_valid,
  input  [3:0]  io_w_req_bits_data_0_entry_brSlots_0_offset,
  input         io_w_req_bits_data_0_entry_brSlots_0_sharing,
  input         io_w_req_bits_data_0_entry_brSlots_0_valid,
  input  [11:0] io_w_req_bits_data_0_entry_brSlots_0_lower,
  input  [1:0]  io_w_req_bits_data_0_entry_brSlots_0_tarStat,
  input  [3:0]  io_w_req_bits_data_0_entry_tailSlot_offset,
  input         io_w_req_bits_data_0_entry_tailSlot_sharing,
  input         io_w_req_bits_data_0_entry_tailSlot_valid,
  input  [19:0] io_w_req_bits_data_0_entry_tailSlot_lower,
  input  [1:0]  io_w_req_bits_data_0_entry_tailSlot_tarStat,
  input  [3:0]  io_w_req_bits_data_0_entry_pftAddr,
  input         io_w_req_bits_data_0_entry_carry,
  input         io_w_req_bits_data_0_entry_last_may_be_rvi_call,
  input         io_w_req_bits_data_0_entry_strong_bias_0,
  input         io_w_req_bits_data_0_entry_strong_bias_1,
  input  [19:0] io_w_req_bits_data_0_tag,
  input         io_w_req_bits_data_1_entry_isCall,
  input         io_w_req_bits_data_1_entry_isRet,
  input         io_w_req_bits_data_1_entry_isJalr,
  input         io_w_req_bits_data_1_entry_valid,
  input  [3:0]  io_w_req_bits_data_1_entry_brSlots_0_offset,
  input         io_w_req_bits_data_1_entry_brSlots_0_sharing,
  input         io_w_req_bits_data_1_entry_brSlots_0_valid,
  input  [11:0] io_w_req_bits_data_1_entry_brSlots_0_lower,
  input  [1:0]  io_w_req_bits_data_1_entry_brSlots_0_tarStat,
  input  [3:0]  io_w_req_bits_data_1_entry_tailSlot_offset,
  input         io_w_req_bits_data_1_entry_tailSlot_sharing,
  input         io_w_req_bits_data_1_entry_tailSlot_valid,
  input  [19:0] io_w_req_bits_data_1_entry_tailSlot_lower,
  input  [1:0]  io_w_req_bits_data_1_entry_tailSlot_tarStat,
  input  [3:0]  io_w_req_bits_data_1_entry_pftAddr,
  input         io_w_req_bits_data_1_entry_carry,
  input         io_w_req_bits_data_1_entry_last_may_be_rvi_call,
  input         io_w_req_bits_data_1_entry_strong_bias_0,
  input         io_w_req_bits_data_1_entry_strong_bias_1,
  input  [19:0] io_w_req_bits_data_1_tag,
  input  [1:0]  io_w_req_bits_waymask
);

  wire [9:0] _array_0_0_7_io_r_resp_data_0;
  wire [9:0] _array_0_0_7_io_r_resp_data_1;
  wire [9:0] _array_0_0_6_io_r_resp_data_0;
  wire [9:0] _array_0_0_6_io_r_resp_data_1;
  wire [9:0] _array_0_0_5_io_r_resp_data_0;
  wire [9:0] _array_0_0_5_io_r_resp_data_1;
  wire [9:0] _array_0_0_4_io_r_resp_data_0;
  wire [9:0] _array_0_0_4_io_r_resp_data_1;
  wire [9:0] _array_0_0_3_io_r_resp_data_0;
  wire [9:0] _array_0_0_3_io_r_resp_data_1;
  wire [9:0] _array_0_0_2_io_r_resp_data_0;
  wire [9:0] _array_0_0_2_io_r_resp_data_1;
  wire [9:0] _array_0_0_1_io_r_resp_data_0;
  wire [9:0] _array_0_0_1_io_r_resp_data_1;
  wire [9:0] _array_0_0_0_io_r_resp_data_0;
  wire [9:0] _array_0_0_0_io_r_resp_data_1;
  SRAMTemplate_36 array_0_0_0 (
    .clock                 (clock),
    .reset                 (reset),
    .io_r_req_ready        (io_r_req_ready),
    .io_r_req_valid        (io_r_req_valid),
    .io_r_req_bits_setIdx  (io_r_req_bits_setIdx),
    .io_r_resp_data_0      (_array_0_0_0_io_r_resp_data_0),
    .io_r_resp_data_1      (_array_0_0_0_io_r_resp_data_1),
    .io_w_req_valid        (io_w_req_valid),
    .io_w_req_bits_setIdx  (io_w_req_bits_setIdx),
    .io_w_req_bits_data_0  (io_w_req_bits_data_0_tag[9:0]),
    .io_w_req_bits_data_1  (io_w_req_bits_data_1_tag[9:0]),
    .io_w_req_bits_waymask (io_w_req_bits_waymask)
  );
  SRAMTemplate_36 array_0_0_1 (
    .clock                 (clock),
    .reset                 (reset),
    .io_r_req_ready        (/* unused */),
    .io_r_req_valid        (io_r_req_valid),
    .io_r_req_bits_setIdx  (io_r_req_bits_setIdx),
    .io_r_resp_data_0      (_array_0_0_1_io_r_resp_data_0),
    .io_r_resp_data_1      (_array_0_0_1_io_r_resp_data_1),
    .io_w_req_valid        (io_w_req_valid),
    .io_w_req_bits_setIdx  (io_w_req_bits_setIdx),
    .io_w_req_bits_data_0  (io_w_req_bits_data_0_tag[19:10]),
    .io_w_req_bits_data_1  (io_w_req_bits_data_1_tag[19:10]),
    .io_w_req_bits_waymask (io_w_req_bits_waymask)
  );
  SRAMTemplate_36 array_0_0_2 (
    .clock                 (clock),
    .reset                 (reset),
    .io_r_req_ready        (/* unused */),
    .io_r_req_valid        (io_r_req_valid),
    .io_r_req_bits_setIdx  (io_r_req_bits_setIdx),
    .io_r_resp_data_0      (_array_0_0_2_io_r_resp_data_0),
    .io_r_resp_data_1      (_array_0_0_2_io_r_resp_data_1),
    .io_w_req_valid        (io_w_req_valid),
    .io_w_req_bits_setIdx  (io_w_req_bits_setIdx),
    .io_w_req_bits_data_0
      ({io_w_req_bits_data_0_entry_tailSlot_tarStat,
        io_w_req_bits_data_0_entry_pftAddr,
        io_w_req_bits_data_0_entry_carry,
        io_w_req_bits_data_0_entry_last_may_be_rvi_call,
        io_w_req_bits_data_0_entry_strong_bias_1,
        io_w_req_bits_data_0_entry_strong_bias_0}),
    .io_w_req_bits_data_1
      ({io_w_req_bits_data_1_entry_tailSlot_tarStat,
        io_w_req_bits_data_1_entry_pftAddr,
        io_w_req_bits_data_1_entry_carry,
        io_w_req_bits_data_1_entry_last_may_be_rvi_call,
        io_w_req_bits_data_1_entry_strong_bias_1,
        io_w_req_bits_data_1_entry_strong_bias_0}),
    .io_w_req_bits_waymask (io_w_req_bits_waymask)
  );
  SRAMTemplate_36 array_0_0_3 (
    .clock                 (clock),
    .reset                 (reset),
    .io_r_req_ready        (/* unused */),
    .io_r_req_valid        (io_r_req_valid),
    .io_r_req_bits_setIdx  (io_r_req_bits_setIdx),
    .io_r_resp_data_0      (_array_0_0_3_io_r_resp_data_0),
    .io_r_resp_data_1      (_array_0_0_3_io_r_resp_data_1),
    .io_w_req_valid        (io_w_req_valid),
    .io_w_req_bits_setIdx  (io_w_req_bits_setIdx),
    .io_w_req_bits_data_0  (io_w_req_bits_data_0_entry_tailSlot_lower[9:0]),
    .io_w_req_bits_data_1  (io_w_req_bits_data_1_entry_tailSlot_lower[9:0]),
    .io_w_req_bits_waymask (io_w_req_bits_waymask)
  );
  SRAMTemplate_36 array_0_0_4 (
    .clock                 (clock),
    .reset                 (reset),
    .io_r_req_ready        (/* unused */),
    .io_r_req_valid        (io_r_req_valid),
    .io_r_req_bits_setIdx  (io_r_req_bits_setIdx),
    .io_r_resp_data_0      (_array_0_0_4_io_r_resp_data_0),
    .io_r_resp_data_1      (_array_0_0_4_io_r_resp_data_1),
    .io_w_req_valid        (io_w_req_valid),
    .io_w_req_bits_setIdx  (io_w_req_bits_setIdx),
    .io_w_req_bits_data_0  (io_w_req_bits_data_0_entry_tailSlot_lower[19:10]),
    .io_w_req_bits_data_1  (io_w_req_bits_data_1_entry_tailSlot_lower[19:10]),
    .io_w_req_bits_waymask (io_w_req_bits_waymask)
  );
  SRAMTemplate_36 array_0_0_5 (
    .clock                 (clock),
    .reset                 (reset),
    .io_r_req_ready        (/* unused */),
    .io_r_req_valid        (io_r_req_valid),
    .io_r_req_bits_setIdx  (io_r_req_bits_setIdx),
    .io_r_resp_data_0      (_array_0_0_5_io_r_resp_data_0),
    .io_r_resp_data_1      (_array_0_0_5_io_r_resp_data_1),
    .io_w_req_valid        (io_w_req_valid),
    .io_w_req_bits_setIdx  (io_w_req_bits_setIdx),
    .io_w_req_bits_data_0
      ({io_w_req_bits_data_0_entry_brSlots_0_lower[1:0],
        io_w_req_bits_data_0_entry_brSlots_0_tarStat,
        io_w_req_bits_data_0_entry_tailSlot_offset,
        io_w_req_bits_data_0_entry_tailSlot_sharing,
        io_w_req_bits_data_0_entry_tailSlot_valid}),
    .io_w_req_bits_data_1
      ({io_w_req_bits_data_1_entry_brSlots_0_lower[1:0],
        io_w_req_bits_data_1_entry_brSlots_0_tarStat,
        io_w_req_bits_data_1_entry_tailSlot_offset,
        io_w_req_bits_data_1_entry_tailSlot_sharing,
        io_w_req_bits_data_1_entry_tailSlot_valid}),
    .io_w_req_bits_waymask (io_w_req_bits_waymask)
  );
  SRAMTemplate_36 array_0_0_6 (
    .clock                 (clock),
    .reset                 (reset),
    .io_r_req_ready        (/* unused */),
    .io_r_req_valid        (io_r_req_valid),
    .io_r_req_bits_setIdx  (io_r_req_bits_setIdx),
    .io_r_resp_data_0      (_array_0_0_6_io_r_resp_data_0),
    .io_r_resp_data_1      (_array_0_0_6_io_r_resp_data_1),
    .io_w_req_valid        (io_w_req_valid),
    .io_w_req_bits_setIdx  (io_w_req_bits_setIdx),
    .io_w_req_bits_data_0  (io_w_req_bits_data_0_entry_brSlots_0_lower[11:2]),
    .io_w_req_bits_data_1  (io_w_req_bits_data_1_entry_brSlots_0_lower[11:2]),
    .io_w_req_bits_waymask (io_w_req_bits_waymask)
  );
  SRAMTemplate_36 array_0_0_7 (
    .clock                 (clock),
    .reset                 (reset),
    .io_r_req_ready        (/* unused */),
    .io_r_req_valid        (io_r_req_valid),
    .io_r_req_bits_setIdx  (io_r_req_bits_setIdx),
    .io_r_resp_data_0      (_array_0_0_7_io_r_resp_data_0),
    .io_r_resp_data_1      (_array_0_0_7_io_r_resp_data_1),
    .io_w_req_valid        (io_w_req_valid),
    .io_w_req_bits_setIdx  (io_w_req_bits_setIdx),
    .io_w_req_bits_data_0
      ({io_w_req_bits_data_0_entry_isCall,
        io_w_req_bits_data_0_entry_isRet,
        io_w_req_bits_data_0_entry_isJalr,
        io_w_req_bits_data_0_entry_valid,
        io_w_req_bits_data_0_entry_brSlots_0_offset,
        io_w_req_bits_data_0_entry_brSlots_0_sharing,
        io_w_req_bits_data_0_entry_brSlots_0_valid}),
    .io_w_req_bits_data_1
      ({io_w_req_bits_data_1_entry_isCall,
        io_w_req_bits_data_1_entry_isRet,
        io_w_req_bits_data_1_entry_isJalr,
        io_w_req_bits_data_1_entry_valid,
        io_w_req_bits_data_1_entry_brSlots_0_offset,
        io_w_req_bits_data_1_entry_brSlots_0_sharing,
        io_w_req_bits_data_1_entry_brSlots_0_valid}),
    .io_w_req_bits_waymask (io_w_req_bits_waymask)
  );
  assign io_r_resp_data_0_entry_isCall = _array_0_0_7_io_r_resp_data_0[9];
  assign io_r_resp_data_0_entry_isRet = _array_0_0_7_io_r_resp_data_0[8];
  assign io_r_resp_data_0_entry_isJalr = _array_0_0_7_io_r_resp_data_0[7];
  assign io_r_resp_data_0_entry_valid = _array_0_0_7_io_r_resp_data_0[6];
  assign io_r_resp_data_0_entry_brSlots_0_offset = _array_0_0_7_io_r_resp_data_0[5:2];
  assign io_r_resp_data_0_entry_brSlots_0_sharing = _array_0_0_7_io_r_resp_data_0[1];
  assign io_r_resp_data_0_entry_brSlots_0_valid = _array_0_0_7_io_r_resp_data_0[0];
  assign io_r_resp_data_0_entry_brSlots_0_lower =
    {_array_0_0_6_io_r_resp_data_0, _array_0_0_5_io_r_resp_data_0[9:8]};
  assign io_r_resp_data_0_entry_brSlots_0_tarStat = _array_0_0_5_io_r_resp_data_0[7:6];
  assign io_r_resp_data_0_entry_tailSlot_offset = _array_0_0_5_io_r_resp_data_0[5:2];
  assign io_r_resp_data_0_entry_tailSlot_sharing = _array_0_0_5_io_r_resp_data_0[1];
  assign io_r_resp_data_0_entry_tailSlot_valid = _array_0_0_5_io_r_resp_data_0[0];
  assign io_r_resp_data_0_entry_tailSlot_lower =
    {_array_0_0_4_io_r_resp_data_0, _array_0_0_3_io_r_resp_data_0};
  assign io_r_resp_data_0_entry_tailSlot_tarStat = _array_0_0_2_io_r_resp_data_0[9:8];
  assign io_r_resp_data_0_entry_pftAddr = _array_0_0_2_io_r_resp_data_0[7:4];
  assign io_r_resp_data_0_entry_carry = _array_0_0_2_io_r_resp_data_0[3];
  assign io_r_resp_data_0_entry_last_may_be_rvi_call = _array_0_0_2_io_r_resp_data_0[2];
  assign io_r_resp_data_0_entry_strong_bias_0 = _array_0_0_2_io_r_resp_data_0[0];
  assign io_r_resp_data_0_entry_strong_bias_1 = _array_0_0_2_io_r_resp_data_0[1];
  assign io_r_resp_data_0_tag =
    {_array_0_0_1_io_r_resp_data_0, _array_0_0_0_io_r_resp_data_0};
  assign io_r_resp_data_1_entry_isCall = _array_0_0_7_io_r_resp_data_1[9];
  assign io_r_resp_data_1_entry_isRet = _array_0_0_7_io_r_resp_data_1[8];
  assign io_r_resp_data_1_entry_isJalr = _array_0_0_7_io_r_resp_data_1[7];
  assign io_r_resp_data_1_entry_valid = _array_0_0_7_io_r_resp_data_1[6];
  assign io_r_resp_data_1_entry_brSlots_0_offset = _array_0_0_7_io_r_resp_data_1[5:2];
  assign io_r_resp_data_1_entry_brSlots_0_sharing = _array_0_0_7_io_r_resp_data_1[1];
  assign io_r_resp_data_1_entry_brSlots_0_valid = _array_0_0_7_io_r_resp_data_1[0];
  assign io_r_resp_data_1_entry_brSlots_0_lower =
    {_array_0_0_6_io_r_resp_data_1, _array_0_0_5_io_r_resp_data_1[9:8]};
  assign io_r_resp_data_1_entry_brSlots_0_tarStat = _array_0_0_5_io_r_resp_data_1[7:6];
  assign io_r_resp_data_1_entry_tailSlot_offset = _array_0_0_5_io_r_resp_data_1[5:2];
  assign io_r_resp_data_1_entry_tailSlot_sharing = _array_0_0_5_io_r_resp_data_1[1];
  assign io_r_resp_data_1_entry_tailSlot_valid = _array_0_0_5_io_r_resp_data_1[0];
  assign io_r_resp_data_1_entry_tailSlot_lower =
    {_array_0_0_4_io_r_resp_data_1, _array_0_0_3_io_r_resp_data_1};
  assign io_r_resp_data_1_entry_tailSlot_tarStat = _array_0_0_2_io_r_resp_data_1[9:8];
  assign io_r_resp_data_1_entry_pftAddr = _array_0_0_2_io_r_resp_data_1[7:4];
  assign io_r_resp_data_1_entry_carry = _array_0_0_2_io_r_resp_data_1[3];
  assign io_r_resp_data_1_entry_last_may_be_rvi_call = _array_0_0_2_io_r_resp_data_1[2];
  assign io_r_resp_data_1_entry_strong_bias_0 = _array_0_0_2_io_r_resp_data_1[0];
  assign io_r_resp_data_1_entry_strong_bias_1 = _array_0_0_2_io_r_resp_data_1[1];
  assign io_r_resp_data_1_tag =
    {_array_0_0_1_io_r_resp_data_1, _array_0_0_0_io_r_resp_data_1};
endmodule

