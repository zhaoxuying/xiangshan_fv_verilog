// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module TLBufferModule(
  input          clock,
  input          reset,
  output         io_in_a_ready,
  input          io_in_a_valid,
  input  [3:0]   io_in_a_bits_opcode,
  input  [2:0]   io_in_a_bits_param,
  input  [2:0]   io_in_a_bits_size,
  input  [8:0]   io_in_a_bits_source,
  input  [47:0]  io_in_a_bits_address,
  input          io_in_a_bits_user_amba_prot_bufferable,
  input          io_in_a_bits_user_amba_prot_modifiable,
  input          io_in_a_bits_user_amba_prot_readalloc,
  input          io_in_a_bits_user_amba_prot_writealloc,
  input          io_in_a_bits_user_amba_prot_privileged,
  input          io_in_a_bits_user_amba_prot_secure,
  input          io_in_a_bits_user_amba_prot_fetch,
  input          io_in_a_bits_echo_blockisdirty,
  input  [31:0]  io_in_a_bits_mask,
  input  [255:0] io_in_a_bits_data,
  input          io_in_a_bits_corrupt,
  output         io_in_c_ready,
  input          io_in_c_valid,
  input  [2:0]   io_in_c_bits_opcode,
  input  [2:0]   io_in_c_bits_param,
  input  [2:0]   io_in_c_bits_size,
  input  [8:0]   io_in_c_bits_source,
  input  [47:0]  io_in_c_bits_address,
  input          io_in_c_bits_echo_blockisdirty,
  input  [255:0] io_in_c_bits_data,
  input          io_in_c_bits_corrupt,
  input          io_in_d_ready,
  output         io_in_d_valid,
  output [3:0]   io_in_d_bits_opcode,
  output [1:0]   io_in_d_bits_param,
  output [2:0]   io_in_d_bits_size,
  output [8:0]   io_in_d_bits_source,
  output [2:0]   io_in_d_bits_sink,
  output         io_in_d_bits_denied,
  output         io_in_d_bits_echo_blockisdirty,
  output [255:0] io_in_d_bits_data,
  output         io_in_d_bits_corrupt,
  output         io_in_e_ready,
  input          io_in_e_valid,
  input  [2:0]   io_in_e_bits_sink,
  input          io_out_a_ready,
  output         io_out_a_valid,
  output [3:0]   io_out_a_bits_opcode,
  output [2:0]   io_out_a_bits_param,
  output [2:0]   io_out_a_bits_size,
  output [8:0]   io_out_a_bits_source,
  output [47:0]  io_out_a_bits_address,
  output         io_out_a_bits_user_amba_prot_bufferable,
  output         io_out_a_bits_user_amba_prot_modifiable,
  output         io_out_a_bits_user_amba_prot_readalloc,
  output         io_out_a_bits_user_amba_prot_writealloc,
  output         io_out_a_bits_user_amba_prot_privileged,
  output         io_out_a_bits_user_amba_prot_secure,
  output         io_out_a_bits_user_amba_prot_fetch,
  output         io_out_a_bits_echo_blockisdirty,
  output [31:0]  io_out_a_bits_mask,
  output [255:0] io_out_a_bits_data,
  output         io_out_a_bits_corrupt,
  input          io_out_c_ready,
  output         io_out_c_valid,
  output [2:0]   io_out_c_bits_opcode,
  output [2:0]   io_out_c_bits_size,
  output [8:0]   io_out_c_bits_source,
  output [47:0]  io_out_c_bits_address,
  output         io_out_c_bits_user_amba_prot_bufferable,
  output         io_out_c_bits_user_amba_prot_modifiable,
  output         io_out_c_bits_user_amba_prot_readalloc,
  output         io_out_c_bits_user_amba_prot_writealloc,
  output         io_out_c_bits_user_amba_prot_privileged,
  output         io_out_c_bits_user_amba_prot_secure,
  output         io_out_c_bits_user_amba_prot_fetch,
  output [255:0] io_out_c_bits_data,
  output         io_out_c_bits_corrupt,
  output         io_out_d_ready,
  input          io_out_d_valid,
  input  [3:0]   io_out_d_bits_opcode,
  input  [1:0]   io_out_d_bits_param,
  input  [2:0]   io_out_d_bits_size,
  input  [8:0]   io_out_d_bits_source,
  input  [2:0]   io_out_d_bits_sink,
  input          io_out_d_bits_denied,
  input          io_out_d_bits_echo_blockisdirty,
  input  [255:0] io_out_d_bits_data,
  input          io_out_d_bits_corrupt,
  output         io_out_e_valid,
  output [2:0]   io_out_e_bits_sink
);

  Queue2_TLBundleA_10 io_out_a_q (
    .clock                                 (clock),
    .reset                                 (reset),
    .io_enq_ready                          (io_in_a_ready),
    .io_enq_valid                          (io_in_a_valid),
    .io_enq_bits_opcode                    (io_in_a_bits_opcode),
    .io_enq_bits_param                     (io_in_a_bits_param),
    .io_enq_bits_size                      (io_in_a_bits_size),
    .io_enq_bits_source                    (io_in_a_bits_source),
    .io_enq_bits_address                   (io_in_a_bits_address),
    .io_enq_bits_user_amba_prot_bufferable (io_in_a_bits_user_amba_prot_bufferable),
    .io_enq_bits_user_amba_prot_modifiable (io_in_a_bits_user_amba_prot_modifiable),
    .io_enq_bits_user_amba_prot_readalloc  (io_in_a_bits_user_amba_prot_readalloc),
    .io_enq_bits_user_amba_prot_writealloc (io_in_a_bits_user_amba_prot_writealloc),
    .io_enq_bits_user_amba_prot_privileged (io_in_a_bits_user_amba_prot_privileged),
    .io_enq_bits_user_amba_prot_secure     (io_in_a_bits_user_amba_prot_secure),
    .io_enq_bits_user_amba_prot_fetch      (io_in_a_bits_user_amba_prot_fetch),
    .io_enq_bits_echo_blockisdirty         (io_in_a_bits_echo_blockisdirty),
    .io_enq_bits_mask                      (io_in_a_bits_mask),
    .io_enq_bits_data                      (io_in_a_bits_data),
    .io_enq_bits_corrupt                   (io_in_a_bits_corrupt),
    .io_deq_ready                          (io_out_a_ready),
    .io_deq_valid                          (io_out_a_valid),
    .io_deq_bits_opcode                    (io_out_a_bits_opcode),
    .io_deq_bits_param                     (io_out_a_bits_param),
    .io_deq_bits_size                      (io_out_a_bits_size),
    .io_deq_bits_source                    (io_out_a_bits_source),
    .io_deq_bits_address                   (io_out_a_bits_address),
    .io_deq_bits_user_amba_prot_bufferable (io_out_a_bits_user_amba_prot_bufferable),
    .io_deq_bits_user_amba_prot_modifiable (io_out_a_bits_user_amba_prot_modifiable),
    .io_deq_bits_user_amba_prot_readalloc  (io_out_a_bits_user_amba_prot_readalloc),
    .io_deq_bits_user_amba_prot_writealloc (io_out_a_bits_user_amba_prot_writealloc),
    .io_deq_bits_user_amba_prot_privileged (io_out_a_bits_user_amba_prot_privileged),
    .io_deq_bits_user_amba_prot_secure     (io_out_a_bits_user_amba_prot_secure),
    .io_deq_bits_user_amba_prot_fetch      (io_out_a_bits_user_amba_prot_fetch),
    .io_deq_bits_echo_blockisdirty         (io_out_a_bits_echo_blockisdirty),
    .io_deq_bits_mask                      (io_out_a_bits_mask),
    .io_deq_bits_data                      (io_out_a_bits_data),
    .io_deq_bits_corrupt                   (io_out_a_bits_corrupt)
  );
  Queue2_TLBundleD_2 io_in_d_q (
    .clock                         (clock),
    .reset                         (reset),
    .io_enq_ready                  (io_out_d_ready),
    .io_enq_valid                  (io_out_d_valid),
    .io_enq_bits_opcode            (io_out_d_bits_opcode),
    .io_enq_bits_param             (io_out_d_bits_param),
    .io_enq_bits_size              (io_out_d_bits_size),
    .io_enq_bits_source            (io_out_d_bits_source),
    .io_enq_bits_sink              (io_out_d_bits_sink),
    .io_enq_bits_denied            (io_out_d_bits_denied),
    .io_enq_bits_echo_blockisdirty (io_out_d_bits_echo_blockisdirty),
    .io_enq_bits_data              (io_out_d_bits_data),
    .io_enq_bits_corrupt           (io_out_d_bits_corrupt),
    .io_deq_ready                  (io_in_d_ready),
    .io_deq_valid                  (io_in_d_valid),
    .io_deq_bits_opcode            (io_in_d_bits_opcode),
    .io_deq_bits_param             (io_in_d_bits_param),
    .io_deq_bits_size              (io_in_d_bits_size),
    .io_deq_bits_source            (io_in_d_bits_source),
    .io_deq_bits_sink              (io_in_d_bits_sink),
    .io_deq_bits_denied            (io_in_d_bits_denied),
    .io_deq_bits_echo_blockisdirty (io_in_d_bits_echo_blockisdirty),
    .io_deq_bits_data              (io_in_d_bits_data),
    .io_deq_bits_corrupt           (io_in_d_bits_corrupt)
  );
  Queue2_TLBundleC io_out_c_q (
    .clock                                 (clock),
    .reset                                 (reset),
    .io_enq_ready                          (io_in_c_ready),
    .io_enq_valid                          (io_in_c_valid),
    .io_enq_bits_opcode                    (io_in_c_bits_opcode),
    .io_enq_bits_param                     (io_in_c_bits_param),
    .io_enq_bits_size                      (io_in_c_bits_size),
    .io_enq_bits_source                    (io_in_c_bits_source),
    .io_enq_bits_address                   (io_in_c_bits_address),
    .io_enq_bits_echo_blockisdirty         (io_in_c_bits_echo_blockisdirty),
    .io_enq_bits_data                      (io_in_c_bits_data),
    .io_enq_bits_corrupt                   (io_in_c_bits_corrupt),
    .io_deq_ready                          (io_out_c_ready),
    .io_deq_valid                          (io_out_c_valid),
    .io_deq_bits_opcode                    (io_out_c_bits_opcode),
    .io_deq_bits_size                      (io_out_c_bits_size),
    .io_deq_bits_source                    (io_out_c_bits_source),
    .io_deq_bits_address                   (io_out_c_bits_address),
    .io_deq_bits_user_amba_prot_bufferable (io_out_c_bits_user_amba_prot_bufferable),
    .io_deq_bits_user_amba_prot_modifiable (io_out_c_bits_user_amba_prot_modifiable),
    .io_deq_bits_user_amba_prot_readalloc  (io_out_c_bits_user_amba_prot_readalloc),
    .io_deq_bits_user_amba_prot_writealloc (io_out_c_bits_user_amba_prot_writealloc),
    .io_deq_bits_user_amba_prot_privileged (io_out_c_bits_user_amba_prot_privileged),
    .io_deq_bits_user_amba_prot_secure     (io_out_c_bits_user_amba_prot_secure),
    .io_deq_bits_user_amba_prot_fetch      (io_out_c_bits_user_amba_prot_fetch),
    .io_deq_bits_data                      (io_out_c_bits_data),
    .io_deq_bits_corrupt                   (io_out_c_bits_corrupt)
  );
  Queue2_TLBundleE io_out_e_q (
    .clock            (clock),
    .reset            (reset),
    .io_enq_ready     (io_in_e_ready),
    .io_enq_valid     (io_in_e_valid),
    .io_enq_bits_sink (io_in_e_bits_sink),
    .io_deq_ready     (1'h1),
    .io_deq_valid     (io_out_e_valid),
    .io_deq_bits_sink (io_out_e_bits_sink)
  );
endmodule

