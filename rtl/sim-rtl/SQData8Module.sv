// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module SQData8Module(
  input         clock,
  input         reset,
  input  [4:0]  io_raddr_0,
  input  [4:0]  io_raddr_1,
  output        io_rdata_0_valid,
  output [7:0]  io_rdata_0_data,
  output        io_rdata_1_valid,
  output [7:0]  io_rdata_1_data,
  input         io_data_wen_0,
  input         io_data_wen_1,
  input  [4:0]  io_data_waddr_0,
  input  [4:0]  io_data_waddr_1,
  input  [7:0]  io_data_wdata_0,
  input  [7:0]  io_data_wdata_1,
  input         io_mask_wen_0,
  input         io_mask_wen_1,
  input  [4:0]  io_mask_waddr_0,
  input  [4:0]  io_mask_waddr_1,
  input         io_mask_wdata_0,
  input         io_mask_wdata_1,
  input  [19:0] io_needForward_0_0,
  input  [19:0] io_needForward_0_1,
  input  [19:0] io_needForward_1_0,
  input  [19:0] io_needForward_1_1,
  input  [19:0] io_needForward_2_0,
  input  [19:0] io_needForward_2_1,
  output        io_forwardValid_0,
  output        io_forwardValid_1,
  output        io_forwardValid_2,
  output [7:0]  io_forwardData_0,
  output [7:0]  io_forwardData_1,
  output [7:0]  io_forwardData_2
);

  reg              data_0_valid;
  reg  [7:0]       data_0_data;
  reg              data_1_valid;
  reg  [7:0]       data_1_data;
  reg              data_2_valid;
  reg  [7:0]       data_2_data;
  reg              data_3_valid;
  reg  [7:0]       data_3_data;
  reg              data_4_valid;
  reg  [7:0]       data_4_data;
  reg              data_5_valid;
  reg  [7:0]       data_5_data;
  reg              data_6_valid;
  reg  [7:0]       data_6_data;
  reg              data_7_valid;
  reg  [7:0]       data_7_data;
  reg              data_8_valid;
  reg  [7:0]       data_8_data;
  reg              data_9_valid;
  reg  [7:0]       data_9_data;
  reg              data_10_valid;
  reg  [7:0]       data_10_data;
  reg              data_11_valid;
  reg  [7:0]       data_11_data;
  reg              data_12_valid;
  reg  [7:0]       data_12_data;
  reg              data_13_valid;
  reg  [7:0]       data_13_data;
  reg              data_14_valid;
  reg  [7:0]       data_14_data;
  reg              data_15_valid;
  reg  [7:0]       data_15_data;
  reg              data_16_valid;
  reg  [7:0]       data_16_data;
  reg              data_17_valid;
  reg  [7:0]       data_17_data;
  reg              data_18_valid;
  reg  [7:0]       data_18_data;
  reg              data_19_valid;
  reg  [7:0]       data_19_data;
  wire             s0_wenVec_0 = io_data_wen_0 & io_data_waddr_0[1:0] == 2'h0;
  wire             s0_wenVec_1 = io_data_wen_0 & io_data_waddr_0[1:0] == 2'h1;
  wire             s0_wenVec_2 = io_data_wen_0 & io_data_waddr_0[1:0] == 2'h2;
  wire             s0_wenVec_3 = io_data_wen_0 & (&(io_data_waddr_0[1:0]));
  reg              s1_wenVec_r_0;
  reg              s1_wenVec_r_1;
  reg              s1_wenVec_r_2;
  reg              s1_wenVec_r_3;
  reg  [7:0]       data_s1_wdata_0_bank_0;
  reg  [2:0]       data_s1_waddr_0_bank_0;
  reg  [7:0]       data_s1_wdata_0_bank_1;
  reg  [2:0]       data_s1_waddr_0_bank_1;
  reg  [7:0]       data_s1_wdata_0_bank_2;
  reg  [2:0]       data_s1_waddr_0_bank_2;
  reg  [7:0]       data_s1_wdata_0_bank_3;
  reg  [2:0]       data_s1_waddr_0_bank_3;
  wire             s0_wenVec_1_0 = io_data_wen_1 & io_data_waddr_1[1:0] == 2'h0;
  wire             s0_wenVec_1_1 = io_data_wen_1 & io_data_waddr_1[1:0] == 2'h1;
  wire             s0_wenVec_1_2 = io_data_wen_1 & io_data_waddr_1[1:0] == 2'h2;
  wire             s0_wenVec_1_3 = io_data_wen_1 & (&(io_data_waddr_1[1:0]));
  reg              s1_wenVec_r_1_0;
  reg              s1_wenVec_r_1_1;
  reg              s1_wenVec_r_1_2;
  reg              s1_wenVec_r_1_3;
  reg  [7:0]       data_s1_wdata_1_bank_0;
  reg  [2:0]       data_s1_waddr_1_bank_0;
  reg  [7:0]       data_s1_wdata_1_bank_1;
  reg  [2:0]       data_s1_waddr_1_bank_1;
  reg  [7:0]       data_s1_wdata_1_bank_2;
  reg  [2:0]       data_s1_waddr_1_bank_2;
  reg  [7:0]       data_s1_wdata_1_bank_3;
  reg  [2:0]       data_s1_waddr_1_bank_3;
  wire             s0_wenVec_2_0 = io_mask_wen_0 & io_mask_waddr_0[1:0] == 2'h0;
  wire             s0_wenVec_2_1 = io_mask_wen_0 & io_mask_waddr_0[1:0] == 2'h1;
  wire             s0_wenVec_2_2 = io_mask_wen_0 & io_mask_waddr_0[1:0] == 2'h2;
  wire             s0_wenVec_2_3 = io_mask_wen_0 & (&(io_mask_waddr_0[1:0]));
  reg              s1_wenVec_r_2_0;
  reg              s1_wenVec_r_2_1;
  reg              s1_wenVec_r_2_2;
  reg              s1_wenVec_r_2_3;
  reg              mask_s1_wdata_0_bank_0;
  reg  [2:0]       mask_s1_waddr_0_bank_0;
  reg              mask_s1_wdata_0_bank_1;
  reg  [2:0]       mask_s1_waddr_0_bank_1;
  reg              mask_s1_wdata_0_bank_2;
  reg  [2:0]       mask_s1_waddr_0_bank_2;
  reg              mask_s1_wdata_0_bank_3;
  reg  [2:0]       mask_s1_waddr_0_bank_3;
  wire             s0_wenVec_3_0 = io_mask_wen_1 & io_mask_waddr_1[1:0] == 2'h0;
  wire             s0_wenVec_3_1 = io_mask_wen_1 & io_mask_waddr_1[1:0] == 2'h1;
  wire             s0_wenVec_3_2 = io_mask_wen_1 & io_mask_waddr_1[1:0] == 2'h2;
  wire             s0_wenVec_3_3 = io_mask_wen_1 & (&(io_mask_waddr_1[1:0]));
  reg              s1_wenVec_r_3_0;
  reg              s1_wenVec_r_3_1;
  reg              s1_wenVec_r_3_2;
  reg              s1_wenVec_r_3_3;
  reg              mask_s1_wdata_1_bank_0;
  reg  [2:0]       mask_s1_waddr_1_bank_0;
  reg              mask_s1_wdata_1_bank_1;
  reg  [2:0]       mask_s1_waddr_1_bank_1;
  reg              mask_s1_wdata_1_bank_2;
  reg  [2:0]       mask_s1_waddr_1_bank_2;
  reg              mask_s1_wdata_1_bank_3;
  reg  [2:0]       mask_s1_waddr_1_bank_3;
  reg  [4:0]       io_rdata_0_next_r;
  wire [31:0]      _GEN =
    {{data_0_valid},
     {data_0_valid},
     {data_0_valid},
     {data_0_valid},
     {data_0_valid},
     {data_0_valid},
     {data_0_valid},
     {data_0_valid},
     {data_0_valid},
     {data_0_valid},
     {data_0_valid},
     {data_0_valid},
     {data_19_valid},
     {data_18_valid},
     {data_17_valid},
     {data_16_valid},
     {data_15_valid},
     {data_14_valid},
     {data_13_valid},
     {data_12_valid},
     {data_11_valid},
     {data_10_valid},
     {data_9_valid},
     {data_8_valid},
     {data_7_valid},
     {data_6_valid},
     {data_5_valid},
     {data_4_valid},
     {data_3_valid},
     {data_2_valid},
     {data_1_valid},
     {data_0_valid}};
  wire [31:0][7:0] _GEN_0 =
    {{data_0_data},
     {data_0_data},
     {data_0_data},
     {data_0_data},
     {data_0_data},
     {data_0_data},
     {data_0_data},
     {data_0_data},
     {data_0_data},
     {data_0_data},
     {data_0_data},
     {data_0_data},
     {data_19_data},
     {data_18_data},
     {data_17_data},
     {data_16_data},
     {data_15_data},
     {data_14_data},
     {data_13_data},
     {data_12_data},
     {data_11_data},
     {data_10_data},
     {data_9_data},
     {data_8_data},
     {data_7_data},
     {data_6_data},
     {data_5_data},
     {data_4_data},
     {data_3_data},
     {data_2_data},
     {data_1_data},
     {data_0_data}};
  reg  [4:0]       io_rdata_1_next_r;
  reg              needCheck0Reg;
  reg              needCheck1Reg;
  reg              needCheck0Reg_1;
  reg              needCheck1Reg_1;
  wire             matchResultVec_1_valid = needCheck0Reg_1 & data_1_valid;
  wire             matchResultVec_21_valid = needCheck1Reg_1 & data_1_valid;
  reg              needCheck0Reg_2;
  reg              needCheck1Reg_2;
  reg              needCheck0Reg_3;
  reg              needCheck1Reg_3;
  reg              needCheck0Reg_4;
  reg              needCheck1Reg_4;
  wire             matchResultVec_4_valid = needCheck0Reg_4 & data_4_valid;
  wire             matchResultVec_24_valid = needCheck1Reg_4 & data_4_valid;
  reg              needCheck0Reg_5;
  reg              needCheck1Reg_5;
  reg              needCheck0Reg_6;
  reg              needCheck1Reg_6;
  wire             matchResultVec_6_valid = needCheck0Reg_6 & data_6_valid;
  wire             matchResultVec_26_valid = needCheck1Reg_6 & data_6_valid;
  reg              needCheck0Reg_7;
  reg              needCheck1Reg_7;
  reg              needCheck0Reg_8;
  reg              needCheck1Reg_8;
  reg              needCheck0Reg_9;
  reg              needCheck1Reg_9;
  wire             matchResultVec_9_valid = needCheck0Reg_9 & data_9_valid;
  wire             matchResultVec_29_valid = needCheck1Reg_9 & data_9_valid;
  reg              needCheck0Reg_10;
  reg              needCheck1Reg_10;
  reg              needCheck0Reg_11;
  reg              needCheck1Reg_11;
  wire             matchResultVec_11_valid = needCheck0Reg_11 & data_11_valid;
  wire             matchResultVec_31_valid = needCheck1Reg_11 & data_11_valid;
  reg              needCheck0Reg_12;
  reg              needCheck1Reg_12;
  reg              needCheck0Reg_13;
  reg              needCheck1Reg_13;
  reg              needCheck0Reg_14;
  reg              needCheck1Reg_14;
  wire             matchResultVec_14_valid = needCheck0Reg_14 & data_14_valid;
  wire             matchResultVec_34_valid = needCheck1Reg_14 & data_14_valid;
  reg              needCheck0Reg_15;
  reg              needCheck1Reg_15;
  reg              needCheck0Reg_16;
  reg              needCheck1Reg_16;
  wire             matchResultVec_16_valid = needCheck0Reg_16 & data_16_valid;
  wire             matchResultVec_36_valid = needCheck1Reg_16 & data_16_valid;
  reg              needCheck0Reg_17;
  reg              needCheck1Reg_17;
  reg              needCheck0Reg_18;
  reg              needCheck1Reg_18;
  reg              needCheck0Reg_19;
  reg              needCheck1Reg_19;
  wire             matchResultVec_19_valid = needCheck0Reg_19 & data_19_valid;
  wire             matchResultVec_39_valid = needCheck1Reg_19 & data_19_valid;
  wire             parallelFwdResult_res_1_valid =
    needCheck0Reg_3 & data_3_valid | matchResultVec_4_valid;
  wire             parallelFwdResult_res_2_valid =
    needCheck0Reg_2 & data_2_valid | parallelFwdResult_res_1_valid;
  wire             parallelFwdResult_res_5_valid =
    needCheck0Reg_8 & data_8_valid | matchResultVec_9_valid;
  wire             parallelFwdResult_res_6_valid =
    needCheck0Reg_7 & data_7_valid | parallelFwdResult_res_5_valid;
  wire             parallelFwdResult_res_7_valid =
    needCheck0Reg_5 & data_5_valid | matchResultVec_6_valid
    | parallelFwdResult_res_6_valid;
  wire             parallelFwdResult_res_10_valid =
    needCheck0Reg_13 & data_13_valid | matchResultVec_14_valid;
  wire             parallelFwdResult_res_11_valid =
    needCheck0Reg_12 & data_12_valid | parallelFwdResult_res_10_valid;
  wire             parallelFwdResult_res_14_valid =
    needCheck0Reg_18 & data_18_valid | matchResultVec_19_valid;
  wire             parallelFwdResult_res_15_valid =
    needCheck0Reg_17 & data_17_valid | parallelFwdResult_res_14_valid;
  wire             parallelFwdResult_res_16_valid =
    needCheck0Reg_15 & data_15_valid | matchResultVec_16_valid
    | parallelFwdResult_res_15_valid;
  wire             parallelFwdResult_res_17_valid =
    needCheck0Reg_10 & data_10_valid | matchResultVec_11_valid
    | parallelFwdResult_res_11_valid | parallelFwdResult_res_16_valid;
  wire             parallelFwdResult_res_20_valid =
    needCheck1Reg_3 & data_3_valid | matchResultVec_24_valid;
  wire             parallelFwdResult_res_21_valid =
    needCheck1Reg_2 & data_2_valid | parallelFwdResult_res_20_valid;
  wire             parallelFwdResult_res_24_valid =
    needCheck1Reg_8 & data_8_valid | matchResultVec_29_valid;
  wire             parallelFwdResult_res_25_valid =
    needCheck1Reg_7 & data_7_valid | parallelFwdResult_res_24_valid;
  wire             parallelFwdResult_res_26_valid =
    needCheck1Reg_5 & data_5_valid | matchResultVec_26_valid
    | parallelFwdResult_res_25_valid;
  wire             parallelFwdResult_res_29_valid =
    needCheck1Reg_13 & data_13_valid | matchResultVec_34_valid;
  wire             parallelFwdResult_res_30_valid =
    needCheck1Reg_12 & data_12_valid | parallelFwdResult_res_29_valid;
  wire             parallelFwdResult_res_33_valid =
    needCheck1Reg_18 & data_18_valid | matchResultVec_39_valid;
  wire             parallelFwdResult_res_34_valid =
    needCheck1Reg_17 & data_17_valid | parallelFwdResult_res_33_valid;
  wire             parallelFwdResult_res_35_valid =
    needCheck1Reg_15 & data_15_valid | matchResultVec_36_valid
    | parallelFwdResult_res_34_valid;
  wire             parallelFwdResult_res_36_valid =
    needCheck1Reg_10 & data_10_valid | matchResultVec_31_valid
    | parallelFwdResult_res_30_valid | parallelFwdResult_res_35_valid;
  wire             parallelFwdResult_res_37_valid =
    needCheck1Reg & data_0_valid | matchResultVec_21_valid
    | parallelFwdResult_res_21_valid | parallelFwdResult_res_26_valid
    | parallelFwdResult_res_36_valid;
  reg              needCheck0Reg_20;
  reg              needCheck1Reg_20;
  reg              needCheck0Reg_21;
  reg              needCheck1Reg_21;
  wire             matchResultVec_1_1_valid = needCheck0Reg_21 & data_1_valid;
  wire             matchResultVec_1_21_valid = needCheck1Reg_21 & data_1_valid;
  reg              needCheck0Reg_22;
  reg              needCheck1Reg_22;
  reg              needCheck0Reg_23;
  reg              needCheck1Reg_23;
  reg              needCheck0Reg_24;
  reg              needCheck1Reg_24;
  wire             matchResultVec_1_4_valid = needCheck0Reg_24 & data_4_valid;
  wire             matchResultVec_1_24_valid = needCheck1Reg_24 & data_4_valid;
  reg              needCheck0Reg_25;
  reg              needCheck1Reg_25;
  reg              needCheck0Reg_26;
  reg              needCheck1Reg_26;
  wire             matchResultVec_1_6_valid = needCheck0Reg_26 & data_6_valid;
  wire             matchResultVec_1_26_valid = needCheck1Reg_26 & data_6_valid;
  reg              needCheck0Reg_27;
  reg              needCheck1Reg_27;
  reg              needCheck0Reg_28;
  reg              needCheck1Reg_28;
  reg              needCheck0Reg_29;
  reg              needCheck1Reg_29;
  wire             matchResultVec_1_9_valid = needCheck0Reg_29 & data_9_valid;
  wire             matchResultVec_1_29_valid = needCheck1Reg_29 & data_9_valid;
  reg              needCheck0Reg_30;
  reg              needCheck1Reg_30;
  reg              needCheck0Reg_31;
  reg              needCheck1Reg_31;
  wire             matchResultVec_1_11_valid = needCheck0Reg_31 & data_11_valid;
  wire             matchResultVec_1_31_valid = needCheck1Reg_31 & data_11_valid;
  reg              needCheck0Reg_32;
  reg              needCheck1Reg_32;
  reg              needCheck0Reg_33;
  reg              needCheck1Reg_33;
  reg              needCheck0Reg_34;
  reg              needCheck1Reg_34;
  wire             matchResultVec_1_14_valid = needCheck0Reg_34 & data_14_valid;
  wire             matchResultVec_1_34_valid = needCheck1Reg_34 & data_14_valid;
  reg              needCheck0Reg_35;
  reg              needCheck1Reg_35;
  reg              needCheck0Reg_36;
  reg              needCheck1Reg_36;
  wire             matchResultVec_1_16_valid = needCheck0Reg_36 & data_16_valid;
  wire             matchResultVec_1_36_valid = needCheck1Reg_36 & data_16_valid;
  reg              needCheck0Reg_37;
  reg              needCheck1Reg_37;
  reg              needCheck0Reg_38;
  reg              needCheck1Reg_38;
  reg              needCheck0Reg_39;
  reg              needCheck1Reg_39;
  wire             matchResultVec_1_19_valid = needCheck0Reg_39 & data_19_valid;
  wire             matchResultVec_1_39_valid = needCheck1Reg_39 & data_19_valid;
  wire             parallelFwdResult_res_40_valid =
    needCheck0Reg_23 & data_3_valid | matchResultVec_1_4_valid;
  wire             parallelFwdResult_res_41_valid =
    needCheck0Reg_22 & data_2_valid | parallelFwdResult_res_40_valid;
  wire             parallelFwdResult_res_44_valid =
    needCheck0Reg_28 & data_8_valid | matchResultVec_1_9_valid;
  wire             parallelFwdResult_res_45_valid =
    needCheck0Reg_27 & data_7_valid | parallelFwdResult_res_44_valid;
  wire             parallelFwdResult_res_46_valid =
    needCheck0Reg_25 & data_5_valid | matchResultVec_1_6_valid
    | parallelFwdResult_res_45_valid;
  wire             parallelFwdResult_res_49_valid =
    needCheck0Reg_33 & data_13_valid | matchResultVec_1_14_valid;
  wire             parallelFwdResult_res_50_valid =
    needCheck0Reg_32 & data_12_valid | parallelFwdResult_res_49_valid;
  wire             parallelFwdResult_res_53_valid =
    needCheck0Reg_38 & data_18_valid | matchResultVec_1_19_valid;
  wire             parallelFwdResult_res_54_valid =
    needCheck0Reg_37 & data_17_valid | parallelFwdResult_res_53_valid;
  wire             parallelFwdResult_res_55_valid =
    needCheck0Reg_35 & data_15_valid | matchResultVec_1_16_valid
    | parallelFwdResult_res_54_valid;
  wire             parallelFwdResult_res_56_valid =
    needCheck0Reg_30 & data_10_valid | matchResultVec_1_11_valid
    | parallelFwdResult_res_50_valid | parallelFwdResult_res_55_valid;
  wire             parallelFwdResult_res_59_valid =
    needCheck1Reg_23 & data_3_valid | matchResultVec_1_24_valid;
  wire             parallelFwdResult_res_60_valid =
    needCheck1Reg_22 & data_2_valid | parallelFwdResult_res_59_valid;
  wire             parallelFwdResult_res_63_valid =
    needCheck1Reg_28 & data_8_valid | matchResultVec_1_29_valid;
  wire             parallelFwdResult_res_64_valid =
    needCheck1Reg_27 & data_7_valid | parallelFwdResult_res_63_valid;
  wire             parallelFwdResult_res_65_valid =
    needCheck1Reg_25 & data_5_valid | matchResultVec_1_26_valid
    | parallelFwdResult_res_64_valid;
  wire             parallelFwdResult_res_68_valid =
    needCheck1Reg_33 & data_13_valid | matchResultVec_1_34_valid;
  wire             parallelFwdResult_res_69_valid =
    needCheck1Reg_32 & data_12_valid | parallelFwdResult_res_68_valid;
  wire             parallelFwdResult_res_72_valid =
    needCheck1Reg_38 & data_18_valid | matchResultVec_1_39_valid;
  wire             parallelFwdResult_res_73_valid =
    needCheck1Reg_37 & data_17_valid | parallelFwdResult_res_72_valid;
  wire             parallelFwdResult_res_74_valid =
    needCheck1Reg_35 & data_15_valid | matchResultVec_1_36_valid
    | parallelFwdResult_res_73_valid;
  wire             parallelFwdResult_res_75_valid =
    needCheck1Reg_30 & data_10_valid | matchResultVec_1_31_valid
    | parallelFwdResult_res_69_valid | parallelFwdResult_res_74_valid;
  wire             parallelFwdResult_res_76_valid =
    needCheck1Reg_20 & data_0_valid | matchResultVec_1_21_valid
    | parallelFwdResult_res_60_valid | parallelFwdResult_res_65_valid
    | parallelFwdResult_res_75_valid;
  reg              needCheck0Reg_40;
  reg              needCheck1Reg_40;
  reg              needCheck0Reg_41;
  reg              needCheck1Reg_41;
  wire             matchResultVec_2_1_valid = needCheck0Reg_41 & data_1_valid;
  wire             matchResultVec_2_21_valid = needCheck1Reg_41 & data_1_valid;
  reg              needCheck0Reg_42;
  reg              needCheck1Reg_42;
  reg              needCheck0Reg_43;
  reg              needCheck1Reg_43;
  reg              needCheck0Reg_44;
  reg              needCheck1Reg_44;
  wire             matchResultVec_2_4_valid = needCheck0Reg_44 & data_4_valid;
  wire             matchResultVec_2_24_valid = needCheck1Reg_44 & data_4_valid;
  reg              needCheck0Reg_45;
  reg              needCheck1Reg_45;
  reg              needCheck0Reg_46;
  reg              needCheck1Reg_46;
  wire             matchResultVec_2_6_valid = needCheck0Reg_46 & data_6_valid;
  wire             matchResultVec_2_26_valid = needCheck1Reg_46 & data_6_valid;
  reg              needCheck0Reg_47;
  reg              needCheck1Reg_47;
  reg              needCheck0Reg_48;
  reg              needCheck1Reg_48;
  reg              needCheck0Reg_49;
  reg              needCheck1Reg_49;
  wire             matchResultVec_2_9_valid = needCheck0Reg_49 & data_9_valid;
  wire             matchResultVec_2_29_valid = needCheck1Reg_49 & data_9_valid;
  reg              needCheck0Reg_50;
  reg              needCheck1Reg_50;
  reg              needCheck0Reg_51;
  reg              needCheck1Reg_51;
  wire             matchResultVec_2_11_valid = needCheck0Reg_51 & data_11_valid;
  wire             matchResultVec_2_31_valid = needCheck1Reg_51 & data_11_valid;
  reg              needCheck0Reg_52;
  reg              needCheck1Reg_52;
  reg              needCheck0Reg_53;
  reg              needCheck1Reg_53;
  reg              needCheck0Reg_54;
  reg              needCheck1Reg_54;
  wire             matchResultVec_2_14_valid = needCheck0Reg_54 & data_14_valid;
  wire             matchResultVec_2_34_valid = needCheck1Reg_54 & data_14_valid;
  reg              needCheck0Reg_55;
  reg              needCheck1Reg_55;
  reg              needCheck0Reg_56;
  reg              needCheck1Reg_56;
  wire             matchResultVec_2_16_valid = needCheck0Reg_56 & data_16_valid;
  wire             matchResultVec_2_36_valid = needCheck1Reg_56 & data_16_valid;
  reg              needCheck0Reg_57;
  reg              needCheck1Reg_57;
  reg              needCheck0Reg_58;
  reg              needCheck1Reg_58;
  reg              needCheck0Reg_59;
  reg              needCheck1Reg_59;
  wire             matchResultVec_2_19_valid = needCheck0Reg_59 & data_19_valid;
  wire             matchResultVec_2_39_valid = needCheck1Reg_59 & data_19_valid;
  wire             parallelFwdResult_res_79_valid =
    needCheck0Reg_43 & data_3_valid | matchResultVec_2_4_valid;
  wire             parallelFwdResult_res_80_valid =
    needCheck0Reg_42 & data_2_valid | parallelFwdResult_res_79_valid;
  wire             parallelFwdResult_res_83_valid =
    needCheck0Reg_48 & data_8_valid | matchResultVec_2_9_valid;
  wire             parallelFwdResult_res_84_valid =
    needCheck0Reg_47 & data_7_valid | parallelFwdResult_res_83_valid;
  wire             parallelFwdResult_res_85_valid =
    needCheck0Reg_45 & data_5_valid | matchResultVec_2_6_valid
    | parallelFwdResult_res_84_valid;
  wire             parallelFwdResult_res_88_valid =
    needCheck0Reg_53 & data_13_valid | matchResultVec_2_14_valid;
  wire             parallelFwdResult_res_89_valid =
    needCheck0Reg_52 & data_12_valid | parallelFwdResult_res_88_valid;
  wire             parallelFwdResult_res_92_valid =
    needCheck0Reg_58 & data_18_valid | matchResultVec_2_19_valid;
  wire             parallelFwdResult_res_93_valid =
    needCheck0Reg_57 & data_17_valid | parallelFwdResult_res_92_valid;
  wire             parallelFwdResult_res_94_valid =
    needCheck0Reg_55 & data_15_valid | matchResultVec_2_16_valid
    | parallelFwdResult_res_93_valid;
  wire             parallelFwdResult_res_95_valid =
    needCheck0Reg_50 & data_10_valid | matchResultVec_2_11_valid
    | parallelFwdResult_res_89_valid | parallelFwdResult_res_94_valid;
  wire             parallelFwdResult_res_98_valid =
    needCheck1Reg_43 & data_3_valid | matchResultVec_2_24_valid;
  wire             parallelFwdResult_res_99_valid =
    needCheck1Reg_42 & data_2_valid | parallelFwdResult_res_98_valid;
  wire             parallelFwdResult_res_102_valid =
    needCheck1Reg_48 & data_8_valid | matchResultVec_2_29_valid;
  wire             parallelFwdResult_res_103_valid =
    needCheck1Reg_47 & data_7_valid | parallelFwdResult_res_102_valid;
  wire             parallelFwdResult_res_104_valid =
    needCheck1Reg_45 & data_5_valid | matchResultVec_2_26_valid
    | parallelFwdResult_res_103_valid;
  wire             parallelFwdResult_res_107_valid =
    needCheck1Reg_53 & data_13_valid | matchResultVec_2_34_valid;
  wire             parallelFwdResult_res_108_valid =
    needCheck1Reg_52 & data_12_valid | parallelFwdResult_res_107_valid;
  wire             parallelFwdResult_res_111_valid =
    needCheck1Reg_58 & data_18_valid | matchResultVec_2_39_valid;
  wire             parallelFwdResult_res_112_valid =
    needCheck1Reg_57 & data_17_valid | parallelFwdResult_res_111_valid;
  wire             parallelFwdResult_res_113_valid =
    needCheck1Reg_55 & data_15_valid | matchResultVec_2_36_valid
    | parallelFwdResult_res_112_valid;
  wire             parallelFwdResult_res_114_valid =
    needCheck1Reg_50 & data_10_valid | matchResultVec_2_31_valid
    | parallelFwdResult_res_108_valid | parallelFwdResult_res_113_valid;
  wire             parallelFwdResult_res_115_valid =
    needCheck1Reg_40 & data_0_valid | matchResultVec_2_21_valid
    | parallelFwdResult_res_99_valid | parallelFwdResult_res_104_valid
    | parallelFwdResult_res_114_valid;
  always @(posedge clock) begin
    if (s1_wenVec_r_3_0 & mask_s1_waddr_1_bank_0 == 3'h0)
      data_0_valid <= mask_s1_wdata_1_bank_0;
    else if (s1_wenVec_r_2_0 & mask_s1_waddr_0_bank_0 == 3'h0)
      data_0_valid <= mask_s1_wdata_0_bank_0;
    if (s1_wenVec_r_1_0 & data_s1_waddr_1_bank_0 == 3'h0)
      data_0_data <= data_s1_wdata_1_bank_0;
    else if (s1_wenVec_r_0 & data_s1_waddr_0_bank_0 == 3'h0)
      data_0_data <= data_s1_wdata_0_bank_0;
    if (s1_wenVec_r_3_1 & mask_s1_waddr_1_bank_1 == 3'h0)
      data_1_valid <= mask_s1_wdata_1_bank_1;
    else if (s1_wenVec_r_2_1 & mask_s1_waddr_0_bank_1 == 3'h0)
      data_1_valid <= mask_s1_wdata_0_bank_1;
    if (s1_wenVec_r_1_1 & data_s1_waddr_1_bank_1 == 3'h0)
      data_1_data <= data_s1_wdata_1_bank_1;
    else if (s1_wenVec_r_1 & data_s1_waddr_0_bank_1 == 3'h0)
      data_1_data <= data_s1_wdata_0_bank_1;
    if (s1_wenVec_r_3_2 & mask_s1_waddr_1_bank_2 == 3'h0)
      data_2_valid <= mask_s1_wdata_1_bank_2;
    else if (s1_wenVec_r_2_2 & mask_s1_waddr_0_bank_2 == 3'h0)
      data_2_valid <= mask_s1_wdata_0_bank_2;
    if (s1_wenVec_r_1_2 & data_s1_waddr_1_bank_2 == 3'h0)
      data_2_data <= data_s1_wdata_1_bank_2;
    else if (s1_wenVec_r_2 & data_s1_waddr_0_bank_2 == 3'h0)
      data_2_data <= data_s1_wdata_0_bank_2;
    if (s1_wenVec_r_3_3 & mask_s1_waddr_1_bank_3 == 3'h0)
      data_3_valid <= mask_s1_wdata_1_bank_3;
    else if (s1_wenVec_r_2_3 & mask_s1_waddr_0_bank_3 == 3'h0)
      data_3_valid <= mask_s1_wdata_0_bank_3;
    if (s1_wenVec_r_1_3 & data_s1_waddr_1_bank_3 == 3'h0)
      data_3_data <= data_s1_wdata_1_bank_3;
    else if (s1_wenVec_r_3 & data_s1_waddr_0_bank_3 == 3'h0)
      data_3_data <= data_s1_wdata_0_bank_3;
    if (s1_wenVec_r_3_0 & mask_s1_waddr_1_bank_0 == 3'h1)
      data_4_valid <= mask_s1_wdata_1_bank_0;
    else if (s1_wenVec_r_2_0 & mask_s1_waddr_0_bank_0 == 3'h1)
      data_4_valid <= mask_s1_wdata_0_bank_0;
    if (s1_wenVec_r_1_0 & data_s1_waddr_1_bank_0 == 3'h1)
      data_4_data <= data_s1_wdata_1_bank_0;
    else if (s1_wenVec_r_0 & data_s1_waddr_0_bank_0 == 3'h1)
      data_4_data <= data_s1_wdata_0_bank_0;
    if (s1_wenVec_r_3_1 & mask_s1_waddr_1_bank_1 == 3'h1)
      data_5_valid <= mask_s1_wdata_1_bank_1;
    else if (s1_wenVec_r_2_1 & mask_s1_waddr_0_bank_1 == 3'h1)
      data_5_valid <= mask_s1_wdata_0_bank_1;
    if (s1_wenVec_r_1_1 & data_s1_waddr_1_bank_1 == 3'h1)
      data_5_data <= data_s1_wdata_1_bank_1;
    else if (s1_wenVec_r_1 & data_s1_waddr_0_bank_1 == 3'h1)
      data_5_data <= data_s1_wdata_0_bank_1;
    if (s1_wenVec_r_3_2 & mask_s1_waddr_1_bank_2 == 3'h1)
      data_6_valid <= mask_s1_wdata_1_bank_2;
    else if (s1_wenVec_r_2_2 & mask_s1_waddr_0_bank_2 == 3'h1)
      data_6_valid <= mask_s1_wdata_0_bank_2;
    if (s1_wenVec_r_1_2 & data_s1_waddr_1_bank_2 == 3'h1)
      data_6_data <= data_s1_wdata_1_bank_2;
    else if (s1_wenVec_r_2 & data_s1_waddr_0_bank_2 == 3'h1)
      data_6_data <= data_s1_wdata_0_bank_2;
    if (s1_wenVec_r_3_3 & mask_s1_waddr_1_bank_3 == 3'h1)
      data_7_valid <= mask_s1_wdata_1_bank_3;
    else if (s1_wenVec_r_2_3 & mask_s1_waddr_0_bank_3 == 3'h1)
      data_7_valid <= mask_s1_wdata_0_bank_3;
    if (s1_wenVec_r_1_3 & data_s1_waddr_1_bank_3 == 3'h1)
      data_7_data <= data_s1_wdata_1_bank_3;
    else if (s1_wenVec_r_3 & data_s1_waddr_0_bank_3 == 3'h1)
      data_7_data <= data_s1_wdata_0_bank_3;
    if (s1_wenVec_r_3_0 & mask_s1_waddr_1_bank_0 == 3'h2)
      data_8_valid <= mask_s1_wdata_1_bank_0;
    else if (s1_wenVec_r_2_0 & mask_s1_waddr_0_bank_0 == 3'h2)
      data_8_valid <= mask_s1_wdata_0_bank_0;
    if (s1_wenVec_r_1_0 & data_s1_waddr_1_bank_0 == 3'h2)
      data_8_data <= data_s1_wdata_1_bank_0;
    else if (s1_wenVec_r_0 & data_s1_waddr_0_bank_0 == 3'h2)
      data_8_data <= data_s1_wdata_0_bank_0;
    if (s1_wenVec_r_3_1 & mask_s1_waddr_1_bank_1 == 3'h2)
      data_9_valid <= mask_s1_wdata_1_bank_1;
    else if (s1_wenVec_r_2_1 & mask_s1_waddr_0_bank_1 == 3'h2)
      data_9_valid <= mask_s1_wdata_0_bank_1;
    if (s1_wenVec_r_1_1 & data_s1_waddr_1_bank_1 == 3'h2)
      data_9_data <= data_s1_wdata_1_bank_1;
    else if (s1_wenVec_r_1 & data_s1_waddr_0_bank_1 == 3'h2)
      data_9_data <= data_s1_wdata_0_bank_1;
    if (s1_wenVec_r_3_2 & mask_s1_waddr_1_bank_2 == 3'h2)
      data_10_valid <= mask_s1_wdata_1_bank_2;
    else if (s1_wenVec_r_2_2 & mask_s1_waddr_0_bank_2 == 3'h2)
      data_10_valid <= mask_s1_wdata_0_bank_2;
    if (s1_wenVec_r_1_2 & data_s1_waddr_1_bank_2 == 3'h2)
      data_10_data <= data_s1_wdata_1_bank_2;
    else if (s1_wenVec_r_2 & data_s1_waddr_0_bank_2 == 3'h2)
      data_10_data <= data_s1_wdata_0_bank_2;
    if (s1_wenVec_r_3_3 & mask_s1_waddr_1_bank_3 == 3'h2)
      data_11_valid <= mask_s1_wdata_1_bank_3;
    else if (s1_wenVec_r_2_3 & mask_s1_waddr_0_bank_3 == 3'h2)
      data_11_valid <= mask_s1_wdata_0_bank_3;
    if (s1_wenVec_r_1_3 & data_s1_waddr_1_bank_3 == 3'h2)
      data_11_data <= data_s1_wdata_1_bank_3;
    else if (s1_wenVec_r_3 & data_s1_waddr_0_bank_3 == 3'h2)
      data_11_data <= data_s1_wdata_0_bank_3;
    if (s1_wenVec_r_3_0 & mask_s1_waddr_1_bank_0 == 3'h3)
      data_12_valid <= mask_s1_wdata_1_bank_0;
    else if (s1_wenVec_r_2_0 & mask_s1_waddr_0_bank_0 == 3'h3)
      data_12_valid <= mask_s1_wdata_0_bank_0;
    if (s1_wenVec_r_1_0 & data_s1_waddr_1_bank_0 == 3'h3)
      data_12_data <= data_s1_wdata_1_bank_0;
    else if (s1_wenVec_r_0 & data_s1_waddr_0_bank_0 == 3'h3)
      data_12_data <= data_s1_wdata_0_bank_0;
    if (s1_wenVec_r_3_1 & mask_s1_waddr_1_bank_1 == 3'h3)
      data_13_valid <= mask_s1_wdata_1_bank_1;
    else if (s1_wenVec_r_2_1 & mask_s1_waddr_0_bank_1 == 3'h3)
      data_13_valid <= mask_s1_wdata_0_bank_1;
    if (s1_wenVec_r_1_1 & data_s1_waddr_1_bank_1 == 3'h3)
      data_13_data <= data_s1_wdata_1_bank_1;
    else if (s1_wenVec_r_1 & data_s1_waddr_0_bank_1 == 3'h3)
      data_13_data <= data_s1_wdata_0_bank_1;
    if (s1_wenVec_r_3_2 & mask_s1_waddr_1_bank_2 == 3'h3)
      data_14_valid <= mask_s1_wdata_1_bank_2;
    else if (s1_wenVec_r_2_2 & mask_s1_waddr_0_bank_2 == 3'h3)
      data_14_valid <= mask_s1_wdata_0_bank_2;
    if (s1_wenVec_r_1_2 & data_s1_waddr_1_bank_2 == 3'h3)
      data_14_data <= data_s1_wdata_1_bank_2;
    else if (s1_wenVec_r_2 & data_s1_waddr_0_bank_2 == 3'h3)
      data_14_data <= data_s1_wdata_0_bank_2;
    if (s1_wenVec_r_3_3 & mask_s1_waddr_1_bank_3 == 3'h3)
      data_15_valid <= mask_s1_wdata_1_bank_3;
    else if (s1_wenVec_r_2_3 & mask_s1_waddr_0_bank_3 == 3'h3)
      data_15_valid <= mask_s1_wdata_0_bank_3;
    if (s1_wenVec_r_1_3 & data_s1_waddr_1_bank_3 == 3'h3)
      data_15_data <= data_s1_wdata_1_bank_3;
    else if (s1_wenVec_r_3 & data_s1_waddr_0_bank_3 == 3'h3)
      data_15_data <= data_s1_wdata_0_bank_3;
    if (s1_wenVec_r_3_0 & mask_s1_waddr_1_bank_0 == 3'h4)
      data_16_valid <= mask_s1_wdata_1_bank_0;
    else if (s1_wenVec_r_2_0 & mask_s1_waddr_0_bank_0 == 3'h4)
      data_16_valid <= mask_s1_wdata_0_bank_0;
    if (s1_wenVec_r_1_0 & data_s1_waddr_1_bank_0 == 3'h4)
      data_16_data <= data_s1_wdata_1_bank_0;
    else if (s1_wenVec_r_0 & data_s1_waddr_0_bank_0 == 3'h4)
      data_16_data <= data_s1_wdata_0_bank_0;
    if (s1_wenVec_r_3_1 & mask_s1_waddr_1_bank_1 == 3'h4)
      data_17_valid <= mask_s1_wdata_1_bank_1;
    else if (s1_wenVec_r_2_1 & mask_s1_waddr_0_bank_1 == 3'h4)
      data_17_valid <= mask_s1_wdata_0_bank_1;
    if (s1_wenVec_r_1_1 & data_s1_waddr_1_bank_1 == 3'h4)
      data_17_data <= data_s1_wdata_1_bank_1;
    else if (s1_wenVec_r_1 & data_s1_waddr_0_bank_1 == 3'h4)
      data_17_data <= data_s1_wdata_0_bank_1;
    if (s1_wenVec_r_3_2 & mask_s1_waddr_1_bank_2 == 3'h4)
      data_18_valid <= mask_s1_wdata_1_bank_2;
    else if (s1_wenVec_r_2_2 & mask_s1_waddr_0_bank_2 == 3'h4)
      data_18_valid <= mask_s1_wdata_0_bank_2;
    if (s1_wenVec_r_1_2 & data_s1_waddr_1_bank_2 == 3'h4)
      data_18_data <= data_s1_wdata_1_bank_2;
    else if (s1_wenVec_r_2 & data_s1_waddr_0_bank_2 == 3'h4)
      data_18_data <= data_s1_wdata_0_bank_2;
    if (s1_wenVec_r_3_3 & mask_s1_waddr_1_bank_3 == 3'h4)
      data_19_valid <= mask_s1_wdata_1_bank_3;
    else if (s1_wenVec_r_2_3 & mask_s1_waddr_0_bank_3 == 3'h4)
      data_19_valid <= mask_s1_wdata_0_bank_3;
    if (s1_wenVec_r_1_3 & data_s1_waddr_1_bank_3 == 3'h4)
      data_19_data <= data_s1_wdata_1_bank_3;
    else if (s1_wenVec_r_3 & data_s1_waddr_0_bank_3 == 3'h4)
      data_19_data <= data_s1_wdata_0_bank_3;
    if (s0_wenVec_0) begin
      data_s1_wdata_0_bank_0 <= io_data_wdata_0;
      data_s1_waddr_0_bank_0 <= io_data_waddr_0[4:2];
    end
    if (s0_wenVec_1) begin
      data_s1_wdata_0_bank_1 <= io_data_wdata_0;
      data_s1_waddr_0_bank_1 <= io_data_waddr_0[4:2];
    end
    if (s0_wenVec_2) begin
      data_s1_wdata_0_bank_2 <= io_data_wdata_0;
      data_s1_waddr_0_bank_2 <= io_data_waddr_0[4:2];
    end
    if (s0_wenVec_3) begin
      data_s1_wdata_0_bank_3 <= io_data_wdata_0;
      data_s1_waddr_0_bank_3 <= io_data_waddr_0[4:2];
    end
    if (s0_wenVec_1_0) begin
      data_s1_wdata_1_bank_0 <= io_data_wdata_1;
      data_s1_waddr_1_bank_0 <= io_data_waddr_1[4:2];
    end
    if (s0_wenVec_1_1) begin
      data_s1_wdata_1_bank_1 <= io_data_wdata_1;
      data_s1_waddr_1_bank_1 <= io_data_waddr_1[4:2];
    end
    if (s0_wenVec_1_2) begin
      data_s1_wdata_1_bank_2 <= io_data_wdata_1;
      data_s1_waddr_1_bank_2 <= io_data_waddr_1[4:2];
    end
    if (s0_wenVec_1_3) begin
      data_s1_wdata_1_bank_3 <= io_data_wdata_1;
      data_s1_waddr_1_bank_3 <= io_data_waddr_1[4:2];
    end
    if (s0_wenVec_2_0) begin
      mask_s1_wdata_0_bank_0 <= io_mask_wdata_0;
      mask_s1_waddr_0_bank_0 <= io_mask_waddr_0[4:2];
    end
    if (s0_wenVec_2_1) begin
      mask_s1_wdata_0_bank_1 <= io_mask_wdata_0;
      mask_s1_waddr_0_bank_1 <= io_mask_waddr_0[4:2];
    end
    if (s0_wenVec_2_2) begin
      mask_s1_wdata_0_bank_2 <= io_mask_wdata_0;
      mask_s1_waddr_0_bank_2 <= io_mask_waddr_0[4:2];
    end
    if (s0_wenVec_2_3) begin
      mask_s1_wdata_0_bank_3 <= io_mask_wdata_0;
      mask_s1_waddr_0_bank_3 <= io_mask_waddr_0[4:2];
    end
    if (s0_wenVec_3_0) begin
      mask_s1_wdata_1_bank_0 <= io_mask_wdata_1;
      mask_s1_waddr_1_bank_0 <= io_mask_waddr_1[4:2];
    end
    if (s0_wenVec_3_1) begin
      mask_s1_wdata_1_bank_1 <= io_mask_wdata_1;
      mask_s1_waddr_1_bank_1 <= io_mask_waddr_1[4:2];
    end
    if (s0_wenVec_3_2) begin
      mask_s1_wdata_1_bank_2 <= io_mask_wdata_1;
      mask_s1_waddr_1_bank_2 <= io_mask_waddr_1[4:2];
    end
    if (s0_wenVec_3_3) begin
      mask_s1_wdata_1_bank_3 <= io_mask_wdata_1;
      mask_s1_waddr_1_bank_3 <= io_mask_waddr_1[4:2];
    end
    needCheck0Reg <= io_needForward_0_0[0];
    needCheck1Reg <= io_needForward_0_1[0];
    needCheck0Reg_1 <= io_needForward_0_0[1];
    needCheck1Reg_1 <= io_needForward_0_1[1];
    needCheck0Reg_2 <= io_needForward_0_0[2];
    needCheck1Reg_2 <= io_needForward_0_1[2];
    needCheck0Reg_3 <= io_needForward_0_0[3];
    needCheck1Reg_3 <= io_needForward_0_1[3];
    needCheck0Reg_4 <= io_needForward_0_0[4];
    needCheck1Reg_4 <= io_needForward_0_1[4];
    needCheck0Reg_5 <= io_needForward_0_0[5];
    needCheck1Reg_5 <= io_needForward_0_1[5];
    needCheck0Reg_6 <= io_needForward_0_0[6];
    needCheck1Reg_6 <= io_needForward_0_1[6];
    needCheck0Reg_7 <= io_needForward_0_0[7];
    needCheck1Reg_7 <= io_needForward_0_1[7];
    needCheck0Reg_8 <= io_needForward_0_0[8];
    needCheck1Reg_8 <= io_needForward_0_1[8];
    needCheck0Reg_9 <= io_needForward_0_0[9];
    needCheck1Reg_9 <= io_needForward_0_1[9];
    needCheck0Reg_10 <= io_needForward_0_0[10];
    needCheck1Reg_10 <= io_needForward_0_1[10];
    needCheck0Reg_11 <= io_needForward_0_0[11];
    needCheck1Reg_11 <= io_needForward_0_1[11];
    needCheck0Reg_12 <= io_needForward_0_0[12];
    needCheck1Reg_12 <= io_needForward_0_1[12];
    needCheck0Reg_13 <= io_needForward_0_0[13];
    needCheck1Reg_13 <= io_needForward_0_1[13];
    needCheck0Reg_14 <= io_needForward_0_0[14];
    needCheck1Reg_14 <= io_needForward_0_1[14];
    needCheck0Reg_15 <= io_needForward_0_0[15];
    needCheck1Reg_15 <= io_needForward_0_1[15];
    needCheck0Reg_16 <= io_needForward_0_0[16];
    needCheck1Reg_16 <= io_needForward_0_1[16];
    needCheck0Reg_17 <= io_needForward_0_0[17];
    needCheck1Reg_17 <= io_needForward_0_1[17];
    needCheck0Reg_18 <= io_needForward_0_0[18];
    needCheck1Reg_18 <= io_needForward_0_1[18];
    needCheck0Reg_19 <= io_needForward_0_0[19];
    needCheck1Reg_19 <= io_needForward_0_1[19];
    needCheck0Reg_20 <= io_needForward_1_0[0];
    needCheck1Reg_20 <= io_needForward_1_1[0];
    needCheck0Reg_21 <= io_needForward_1_0[1];
    needCheck1Reg_21 <= io_needForward_1_1[1];
    needCheck0Reg_22 <= io_needForward_1_0[2];
    needCheck1Reg_22 <= io_needForward_1_1[2];
    needCheck0Reg_23 <= io_needForward_1_0[3];
    needCheck1Reg_23 <= io_needForward_1_1[3];
    needCheck0Reg_24 <= io_needForward_1_0[4];
    needCheck1Reg_24 <= io_needForward_1_1[4];
    needCheck0Reg_25 <= io_needForward_1_0[5];
    needCheck1Reg_25 <= io_needForward_1_1[5];
    needCheck0Reg_26 <= io_needForward_1_0[6];
    needCheck1Reg_26 <= io_needForward_1_1[6];
    needCheck0Reg_27 <= io_needForward_1_0[7];
    needCheck1Reg_27 <= io_needForward_1_1[7];
    needCheck0Reg_28 <= io_needForward_1_0[8];
    needCheck1Reg_28 <= io_needForward_1_1[8];
    needCheck0Reg_29 <= io_needForward_1_0[9];
    needCheck1Reg_29 <= io_needForward_1_1[9];
    needCheck0Reg_30 <= io_needForward_1_0[10];
    needCheck1Reg_30 <= io_needForward_1_1[10];
    needCheck0Reg_31 <= io_needForward_1_0[11];
    needCheck1Reg_31 <= io_needForward_1_1[11];
    needCheck0Reg_32 <= io_needForward_1_0[12];
    needCheck1Reg_32 <= io_needForward_1_1[12];
    needCheck0Reg_33 <= io_needForward_1_0[13];
    needCheck1Reg_33 <= io_needForward_1_1[13];
    needCheck0Reg_34 <= io_needForward_1_0[14];
    needCheck1Reg_34 <= io_needForward_1_1[14];
    needCheck0Reg_35 <= io_needForward_1_0[15];
    needCheck1Reg_35 <= io_needForward_1_1[15];
    needCheck0Reg_36 <= io_needForward_1_0[16];
    needCheck1Reg_36 <= io_needForward_1_1[16];
    needCheck0Reg_37 <= io_needForward_1_0[17];
    needCheck1Reg_37 <= io_needForward_1_1[17];
    needCheck0Reg_38 <= io_needForward_1_0[18];
    needCheck1Reg_38 <= io_needForward_1_1[18];
    needCheck0Reg_39 <= io_needForward_1_0[19];
    needCheck1Reg_39 <= io_needForward_1_1[19];
    needCheck0Reg_40 <= io_needForward_2_0[0];
    needCheck1Reg_40 <= io_needForward_2_1[0];
    needCheck0Reg_41 <= io_needForward_2_0[1];
    needCheck1Reg_41 <= io_needForward_2_1[1];
    needCheck0Reg_42 <= io_needForward_2_0[2];
    needCheck1Reg_42 <= io_needForward_2_1[2];
    needCheck0Reg_43 <= io_needForward_2_0[3];
    needCheck1Reg_43 <= io_needForward_2_1[3];
    needCheck0Reg_44 <= io_needForward_2_0[4];
    needCheck1Reg_44 <= io_needForward_2_1[4];
    needCheck0Reg_45 <= io_needForward_2_0[5];
    needCheck1Reg_45 <= io_needForward_2_1[5];
    needCheck0Reg_46 <= io_needForward_2_0[6];
    needCheck1Reg_46 <= io_needForward_2_1[6];
    needCheck0Reg_47 <= io_needForward_2_0[7];
    needCheck1Reg_47 <= io_needForward_2_1[7];
    needCheck0Reg_48 <= io_needForward_2_0[8];
    needCheck1Reg_48 <= io_needForward_2_1[8];
    needCheck0Reg_49 <= io_needForward_2_0[9];
    needCheck1Reg_49 <= io_needForward_2_1[9];
    needCheck0Reg_50 <= io_needForward_2_0[10];
    needCheck1Reg_50 <= io_needForward_2_1[10];
    needCheck0Reg_51 <= io_needForward_2_0[11];
    needCheck1Reg_51 <= io_needForward_2_1[11];
    needCheck0Reg_52 <= io_needForward_2_0[12];
    needCheck1Reg_52 <= io_needForward_2_1[12];
    needCheck0Reg_53 <= io_needForward_2_0[13];
    needCheck1Reg_53 <= io_needForward_2_1[13];
    needCheck0Reg_54 <= io_needForward_2_0[14];
    needCheck1Reg_54 <= io_needForward_2_1[14];
    needCheck0Reg_55 <= io_needForward_2_0[15];
    needCheck1Reg_55 <= io_needForward_2_1[15];
    needCheck0Reg_56 <= io_needForward_2_0[16];
    needCheck1Reg_56 <= io_needForward_2_1[16];
    needCheck0Reg_57 <= io_needForward_2_0[17];
    needCheck1Reg_57 <= io_needForward_2_1[17];
    needCheck0Reg_58 <= io_needForward_2_0[18];
    needCheck1Reg_58 <= io_needForward_2_1[18];
    needCheck0Reg_59 <= io_needForward_2_0[19];
    needCheck1Reg_59 <= io_needForward_2_1[19];
  end // always @(posedge)
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      s1_wenVec_r_0 <= 1'h0;
      s1_wenVec_r_1 <= 1'h0;
      s1_wenVec_r_2 <= 1'h0;
      s1_wenVec_r_3 <= 1'h0;
      s1_wenVec_r_1_0 <= 1'h0;
      s1_wenVec_r_1_1 <= 1'h0;
      s1_wenVec_r_1_2 <= 1'h0;
      s1_wenVec_r_1_3 <= 1'h0;
      s1_wenVec_r_2_0 <= 1'h0;
      s1_wenVec_r_2_1 <= 1'h0;
      s1_wenVec_r_2_2 <= 1'h0;
      s1_wenVec_r_2_3 <= 1'h0;
      s1_wenVec_r_3_0 <= 1'h0;
      s1_wenVec_r_3_1 <= 1'h0;
      s1_wenVec_r_3_2 <= 1'h0;
      s1_wenVec_r_3_3 <= 1'h0;
      io_rdata_0_next_r <= 5'h0;
      io_rdata_1_next_r <= 5'h0;
    end
    else begin
      if (~({s0_wenVec_3,
             s0_wenVec_2,
             s0_wenVec_1,
             s0_wenVec_0} == {s1_wenVec_r_3,
                              s1_wenVec_r_2,
                              s1_wenVec_r_1,
                              s1_wenVec_r_0})) begin
        s1_wenVec_r_0 <= s0_wenVec_0;
        s1_wenVec_r_1 <= s0_wenVec_1;
        s1_wenVec_r_2 <= s0_wenVec_2;
        s1_wenVec_r_3 <= s0_wenVec_3;
      end
      if (~({s0_wenVec_1_3,
             s0_wenVec_1_2,
             s0_wenVec_1_1,
             s0_wenVec_1_0} == {s1_wenVec_r_1_3,
                                s1_wenVec_r_1_2,
                                s1_wenVec_r_1_1,
                                s1_wenVec_r_1_0})) begin
        s1_wenVec_r_1_0 <= s0_wenVec_1_0;
        s1_wenVec_r_1_1 <= s0_wenVec_1_1;
        s1_wenVec_r_1_2 <= s0_wenVec_1_2;
        s1_wenVec_r_1_3 <= s0_wenVec_1_3;
      end
      if (~({s0_wenVec_2_3,
             s0_wenVec_2_2,
             s0_wenVec_2_1,
             s0_wenVec_2_0} == {s1_wenVec_r_2_3,
                                s1_wenVec_r_2_2,
                                s1_wenVec_r_2_1,
                                s1_wenVec_r_2_0})) begin
        s1_wenVec_r_2_0 <= s0_wenVec_2_0;
        s1_wenVec_r_2_1 <= s0_wenVec_2_1;
        s1_wenVec_r_2_2 <= s0_wenVec_2_2;
        s1_wenVec_r_2_3 <= s0_wenVec_2_3;
      end
      if (~({s0_wenVec_3_3,
             s0_wenVec_3_2,
             s0_wenVec_3_1,
             s0_wenVec_3_0} == {s1_wenVec_r_3_3,
                                s1_wenVec_r_3_2,
                                s1_wenVec_r_3_1,
                                s1_wenVec_r_3_0})) begin
        s1_wenVec_r_3_0 <= s0_wenVec_3_0;
        s1_wenVec_r_3_1 <= s0_wenVec_3_1;
        s1_wenVec_r_3_2 <= s0_wenVec_3_2;
        s1_wenVec_r_3_3 <= s0_wenVec_3_3;
      end
      if (~(io_raddr_0 == io_rdata_0_next_r))
        io_rdata_0_next_r <= io_raddr_0;
      if (~(io_raddr_1 == io_rdata_1_next_r))
        io_rdata_1_next_r <= io_raddr_1;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:13];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [3:0] i = 4'h0; i < 4'hE; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        data_0_valid = _RANDOM[4'h0][0];
        data_0_data = _RANDOM[4'h0][8:1];
        data_1_valid = _RANDOM[4'h0][9];
        data_1_data = _RANDOM[4'h0][17:10];
        data_2_valid = _RANDOM[4'h0][18];
        data_2_data = _RANDOM[4'h0][26:19];
        data_3_valid = _RANDOM[4'h0][27];
        data_3_data = {_RANDOM[4'h0][31:28], _RANDOM[4'h1][3:0]};
        data_4_valid = _RANDOM[4'h1][4];
        data_4_data = _RANDOM[4'h1][12:5];
        data_5_valid = _RANDOM[4'h1][13];
        data_5_data = _RANDOM[4'h1][21:14];
        data_6_valid = _RANDOM[4'h1][22];
        data_6_data = _RANDOM[4'h1][30:23];
        data_7_valid = _RANDOM[4'h1][31];
        data_7_data = _RANDOM[4'h2][7:0];
        data_8_valid = _RANDOM[4'h2][8];
        data_8_data = _RANDOM[4'h2][16:9];
        data_9_valid = _RANDOM[4'h2][17];
        data_9_data = _RANDOM[4'h2][25:18];
        data_10_valid = _RANDOM[4'h2][26];
        data_10_data = {_RANDOM[4'h2][31:27], _RANDOM[4'h3][2:0]};
        data_11_valid = _RANDOM[4'h3][3];
        data_11_data = _RANDOM[4'h3][11:4];
        data_12_valid = _RANDOM[4'h3][12];
        data_12_data = _RANDOM[4'h3][20:13];
        data_13_valid = _RANDOM[4'h3][21];
        data_13_data = _RANDOM[4'h3][29:22];
        data_14_valid = _RANDOM[4'h3][30];
        data_14_data = {_RANDOM[4'h3][31], _RANDOM[4'h4][6:0]};
        data_15_valid = _RANDOM[4'h4][7];
        data_15_data = _RANDOM[4'h4][15:8];
        data_16_valid = _RANDOM[4'h4][16];
        data_16_data = _RANDOM[4'h4][24:17];
        data_17_valid = _RANDOM[4'h4][25];
        data_17_data = {_RANDOM[4'h4][31:26], _RANDOM[4'h5][1:0]};
        data_18_valid = _RANDOM[4'h5][2];
        data_18_data = _RANDOM[4'h5][10:3];
        data_19_valid = _RANDOM[4'h5][11];
        data_19_data = _RANDOM[4'h5][19:12];
        s1_wenVec_r_0 = _RANDOM[4'h5][20];
        s1_wenVec_r_1 = _RANDOM[4'h5][21];
        s1_wenVec_r_2 = _RANDOM[4'h5][22];
        s1_wenVec_r_3 = _RANDOM[4'h5][23];
        data_s1_wdata_0_bank_0 = _RANDOM[4'h5][31:24];
        data_s1_waddr_0_bank_0 = _RANDOM[4'h6][2:0];
        data_s1_wdata_0_bank_1 = _RANDOM[4'h6][10:3];
        data_s1_waddr_0_bank_1 = _RANDOM[4'h6][13:11];
        data_s1_wdata_0_bank_2 = _RANDOM[4'h6][21:14];
        data_s1_waddr_0_bank_2 = _RANDOM[4'h6][24:22];
        data_s1_wdata_0_bank_3 = {_RANDOM[4'h6][31:25], _RANDOM[4'h7][0]};
        data_s1_waddr_0_bank_3 = _RANDOM[4'h7][3:1];
        s1_wenVec_r_1_0 = _RANDOM[4'h7][4];
        s1_wenVec_r_1_1 = _RANDOM[4'h7][5];
        s1_wenVec_r_1_2 = _RANDOM[4'h7][6];
        s1_wenVec_r_1_3 = _RANDOM[4'h7][7];
        data_s1_wdata_1_bank_0 = _RANDOM[4'h7][15:8];
        data_s1_waddr_1_bank_0 = _RANDOM[4'h7][18:16];
        data_s1_wdata_1_bank_1 = _RANDOM[4'h7][26:19];
        data_s1_waddr_1_bank_1 = _RANDOM[4'h7][29:27];
        data_s1_wdata_1_bank_2 = {_RANDOM[4'h7][31:30], _RANDOM[4'h8][5:0]};
        data_s1_waddr_1_bank_2 = _RANDOM[4'h8][8:6];
        data_s1_wdata_1_bank_3 = _RANDOM[4'h8][16:9];
        data_s1_waddr_1_bank_3 = _RANDOM[4'h8][19:17];
        s1_wenVec_r_2_0 = _RANDOM[4'h8][20];
        s1_wenVec_r_2_1 = _RANDOM[4'h8][21];
        s1_wenVec_r_2_2 = _RANDOM[4'h8][22];
        s1_wenVec_r_2_3 = _RANDOM[4'h8][23];
        mask_s1_wdata_0_bank_0 = _RANDOM[4'h8][24];
        mask_s1_waddr_0_bank_0 = _RANDOM[4'h8][27:25];
        mask_s1_wdata_0_bank_1 = _RANDOM[4'h8][28];
        mask_s1_waddr_0_bank_1 = _RANDOM[4'h8][31:29];
        mask_s1_wdata_0_bank_2 = _RANDOM[4'h9][0];
        mask_s1_waddr_0_bank_2 = _RANDOM[4'h9][3:1];
        mask_s1_wdata_0_bank_3 = _RANDOM[4'h9][4];
        mask_s1_waddr_0_bank_3 = _RANDOM[4'h9][7:5];
        s1_wenVec_r_3_0 = _RANDOM[4'h9][8];
        s1_wenVec_r_3_1 = _RANDOM[4'h9][9];
        s1_wenVec_r_3_2 = _RANDOM[4'h9][10];
        s1_wenVec_r_3_3 = _RANDOM[4'h9][11];
        mask_s1_wdata_1_bank_0 = _RANDOM[4'h9][12];
        mask_s1_waddr_1_bank_0 = _RANDOM[4'h9][15:13];
        mask_s1_wdata_1_bank_1 = _RANDOM[4'h9][16];
        mask_s1_waddr_1_bank_1 = _RANDOM[4'h9][19:17];
        mask_s1_wdata_1_bank_2 = _RANDOM[4'h9][20];
        mask_s1_waddr_1_bank_2 = _RANDOM[4'h9][23:21];
        mask_s1_wdata_1_bank_3 = _RANDOM[4'h9][24];
        mask_s1_waddr_1_bank_3 = _RANDOM[4'h9][27:25];
        io_rdata_0_next_r = {_RANDOM[4'h9][31:28], _RANDOM[4'hA][0]};
        io_rdata_1_next_r = _RANDOM[4'hA][5:1];
        needCheck0Reg = _RANDOM[4'hA][6];
        needCheck1Reg = _RANDOM[4'hA][7];
        needCheck0Reg_1 = _RANDOM[4'hA][8];
        needCheck1Reg_1 = _RANDOM[4'hA][9];
        needCheck0Reg_2 = _RANDOM[4'hA][10];
        needCheck1Reg_2 = _RANDOM[4'hA][11];
        needCheck0Reg_3 = _RANDOM[4'hA][12];
        needCheck1Reg_3 = _RANDOM[4'hA][13];
        needCheck0Reg_4 = _RANDOM[4'hA][14];
        needCheck1Reg_4 = _RANDOM[4'hA][15];
        needCheck0Reg_5 = _RANDOM[4'hA][16];
        needCheck1Reg_5 = _RANDOM[4'hA][17];
        needCheck0Reg_6 = _RANDOM[4'hA][18];
        needCheck1Reg_6 = _RANDOM[4'hA][19];
        needCheck0Reg_7 = _RANDOM[4'hA][20];
        needCheck1Reg_7 = _RANDOM[4'hA][21];
        needCheck0Reg_8 = _RANDOM[4'hA][22];
        needCheck1Reg_8 = _RANDOM[4'hA][23];
        needCheck0Reg_9 = _RANDOM[4'hA][24];
        needCheck1Reg_9 = _RANDOM[4'hA][25];
        needCheck0Reg_10 = _RANDOM[4'hA][26];
        needCheck1Reg_10 = _RANDOM[4'hA][27];
        needCheck0Reg_11 = _RANDOM[4'hA][28];
        needCheck1Reg_11 = _RANDOM[4'hA][29];
        needCheck0Reg_12 = _RANDOM[4'hA][30];
        needCheck1Reg_12 = _RANDOM[4'hA][31];
        needCheck0Reg_13 = _RANDOM[4'hB][0];
        needCheck1Reg_13 = _RANDOM[4'hB][1];
        needCheck0Reg_14 = _RANDOM[4'hB][2];
        needCheck1Reg_14 = _RANDOM[4'hB][3];
        needCheck0Reg_15 = _RANDOM[4'hB][4];
        needCheck1Reg_15 = _RANDOM[4'hB][5];
        needCheck0Reg_16 = _RANDOM[4'hB][6];
        needCheck1Reg_16 = _RANDOM[4'hB][7];
        needCheck0Reg_17 = _RANDOM[4'hB][8];
        needCheck1Reg_17 = _RANDOM[4'hB][9];
        needCheck0Reg_18 = _RANDOM[4'hB][10];
        needCheck1Reg_18 = _RANDOM[4'hB][11];
        needCheck0Reg_19 = _RANDOM[4'hB][12];
        needCheck1Reg_19 = _RANDOM[4'hB][13];
        needCheck0Reg_20 = _RANDOM[4'hB][14];
        needCheck1Reg_20 = _RANDOM[4'hB][15];
        needCheck0Reg_21 = _RANDOM[4'hB][16];
        needCheck1Reg_21 = _RANDOM[4'hB][17];
        needCheck0Reg_22 = _RANDOM[4'hB][18];
        needCheck1Reg_22 = _RANDOM[4'hB][19];
        needCheck0Reg_23 = _RANDOM[4'hB][20];
        needCheck1Reg_23 = _RANDOM[4'hB][21];
        needCheck0Reg_24 = _RANDOM[4'hB][22];
        needCheck1Reg_24 = _RANDOM[4'hB][23];
        needCheck0Reg_25 = _RANDOM[4'hB][24];
        needCheck1Reg_25 = _RANDOM[4'hB][25];
        needCheck0Reg_26 = _RANDOM[4'hB][26];
        needCheck1Reg_26 = _RANDOM[4'hB][27];
        needCheck0Reg_27 = _RANDOM[4'hB][28];
        needCheck1Reg_27 = _RANDOM[4'hB][29];
        needCheck0Reg_28 = _RANDOM[4'hB][30];
        needCheck1Reg_28 = _RANDOM[4'hB][31];
        needCheck0Reg_29 = _RANDOM[4'hC][0];
        needCheck1Reg_29 = _RANDOM[4'hC][1];
        needCheck0Reg_30 = _RANDOM[4'hC][2];
        needCheck1Reg_30 = _RANDOM[4'hC][3];
        needCheck0Reg_31 = _RANDOM[4'hC][4];
        needCheck1Reg_31 = _RANDOM[4'hC][5];
        needCheck0Reg_32 = _RANDOM[4'hC][6];
        needCheck1Reg_32 = _RANDOM[4'hC][7];
        needCheck0Reg_33 = _RANDOM[4'hC][8];
        needCheck1Reg_33 = _RANDOM[4'hC][9];
        needCheck0Reg_34 = _RANDOM[4'hC][10];
        needCheck1Reg_34 = _RANDOM[4'hC][11];
        needCheck0Reg_35 = _RANDOM[4'hC][12];
        needCheck1Reg_35 = _RANDOM[4'hC][13];
        needCheck0Reg_36 = _RANDOM[4'hC][14];
        needCheck1Reg_36 = _RANDOM[4'hC][15];
        needCheck0Reg_37 = _RANDOM[4'hC][16];
        needCheck1Reg_37 = _RANDOM[4'hC][17];
        needCheck0Reg_38 = _RANDOM[4'hC][18];
        needCheck1Reg_38 = _RANDOM[4'hC][19];
        needCheck0Reg_39 = _RANDOM[4'hC][20];
        needCheck1Reg_39 = _RANDOM[4'hC][21];
        needCheck0Reg_40 = _RANDOM[4'hC][22];
        needCheck1Reg_40 = _RANDOM[4'hC][23];
        needCheck0Reg_41 = _RANDOM[4'hC][24];
        needCheck1Reg_41 = _RANDOM[4'hC][25];
        needCheck0Reg_42 = _RANDOM[4'hC][26];
        needCheck1Reg_42 = _RANDOM[4'hC][27];
        needCheck0Reg_43 = _RANDOM[4'hC][28];
        needCheck1Reg_43 = _RANDOM[4'hC][29];
        needCheck0Reg_44 = _RANDOM[4'hC][30];
        needCheck1Reg_44 = _RANDOM[4'hC][31];
        needCheck0Reg_45 = _RANDOM[4'hD][0];
        needCheck1Reg_45 = _RANDOM[4'hD][1];
        needCheck0Reg_46 = _RANDOM[4'hD][2];
        needCheck1Reg_46 = _RANDOM[4'hD][3];
        needCheck0Reg_47 = _RANDOM[4'hD][4];
        needCheck1Reg_47 = _RANDOM[4'hD][5];
        needCheck0Reg_48 = _RANDOM[4'hD][6];
        needCheck1Reg_48 = _RANDOM[4'hD][7];
        needCheck0Reg_49 = _RANDOM[4'hD][8];
        needCheck1Reg_49 = _RANDOM[4'hD][9];
        needCheck0Reg_50 = _RANDOM[4'hD][10];
        needCheck1Reg_50 = _RANDOM[4'hD][11];
        needCheck0Reg_51 = _RANDOM[4'hD][12];
        needCheck1Reg_51 = _RANDOM[4'hD][13];
        needCheck0Reg_52 = _RANDOM[4'hD][14];
        needCheck1Reg_52 = _RANDOM[4'hD][15];
        needCheck0Reg_53 = _RANDOM[4'hD][16];
        needCheck1Reg_53 = _RANDOM[4'hD][17];
        needCheck0Reg_54 = _RANDOM[4'hD][18];
        needCheck1Reg_54 = _RANDOM[4'hD][19];
        needCheck0Reg_55 = _RANDOM[4'hD][20];
        needCheck1Reg_55 = _RANDOM[4'hD][21];
        needCheck0Reg_56 = _RANDOM[4'hD][22];
        needCheck1Reg_56 = _RANDOM[4'hD][23];
        needCheck0Reg_57 = _RANDOM[4'hD][24];
        needCheck1Reg_57 = _RANDOM[4'hD][25];
        needCheck0Reg_58 = _RANDOM[4'hD][26];
        needCheck1Reg_58 = _RANDOM[4'hD][27];
        needCheck0Reg_59 = _RANDOM[4'hD][28];
        needCheck1Reg_59 = _RANDOM[4'hD][29];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        s1_wenVec_r_0 = 1'h0;
        s1_wenVec_r_1 = 1'h0;
        s1_wenVec_r_2 = 1'h0;
        s1_wenVec_r_3 = 1'h0;
        s1_wenVec_r_1_0 = 1'h0;
        s1_wenVec_r_1_1 = 1'h0;
        s1_wenVec_r_1_2 = 1'h0;
        s1_wenVec_r_1_3 = 1'h0;
        s1_wenVec_r_2_0 = 1'h0;
        s1_wenVec_r_2_1 = 1'h0;
        s1_wenVec_r_2_2 = 1'h0;
        s1_wenVec_r_2_3 = 1'h0;
        s1_wenVec_r_3_0 = 1'h0;
        s1_wenVec_r_3_1 = 1'h0;
        s1_wenVec_r_3_2 = 1'h0;
        s1_wenVec_r_3_3 = 1'h0;
        io_rdata_0_next_r = 5'h0;
        io_rdata_1_next_r = 5'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_rdata_0_valid = _GEN[io_rdata_0_next_r];
  assign io_rdata_0_data = _GEN_0[io_rdata_0_next_r];
  assign io_rdata_1_valid = _GEN[io_rdata_1_next_r];
  assign io_rdata_1_data = _GEN_0[io_rdata_1_next_r];
  assign io_forwardValid_0 =
    needCheck0Reg & data_0_valid | matchResultVec_1_valid | parallelFwdResult_res_2_valid
    | parallelFwdResult_res_7_valid | parallelFwdResult_res_17_valid
    | parallelFwdResult_res_37_valid;
  assign io_forwardValid_1 =
    needCheck0Reg_20 & data_0_valid | matchResultVec_1_1_valid
    | parallelFwdResult_res_41_valid | parallelFwdResult_res_46_valid
    | parallelFwdResult_res_56_valid | parallelFwdResult_res_76_valid;
  assign io_forwardValid_2 =
    needCheck0Reg_40 & data_0_valid | matchResultVec_2_1_valid
    | parallelFwdResult_res_80_valid | parallelFwdResult_res_85_valid
    | parallelFwdResult_res_95_valid | parallelFwdResult_res_115_valid;
  assign io_forwardData_0 =
    parallelFwdResult_res_37_valid
      ? (parallelFwdResult_res_36_valid
           ? (parallelFwdResult_res_35_valid
                ? (parallelFwdResult_res_34_valid
                     ? (parallelFwdResult_res_33_valid
                          ? (matchResultVec_39_valid ? data_19_data : data_18_data)
                          : data_17_data)
                     : matchResultVec_36_valid ? data_16_data : data_15_data)
                : parallelFwdResult_res_30_valid
                    ? (parallelFwdResult_res_29_valid
                         ? (matchResultVec_34_valid ? data_14_data : data_13_data)
                         : data_12_data)
                    : matchResultVec_31_valid ? data_11_data : data_10_data)
           : parallelFwdResult_res_26_valid
               ? (parallelFwdResult_res_25_valid
                    ? (parallelFwdResult_res_24_valid
                         ? (matchResultVec_29_valid ? data_9_data : data_8_data)
                         : data_7_data)
                    : matchResultVec_26_valid ? data_6_data : data_5_data)
               : parallelFwdResult_res_21_valid
                   ? (parallelFwdResult_res_20_valid
                        ? (matchResultVec_24_valid ? data_4_data : data_3_data)
                        : data_2_data)
                   : matchResultVec_21_valid ? data_1_data : data_0_data)
      : parallelFwdResult_res_17_valid
          ? (parallelFwdResult_res_16_valid
               ? (parallelFwdResult_res_15_valid
                    ? (parallelFwdResult_res_14_valid
                         ? (matchResultVec_19_valid ? data_19_data : data_18_data)
                         : data_17_data)
                    : matchResultVec_16_valid ? data_16_data : data_15_data)
               : parallelFwdResult_res_11_valid
                   ? (parallelFwdResult_res_10_valid
                        ? (matchResultVec_14_valid ? data_14_data : data_13_data)
                        : data_12_data)
                   : matchResultVec_11_valid ? data_11_data : data_10_data)
          : parallelFwdResult_res_7_valid
              ? (parallelFwdResult_res_6_valid
                   ? (parallelFwdResult_res_5_valid
                        ? (matchResultVec_9_valid ? data_9_data : data_8_data)
                        : data_7_data)
                   : matchResultVec_6_valid ? data_6_data : data_5_data)
              : parallelFwdResult_res_2_valid
                  ? (parallelFwdResult_res_1_valid
                       ? (matchResultVec_4_valid ? data_4_data : data_3_data)
                       : data_2_data)
                  : matchResultVec_1_valid ? data_1_data : data_0_data;
  assign io_forwardData_1 =
    parallelFwdResult_res_76_valid
      ? (parallelFwdResult_res_75_valid
           ? (parallelFwdResult_res_74_valid
                ? (parallelFwdResult_res_73_valid
                     ? (parallelFwdResult_res_72_valid
                          ? (matchResultVec_1_39_valid ? data_19_data : data_18_data)
                          : data_17_data)
                     : matchResultVec_1_36_valid ? data_16_data : data_15_data)
                : parallelFwdResult_res_69_valid
                    ? (parallelFwdResult_res_68_valid
                         ? (matchResultVec_1_34_valid ? data_14_data : data_13_data)
                         : data_12_data)
                    : matchResultVec_1_31_valid ? data_11_data : data_10_data)
           : parallelFwdResult_res_65_valid
               ? (parallelFwdResult_res_64_valid
                    ? (parallelFwdResult_res_63_valid
                         ? (matchResultVec_1_29_valid ? data_9_data : data_8_data)
                         : data_7_data)
                    : matchResultVec_1_26_valid ? data_6_data : data_5_data)
               : parallelFwdResult_res_60_valid
                   ? (parallelFwdResult_res_59_valid
                        ? (matchResultVec_1_24_valid ? data_4_data : data_3_data)
                        : data_2_data)
                   : matchResultVec_1_21_valid ? data_1_data : data_0_data)
      : parallelFwdResult_res_56_valid
          ? (parallelFwdResult_res_55_valid
               ? (parallelFwdResult_res_54_valid
                    ? (parallelFwdResult_res_53_valid
                         ? (matchResultVec_1_19_valid ? data_19_data : data_18_data)
                         : data_17_data)
                    : matchResultVec_1_16_valid ? data_16_data : data_15_data)
               : parallelFwdResult_res_50_valid
                   ? (parallelFwdResult_res_49_valid
                        ? (matchResultVec_1_14_valid ? data_14_data : data_13_data)
                        : data_12_data)
                   : matchResultVec_1_11_valid ? data_11_data : data_10_data)
          : parallelFwdResult_res_46_valid
              ? (parallelFwdResult_res_45_valid
                   ? (parallelFwdResult_res_44_valid
                        ? (matchResultVec_1_9_valid ? data_9_data : data_8_data)
                        : data_7_data)
                   : matchResultVec_1_6_valid ? data_6_data : data_5_data)
              : parallelFwdResult_res_41_valid
                  ? (parallelFwdResult_res_40_valid
                       ? (matchResultVec_1_4_valid ? data_4_data : data_3_data)
                       : data_2_data)
                  : matchResultVec_1_1_valid ? data_1_data : data_0_data;
  assign io_forwardData_2 =
    parallelFwdResult_res_115_valid
      ? (parallelFwdResult_res_114_valid
           ? (parallelFwdResult_res_113_valid
                ? (parallelFwdResult_res_112_valid
                     ? (parallelFwdResult_res_111_valid
                          ? (matchResultVec_2_39_valid ? data_19_data : data_18_data)
                          : data_17_data)
                     : matchResultVec_2_36_valid ? data_16_data : data_15_data)
                : parallelFwdResult_res_108_valid
                    ? (parallelFwdResult_res_107_valid
                         ? (matchResultVec_2_34_valid ? data_14_data : data_13_data)
                         : data_12_data)
                    : matchResultVec_2_31_valid ? data_11_data : data_10_data)
           : parallelFwdResult_res_104_valid
               ? (parallelFwdResult_res_103_valid
                    ? (parallelFwdResult_res_102_valid
                         ? (matchResultVec_2_29_valid ? data_9_data : data_8_data)
                         : data_7_data)
                    : matchResultVec_2_26_valid ? data_6_data : data_5_data)
               : parallelFwdResult_res_99_valid
                   ? (parallelFwdResult_res_98_valid
                        ? (matchResultVec_2_24_valid ? data_4_data : data_3_data)
                        : data_2_data)
                   : matchResultVec_2_21_valid ? data_1_data : data_0_data)
      : parallelFwdResult_res_95_valid
          ? (parallelFwdResult_res_94_valid
               ? (parallelFwdResult_res_93_valid
                    ? (parallelFwdResult_res_92_valid
                         ? (matchResultVec_2_19_valid ? data_19_data : data_18_data)
                         : data_17_data)
                    : matchResultVec_2_16_valid ? data_16_data : data_15_data)
               : parallelFwdResult_res_89_valid
                   ? (parallelFwdResult_res_88_valid
                        ? (matchResultVec_2_14_valid ? data_14_data : data_13_data)
                        : data_12_data)
                   : matchResultVec_2_11_valid ? data_11_data : data_10_data)
          : parallelFwdResult_res_85_valid
              ? (parallelFwdResult_res_84_valid
                   ? (parallelFwdResult_res_83_valid
                        ? (matchResultVec_2_9_valid ? data_9_data : data_8_data)
                        : data_7_data)
                   : matchResultVec_2_6_valid ? data_6_data : data_5_data)
              : parallelFwdResult_res_80_valid
                  ? (parallelFwdResult_res_79_valid
                       ? (matchResultVec_2_4_valid ? data_4_data : data_3_data)
                       : data_2_data)
                  : matchResultVec_2_1_valid ? data_1_data : data_0_data;
endmodule

