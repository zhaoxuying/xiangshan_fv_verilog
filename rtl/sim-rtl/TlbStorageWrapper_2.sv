// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module TlbStorageWrapper_2(
  input         clock,
  input         reset,
  input         io_sfence_valid,
  input         io_sfence_bits_rs1,
  input         io_sfence_bits_rs2,
  input  [49:0] io_sfence_bits_addr,
  input  [15:0] io_sfence_bits_id,
  input         io_sfence_bits_hv,
  input         io_sfence_bits_hg,
  input  [15:0] io_csr_satp_asid,
  input  [15:0] io_csr_vsatp_asid,
  input  [15:0] io_csr_hgatp_vmid,
  input         io_csr_priv_virt,
  input         io_r_req_0_valid,
  input  [37:0] io_r_req_0_bits_vpn,
  input  [1:0]  io_r_req_0_bits_s2xlate,
  input         io_r_req_1_valid,
  input  [37:0] io_r_req_1_bits_vpn,
  input  [1:0]  io_r_req_1_bits_s2xlate,
  output        io_r_resp_0_bits_hit,
  output [35:0] io_r_resp_0_bits_ppn_0,
  output [1:0]  io_r_resp_0_bits_pbmt_0,
  output [1:0]  io_r_resp_0_bits_g_pbmt_0,
  output        io_r_resp_0_bits_perm_0_pf,
  output        io_r_resp_0_bits_perm_0_af,
  output        io_r_resp_0_bits_perm_0_v,
  output        io_r_resp_0_bits_perm_0_d,
  output        io_r_resp_0_bits_perm_0_a,
  output        io_r_resp_0_bits_perm_0_u,
  output        io_r_resp_0_bits_perm_0_x,
  output        io_r_resp_0_bits_perm_0_w,
  output        io_r_resp_0_bits_perm_0_r,
  output        io_r_resp_0_bits_g_perm_0_pf,
  output        io_r_resp_0_bits_g_perm_0_af,
  output        io_r_resp_0_bits_g_perm_0_d,
  output        io_r_resp_0_bits_g_perm_0_a,
  output        io_r_resp_0_bits_g_perm_0_x,
  output        io_r_resp_0_bits_g_perm_0_w,
  output        io_r_resp_0_bits_g_perm_0_r,
  output [1:0]  io_r_resp_0_bits_s2xlate_0,
  output        io_r_resp_1_bits_hit,
  output [35:0] io_r_resp_1_bits_ppn_0,
  output [1:0]  io_r_resp_1_bits_pbmt_0,
  output [1:0]  io_r_resp_1_bits_g_pbmt_0,
  output        io_r_resp_1_bits_perm_0_pf,
  output        io_r_resp_1_bits_perm_0_af,
  output        io_r_resp_1_bits_perm_0_v,
  output        io_r_resp_1_bits_perm_0_d,
  output        io_r_resp_1_bits_perm_0_a,
  output        io_r_resp_1_bits_perm_0_u,
  output        io_r_resp_1_bits_perm_0_x,
  output        io_r_resp_1_bits_perm_0_w,
  output        io_r_resp_1_bits_perm_0_r,
  output        io_r_resp_1_bits_g_perm_0_pf,
  output        io_r_resp_1_bits_g_perm_0_af,
  output        io_r_resp_1_bits_g_perm_0_d,
  output        io_r_resp_1_bits_g_perm_0_a,
  output        io_r_resp_1_bits_g_perm_0_x,
  output        io_r_resp_1_bits_g_perm_0_w,
  output        io_r_resp_1_bits_g_perm_0_r,
  output [1:0]  io_r_resp_1_bits_s2xlate_0,
  input         io_w_valid,
  input  [1:0]  io_w_bits_data_s2xlate,
  input  [34:0] io_w_bits_data_s1_entry_tag,
  input  [15:0] io_w_bits_data_s1_entry_asid,
  input  [13:0] io_w_bits_data_s1_entry_vmid,
  input         io_w_bits_data_s1_entry_n,
  input  [1:0]  io_w_bits_data_s1_entry_pbmt,
  input         io_w_bits_data_s1_entry_perm_d,
  input         io_w_bits_data_s1_entry_perm_a,
  input         io_w_bits_data_s1_entry_perm_g,
  input         io_w_bits_data_s1_entry_perm_u,
  input         io_w_bits_data_s1_entry_perm_x,
  input         io_w_bits_data_s1_entry_perm_w,
  input         io_w_bits_data_s1_entry_perm_r,
  input  [1:0]  io_w_bits_data_s1_entry_level,
  input         io_w_bits_data_s1_entry_v,
  input  [40:0] io_w_bits_data_s1_entry_ppn,
  input  [2:0]  io_w_bits_data_s1_ppn_low_0,
  input  [2:0]  io_w_bits_data_s1_ppn_low_1,
  input  [2:0]  io_w_bits_data_s1_ppn_low_2,
  input  [2:0]  io_w_bits_data_s1_ppn_low_3,
  input  [2:0]  io_w_bits_data_s1_ppn_low_4,
  input  [2:0]  io_w_bits_data_s1_ppn_low_5,
  input  [2:0]  io_w_bits_data_s1_ppn_low_6,
  input  [2:0]  io_w_bits_data_s1_ppn_low_7,
  input         io_w_bits_data_s1_valididx_0,
  input         io_w_bits_data_s1_valididx_1,
  input         io_w_bits_data_s1_valididx_2,
  input         io_w_bits_data_s1_valididx_3,
  input         io_w_bits_data_s1_valididx_4,
  input         io_w_bits_data_s1_valididx_5,
  input         io_w_bits_data_s1_valididx_6,
  input         io_w_bits_data_s1_valididx_7,
  input         io_w_bits_data_s1_pteidx_0,
  input         io_w_bits_data_s1_pteidx_1,
  input         io_w_bits_data_s1_pteidx_2,
  input         io_w_bits_data_s1_pteidx_3,
  input         io_w_bits_data_s1_pteidx_4,
  input         io_w_bits_data_s1_pteidx_5,
  input         io_w_bits_data_s1_pteidx_6,
  input         io_w_bits_data_s1_pteidx_7,
  input         io_w_bits_data_s1_pf,
  input         io_w_bits_data_s1_af,
  input  [37:0] io_w_bits_data_s2_entry_tag,
  input  [13:0] io_w_bits_data_s2_entry_vmid,
  input         io_w_bits_data_s2_entry_n,
  input  [1:0]  io_w_bits_data_s2_entry_pbmt,
  input  [37:0] io_w_bits_data_s2_entry_ppn,
  input         io_w_bits_data_s2_entry_perm_d,
  input         io_w_bits_data_s2_entry_perm_a,
  input         io_w_bits_data_s2_entry_perm_g,
  input         io_w_bits_data_s2_entry_perm_u,
  input         io_w_bits_data_s2_entry_perm_x,
  input         io_w_bits_data_s2_entry_perm_w,
  input         io_w_bits_data_s2_entry_perm_r,
  input  [1:0]  io_w_bits_data_s2_entry_level,
  input         io_w_bits_data_s2_gpf,
  input         io_w_bits_data_s2_gaf
);

  wire       _page_sttlb_storage_fa_io_access_0_touch_ways_valid;
  wire [1:0] _page_sttlb_storage_fa_io_access_0_touch_ways_bits;
  wire       _page_sttlb_storage_fa_io_access_1_touch_ways_valid;
  wire [1:0] _page_sttlb_storage_fa_io_access_1_touch_ways_bits;
  reg  [2:0] refill_idx_state_reg;
  wire       _refill_idx_state_reg_T_3 =
    _page_sttlb_storage_fa_io_access_0_touch_ways_bits[1]
      ? ~(_page_sttlb_storage_fa_io_access_0_touch_ways_bits[0])
      : refill_idx_state_reg[1];
  wire       _refill_idx_state_reg_T_7 =
    _page_sttlb_storage_fa_io_access_0_touch_ways_bits[1]
      ? refill_idx_state_reg[0]
      : ~(_page_sttlb_storage_fa_io_access_0_touch_ways_bits[0]);
  wire [1:0] _refill_idx_state_reg_T_9 =
    _page_sttlb_storage_fa_io_access_0_touch_ways_valid
      ? {_refill_idx_state_reg_T_3, _refill_idx_state_reg_T_7}
      : refill_idx_state_reg[1:0];
  always @(posedge clock or posedge reset) begin
    if (reset)
      refill_idx_state_reg <= 3'h0;
    else if (_page_sttlb_storage_fa_io_access_0_touch_ways_valid
             | _page_sttlb_storage_fa_io_access_1_touch_ways_valid) begin
      if (_page_sttlb_storage_fa_io_access_1_touch_ways_valid)
        refill_idx_state_reg <=
          {~(_page_sttlb_storage_fa_io_access_1_touch_ways_bits[1]),
           _page_sttlb_storage_fa_io_access_1_touch_ways_bits[1]
             ? ~(_page_sttlb_storage_fa_io_access_1_touch_ways_bits[0])
             : _refill_idx_state_reg_T_9[1],
           _page_sttlb_storage_fa_io_access_1_touch_ways_bits[1]
             ? _refill_idx_state_reg_T_9[0]
             : ~(_page_sttlb_storage_fa_io_access_1_touch_ways_bits[0])};
      else if (_page_sttlb_storage_fa_io_access_0_touch_ways_valid)
        refill_idx_state_reg <=
          {~(_page_sttlb_storage_fa_io_access_0_touch_ways_bits[1]),
           _refill_idx_state_reg_T_3,
           _refill_idx_state_reg_T_7};
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;
        refill_idx_state_reg = _RANDOM[/*Zero width*/ 1'b0][2:0];
      `endif // RANDOMIZE_REG_INIT
      if (reset)
        refill_idx_state_reg = 3'h0;
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  TLBFA_2 page_sttlb_storage_fa (
    .clock                          (clock),
    .reset                          (reset),
    .io_sfence_valid                (io_sfence_valid),
    .io_sfence_bits_rs1             (io_sfence_bits_rs1),
    .io_sfence_bits_rs2             (io_sfence_bits_rs2),
    .io_sfence_bits_addr            (io_sfence_bits_addr),
    .io_sfence_bits_id              (io_sfence_bits_id),
    .io_sfence_bits_hv              (io_sfence_bits_hv),
    .io_sfence_bits_hg              (io_sfence_bits_hg),
    .io_csr_satp_asid               (io_csr_satp_asid),
    .io_csr_vsatp_asid              (io_csr_vsatp_asid),
    .io_csr_hgatp_vmid              (io_csr_hgatp_vmid),
    .io_csr_priv_virt               (io_csr_priv_virt),
    .io_r_req_0_valid               (io_r_req_0_valid),
    .io_r_req_0_bits_vpn            (io_r_req_0_bits_vpn),
    .io_r_req_0_bits_s2xlate        (io_r_req_0_bits_s2xlate),
    .io_r_req_1_valid               (io_r_req_1_valid),
    .io_r_req_1_bits_vpn            (io_r_req_1_bits_vpn),
    .io_r_req_1_bits_s2xlate        (io_r_req_1_bits_s2xlate),
    .io_r_resp_0_bits_hit           (io_r_resp_0_bits_hit),
    .io_r_resp_0_bits_ppn_0         (io_r_resp_0_bits_ppn_0),
    .io_r_resp_0_bits_pbmt_0        (io_r_resp_0_bits_pbmt_0),
    .io_r_resp_0_bits_g_pbmt_0      (io_r_resp_0_bits_g_pbmt_0),
    .io_r_resp_0_bits_perm_0_pf     (io_r_resp_0_bits_perm_0_pf),
    .io_r_resp_0_bits_perm_0_af     (io_r_resp_0_bits_perm_0_af),
    .io_r_resp_0_bits_perm_0_v      (io_r_resp_0_bits_perm_0_v),
    .io_r_resp_0_bits_perm_0_d      (io_r_resp_0_bits_perm_0_d),
    .io_r_resp_0_bits_perm_0_a      (io_r_resp_0_bits_perm_0_a),
    .io_r_resp_0_bits_perm_0_u      (io_r_resp_0_bits_perm_0_u),
    .io_r_resp_0_bits_perm_0_x      (io_r_resp_0_bits_perm_0_x),
    .io_r_resp_0_bits_perm_0_w      (io_r_resp_0_bits_perm_0_w),
    .io_r_resp_0_bits_perm_0_r      (io_r_resp_0_bits_perm_0_r),
    .io_r_resp_0_bits_g_perm_0_pf   (io_r_resp_0_bits_g_perm_0_pf),
    .io_r_resp_0_bits_g_perm_0_af   (io_r_resp_0_bits_g_perm_0_af),
    .io_r_resp_0_bits_g_perm_0_d    (io_r_resp_0_bits_g_perm_0_d),
    .io_r_resp_0_bits_g_perm_0_a    (io_r_resp_0_bits_g_perm_0_a),
    .io_r_resp_0_bits_g_perm_0_x    (io_r_resp_0_bits_g_perm_0_x),
    .io_r_resp_0_bits_g_perm_0_w    (io_r_resp_0_bits_g_perm_0_w),
    .io_r_resp_0_bits_g_perm_0_r    (io_r_resp_0_bits_g_perm_0_r),
    .io_r_resp_0_bits_s2xlate_0     (io_r_resp_0_bits_s2xlate_0),
    .io_r_resp_1_bits_hit           (io_r_resp_1_bits_hit),
    .io_r_resp_1_bits_ppn_0         (io_r_resp_1_bits_ppn_0),
    .io_r_resp_1_bits_pbmt_0        (io_r_resp_1_bits_pbmt_0),
    .io_r_resp_1_bits_g_pbmt_0      (io_r_resp_1_bits_g_pbmt_0),
    .io_r_resp_1_bits_perm_0_pf     (io_r_resp_1_bits_perm_0_pf),
    .io_r_resp_1_bits_perm_0_af     (io_r_resp_1_bits_perm_0_af),
    .io_r_resp_1_bits_perm_0_v      (io_r_resp_1_bits_perm_0_v),
    .io_r_resp_1_bits_perm_0_d      (io_r_resp_1_bits_perm_0_d),
    .io_r_resp_1_bits_perm_0_a      (io_r_resp_1_bits_perm_0_a),
    .io_r_resp_1_bits_perm_0_u      (io_r_resp_1_bits_perm_0_u),
    .io_r_resp_1_bits_perm_0_x      (io_r_resp_1_bits_perm_0_x),
    .io_r_resp_1_bits_perm_0_w      (io_r_resp_1_bits_perm_0_w),
    .io_r_resp_1_bits_perm_0_r      (io_r_resp_1_bits_perm_0_r),
    .io_r_resp_1_bits_g_perm_0_pf   (io_r_resp_1_bits_g_perm_0_pf),
    .io_r_resp_1_bits_g_perm_0_af   (io_r_resp_1_bits_g_perm_0_af),
    .io_r_resp_1_bits_g_perm_0_d    (io_r_resp_1_bits_g_perm_0_d),
    .io_r_resp_1_bits_g_perm_0_a    (io_r_resp_1_bits_g_perm_0_a),
    .io_r_resp_1_bits_g_perm_0_x    (io_r_resp_1_bits_g_perm_0_x),
    .io_r_resp_1_bits_g_perm_0_w    (io_r_resp_1_bits_g_perm_0_w),
    .io_r_resp_1_bits_g_perm_0_r    (io_r_resp_1_bits_g_perm_0_r),
    .io_r_resp_1_bits_s2xlate_0     (io_r_resp_1_bits_s2xlate_0),
    .io_w_valid                     (io_w_valid),
    .io_w_bits_wayIdx
      ({refill_idx_state_reg[2],
        refill_idx_state_reg[2] ? refill_idx_state_reg[1] : refill_idx_state_reg[0]}),
    .io_w_bits_data_s2xlate         (io_w_bits_data_s2xlate),
    .io_w_bits_data_s1_entry_tag    (io_w_bits_data_s1_entry_tag),
    .io_w_bits_data_s1_entry_asid   (io_w_bits_data_s1_entry_asid),
    .io_w_bits_data_s1_entry_vmid   (io_w_bits_data_s1_entry_vmid),
    .io_w_bits_data_s1_entry_n      (io_w_bits_data_s1_entry_n),
    .io_w_bits_data_s1_entry_pbmt   (io_w_bits_data_s1_entry_pbmt),
    .io_w_bits_data_s1_entry_perm_d (io_w_bits_data_s1_entry_perm_d),
    .io_w_bits_data_s1_entry_perm_a (io_w_bits_data_s1_entry_perm_a),
    .io_w_bits_data_s1_entry_perm_g (io_w_bits_data_s1_entry_perm_g),
    .io_w_bits_data_s1_entry_perm_u (io_w_bits_data_s1_entry_perm_u),
    .io_w_bits_data_s1_entry_perm_x (io_w_bits_data_s1_entry_perm_x),
    .io_w_bits_data_s1_entry_perm_w (io_w_bits_data_s1_entry_perm_w),
    .io_w_bits_data_s1_entry_perm_r (io_w_bits_data_s1_entry_perm_r),
    .io_w_bits_data_s1_entry_level  (io_w_bits_data_s1_entry_level),
    .io_w_bits_data_s1_entry_v      (io_w_bits_data_s1_entry_v),
    .io_w_bits_data_s1_entry_ppn    (io_w_bits_data_s1_entry_ppn),
    .io_w_bits_data_s1_ppn_low_0    (io_w_bits_data_s1_ppn_low_0),
    .io_w_bits_data_s1_ppn_low_1    (io_w_bits_data_s1_ppn_low_1),
    .io_w_bits_data_s1_ppn_low_2    (io_w_bits_data_s1_ppn_low_2),
    .io_w_bits_data_s1_ppn_low_3    (io_w_bits_data_s1_ppn_low_3),
    .io_w_bits_data_s1_ppn_low_4    (io_w_bits_data_s1_ppn_low_4),
    .io_w_bits_data_s1_ppn_low_5    (io_w_bits_data_s1_ppn_low_5),
    .io_w_bits_data_s1_ppn_low_6    (io_w_bits_data_s1_ppn_low_6),
    .io_w_bits_data_s1_ppn_low_7    (io_w_bits_data_s1_ppn_low_7),
    .io_w_bits_data_s1_valididx_0   (io_w_bits_data_s1_valididx_0),
    .io_w_bits_data_s1_valididx_1   (io_w_bits_data_s1_valididx_1),
    .io_w_bits_data_s1_valididx_2   (io_w_bits_data_s1_valididx_2),
    .io_w_bits_data_s1_valididx_3   (io_w_bits_data_s1_valididx_3),
    .io_w_bits_data_s1_valididx_4   (io_w_bits_data_s1_valididx_4),
    .io_w_bits_data_s1_valididx_5   (io_w_bits_data_s1_valididx_5),
    .io_w_bits_data_s1_valididx_6   (io_w_bits_data_s1_valididx_6),
    .io_w_bits_data_s1_valididx_7   (io_w_bits_data_s1_valididx_7),
    .io_w_bits_data_s1_pteidx_0     (io_w_bits_data_s1_pteidx_0),
    .io_w_bits_data_s1_pteidx_1     (io_w_bits_data_s1_pteidx_1),
    .io_w_bits_data_s1_pteidx_2     (io_w_bits_data_s1_pteidx_2),
    .io_w_bits_data_s1_pteidx_3     (io_w_bits_data_s1_pteidx_3),
    .io_w_bits_data_s1_pteidx_4     (io_w_bits_data_s1_pteidx_4),
    .io_w_bits_data_s1_pteidx_5     (io_w_bits_data_s1_pteidx_5),
    .io_w_bits_data_s1_pteidx_6     (io_w_bits_data_s1_pteidx_6),
    .io_w_bits_data_s1_pteidx_7     (io_w_bits_data_s1_pteidx_7),
    .io_w_bits_data_s1_pf           (io_w_bits_data_s1_pf),
    .io_w_bits_data_s1_af           (io_w_bits_data_s1_af),
    .io_w_bits_data_s2_entry_tag    (io_w_bits_data_s2_entry_tag),
    .io_w_bits_data_s2_entry_vmid   (io_w_bits_data_s2_entry_vmid),
    .io_w_bits_data_s2_entry_n      (io_w_bits_data_s2_entry_n),
    .io_w_bits_data_s2_entry_pbmt   (io_w_bits_data_s2_entry_pbmt),
    .io_w_bits_data_s2_entry_ppn    (io_w_bits_data_s2_entry_ppn),
    .io_w_bits_data_s2_entry_perm_d (io_w_bits_data_s2_entry_perm_d),
    .io_w_bits_data_s2_entry_perm_a (io_w_bits_data_s2_entry_perm_a),
    .io_w_bits_data_s2_entry_perm_g (io_w_bits_data_s2_entry_perm_g),
    .io_w_bits_data_s2_entry_perm_u (io_w_bits_data_s2_entry_perm_u),
    .io_w_bits_data_s2_entry_perm_x (io_w_bits_data_s2_entry_perm_x),
    .io_w_bits_data_s2_entry_perm_w (io_w_bits_data_s2_entry_perm_w),
    .io_w_bits_data_s2_entry_perm_r (io_w_bits_data_s2_entry_perm_r),
    .io_w_bits_data_s2_entry_level  (io_w_bits_data_s2_entry_level),
    .io_w_bits_data_s2_gpf          (io_w_bits_data_s2_gpf),
    .io_w_bits_data_s2_gaf          (io_w_bits_data_s2_gaf),
    .io_access_0_touch_ways_valid   (_page_sttlb_storage_fa_io_access_0_touch_ways_valid),
    .io_access_0_touch_ways_bits    (_page_sttlb_storage_fa_io_access_0_touch_ways_bits),
    .io_access_1_touch_ways_valid   (_page_sttlb_storage_fa_io_access_1_touch_ways_valid),
    .io_access_1_touch_ways_bits    (_page_sttlb_storage_fa_io_access_1_touch_ways_bits)
  );
endmodule

