// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module LqVAddrModule(
  input         clock,
  input         io_ren_0,
  input         io_ren_1,
  input         io_ren_2,
  input  [4:0]  io_raddr_0,
  input  [4:0]  io_raddr_1,
  input  [4:0]  io_raddr_2,
  output [49:0] io_rdata_0,
  output [49:0] io_rdata_1,
  output [49:0] io_rdata_2,
  input         io_wen_0,
  input         io_wen_1,
  input         io_wen_2,
  input  [4:0]  io_waddr_0,
  input  [4:0]  io_waddr_1,
  input  [4:0]  io_waddr_2,
  input  [49:0] io_wdata_0,
  input  [49:0] io_wdata_1,
  input  [49:0] io_wdata_2
);

  wire [49:0]       _sx_writeData_resp_pipMod_11_io_out_bits;
  wire [49:0]       _sx_writeData_resp_pipMod_10_io_out_bits;
  wire [49:0]       _sx_writeData_resp_pipMod_9_io_out_bits;
  wire              _sx_bankWriteEn_delay_11_io_out;
  wire              _sx_bankWriteEn_delay_10_io_out;
  wire              _sx_bankWriteEn_delay_9_io_out;
  wire [5:0]        _sx_bankWriteAddrDec_resp_pipMod_11_io_out_bits;
  wire [5:0]        _sx_bankWriteAddrDec_resp_pipMod_10_io_out_bits;
  wire [5:0]        _sx_bankWriteAddrDec_resp_pipMod_9_io_out_bits;
  wire [49:0]       _sx_writeData_resp_pipMod_8_io_out_bits;
  wire [49:0]       _sx_writeData_resp_pipMod_7_io_out_bits;
  wire [49:0]       _sx_writeData_resp_pipMod_6_io_out_bits;
  wire              _sx_bankWriteEn_delay_8_io_out;
  wire              _sx_bankWriteEn_delay_7_io_out;
  wire              _sx_bankWriteEn_delay_6_io_out;
  wire [5:0]        _sx_bankWriteAddrDec_resp_pipMod_8_io_out_bits;
  wire [5:0]        _sx_bankWriteAddrDec_resp_pipMod_7_io_out_bits;
  wire [5:0]        _sx_bankWriteAddrDec_resp_pipMod_6_io_out_bits;
  wire [49:0]       _sx_writeData_resp_pipMod_5_io_out_bits;
  wire [49:0]       _sx_writeData_resp_pipMod_4_io_out_bits;
  wire [49:0]       _sx_writeData_resp_pipMod_3_io_out_bits;
  wire              _sx_bankWriteEn_delay_5_io_out;
  wire              _sx_bankWriteEn_delay_4_io_out;
  wire              _sx_bankWriteEn_delay_3_io_out;
  wire [5:0]        _sx_bankWriteAddrDec_resp_pipMod_5_io_out_bits;
  wire [5:0]        _sx_bankWriteAddrDec_resp_pipMod_4_io_out_bits;
  wire [5:0]        _sx_bankWriteAddrDec_resp_pipMod_3_io_out_bits;
  wire [49:0]       _sx_writeData_resp_pipMod_2_io_out_bits;
  wire [49:0]       _sx_writeData_resp_pipMod_1_io_out_bits;
  wire [49:0]       _sx_writeData_resp_pipMod_io_out_bits;
  wire              _sx_bankWriteEn_delay_2_io_out;
  wire              _sx_bankWriteEn_delay_1_io_out;
  wire              _sx_bankWriteEn_delay_io_out;
  wire [5:0]        _sx_bankWriteAddrDec_resp_pipMod_2_io_out_bits;
  wire [5:0]        _sx_bankWriteAddrDec_resp_pipMod_1_io_out_bits;
  wire [5:0]        _sx_bankWriteAddrDec_resp_pipMod_io_out_bits;
  reg  [49:0]       data_0;
  reg  [49:0]       data_1;
  reg  [49:0]       data_2;
  reg  [49:0]       data_3;
  reg  [49:0]       data_4;
  reg  [49:0]       data_5;
  reg  [49:0]       data_6;
  reg  [49:0]       data_7;
  reg  [49:0]       data_8;
  reg  [49:0]       data_9;
  reg  [49:0]       data_10;
  reg  [49:0]       data_11;
  reg  [49:0]       data_12;
  reg  [49:0]       data_13;
  reg  [49:0]       data_14;
  reg  [49:0]       data_15;
  reg  [49:0]       data_16;
  reg  [49:0]       data_17;
  reg  [49:0]       data_18;
  reg  [49:0]       data_19;
  reg  [49:0]       data_20;
  reg  [49:0]       data_21;
  reg  [49:0]       data_22;
  reg  [49:0]       data_23;
  reg  [49:0]       io_rdata_0_r;
  reg  [49:0]       io_rdata_1_r;
  reg  [49:0]       io_rdata_2_r;
  wire [31:0]       writeAddrDec_0 = 32'h1 << io_waddr_0;
  wire [31:0]       writeAddrDec_1 = 32'h1 << io_waddr_1;
  wire [31:0]       writeAddrDec_2 = 32'h1 << io_waddr_2;
  wire [31:0][49:0] _GEN =
    {{data_0},
     {data_0},
     {data_0},
     {data_0},
     {data_0},
     {data_0},
     {data_0},
     {data_0},
     {data_23},
     {data_22},
     {data_21},
     {data_20},
     {data_19},
     {data_18},
     {data_17},
     {data_16},
     {data_15},
     {data_14},
     {data_13},
     {data_12},
     {data_11},
     {data_10},
     {data_9},
     {data_8},
     {data_7},
     {data_6},
     {data_5},
     {data_4},
     {data_3},
     {data_2},
     {data_1},
     {data_0}};
  wire              sx_entryWriteEnVec0_0_0 =
    _sx_bankWriteEn_delay_io_out & _sx_bankWriteAddrDec_resp_pipMod_io_out_bits[0];
  wire              sx_entryWriteEnVec0_0_1 =
    _sx_bankWriteEn_delay_1_io_out & _sx_bankWriteAddrDec_resp_pipMod_1_io_out_bits[0];
  wire              sx_entryWriteEnVec0_0_2 =
    _sx_bankWriteEn_delay_2_io_out & _sx_bankWriteAddrDec_resp_pipMod_2_io_out_bits[0];
  wire              sx_entryWriteEnVec0_1_0 =
    _sx_bankWriteEn_delay_io_out & _sx_bankWriteAddrDec_resp_pipMod_io_out_bits[1];
  wire              sx_entryWriteEnVec0_1_1 =
    _sx_bankWriteEn_delay_1_io_out & _sx_bankWriteAddrDec_resp_pipMod_1_io_out_bits[1];
  wire              sx_entryWriteEnVec0_1_2 =
    _sx_bankWriteEn_delay_2_io_out & _sx_bankWriteAddrDec_resp_pipMod_2_io_out_bits[1];
  wire              sx_entryWriteEnVec0_2_0 =
    _sx_bankWriteEn_delay_io_out & _sx_bankWriteAddrDec_resp_pipMod_io_out_bits[2];
  wire              sx_entryWriteEnVec0_2_1 =
    _sx_bankWriteEn_delay_1_io_out & _sx_bankWriteAddrDec_resp_pipMod_1_io_out_bits[2];
  wire              sx_entryWriteEnVec0_2_2 =
    _sx_bankWriteEn_delay_2_io_out & _sx_bankWriteAddrDec_resp_pipMod_2_io_out_bits[2];
  wire              sx_entryWriteEnVec0_3_0 =
    _sx_bankWriteEn_delay_io_out & _sx_bankWriteAddrDec_resp_pipMod_io_out_bits[3];
  wire              sx_entryWriteEnVec0_3_1 =
    _sx_bankWriteEn_delay_1_io_out & _sx_bankWriteAddrDec_resp_pipMod_1_io_out_bits[3];
  wire              sx_entryWriteEnVec0_3_2 =
    _sx_bankWriteEn_delay_2_io_out & _sx_bankWriteAddrDec_resp_pipMod_2_io_out_bits[3];
  wire              sx_entryWriteEnVec0_4_0 =
    _sx_bankWriteEn_delay_io_out & _sx_bankWriteAddrDec_resp_pipMod_io_out_bits[4];
  wire              sx_entryWriteEnVec0_4_1 =
    _sx_bankWriteEn_delay_1_io_out & _sx_bankWriteAddrDec_resp_pipMod_1_io_out_bits[4];
  wire              sx_entryWriteEnVec0_4_2 =
    _sx_bankWriteEn_delay_2_io_out & _sx_bankWriteAddrDec_resp_pipMod_2_io_out_bits[4];
  wire              sx_entryWriteEnVec0_5_0 =
    _sx_bankWriteEn_delay_io_out & _sx_bankWriteAddrDec_resp_pipMod_io_out_bits[5];
  wire              sx_entryWriteEnVec0_5_1 =
    _sx_bankWriteEn_delay_1_io_out & _sx_bankWriteAddrDec_resp_pipMod_1_io_out_bits[5];
  wire              sx_entryWriteEnVec0_5_2 =
    _sx_bankWriteEn_delay_2_io_out & _sx_bankWriteAddrDec_resp_pipMod_2_io_out_bits[5];
  wire              sx_entryWriteEnVec1_0_0 =
    _sx_bankWriteEn_delay_3_io_out & _sx_bankWriteAddrDec_resp_pipMod_3_io_out_bits[0];
  wire              sx_entryWriteEnVec1_0_1 =
    _sx_bankWriteEn_delay_4_io_out & _sx_bankWriteAddrDec_resp_pipMod_4_io_out_bits[0];
  wire              sx_entryWriteEnVec1_0_2 =
    _sx_bankWriteEn_delay_5_io_out & _sx_bankWriteAddrDec_resp_pipMod_5_io_out_bits[0];
  wire              sx_entryWriteEnVec1_1_0 =
    _sx_bankWriteEn_delay_3_io_out & _sx_bankWriteAddrDec_resp_pipMod_3_io_out_bits[1];
  wire              sx_entryWriteEnVec1_1_1 =
    _sx_bankWriteEn_delay_4_io_out & _sx_bankWriteAddrDec_resp_pipMod_4_io_out_bits[1];
  wire              sx_entryWriteEnVec1_1_2 =
    _sx_bankWriteEn_delay_5_io_out & _sx_bankWriteAddrDec_resp_pipMod_5_io_out_bits[1];
  wire              sx_entryWriteEnVec1_2_0 =
    _sx_bankWriteEn_delay_3_io_out & _sx_bankWriteAddrDec_resp_pipMod_3_io_out_bits[2];
  wire              sx_entryWriteEnVec1_2_1 =
    _sx_bankWriteEn_delay_4_io_out & _sx_bankWriteAddrDec_resp_pipMod_4_io_out_bits[2];
  wire              sx_entryWriteEnVec1_2_2 =
    _sx_bankWriteEn_delay_5_io_out & _sx_bankWriteAddrDec_resp_pipMod_5_io_out_bits[2];
  wire              sx_entryWriteEnVec1_3_0 =
    _sx_bankWriteEn_delay_3_io_out & _sx_bankWriteAddrDec_resp_pipMod_3_io_out_bits[3];
  wire              sx_entryWriteEnVec1_3_1 =
    _sx_bankWriteEn_delay_4_io_out & _sx_bankWriteAddrDec_resp_pipMod_4_io_out_bits[3];
  wire              sx_entryWriteEnVec1_3_2 =
    _sx_bankWriteEn_delay_5_io_out & _sx_bankWriteAddrDec_resp_pipMod_5_io_out_bits[3];
  wire              sx_entryWriteEnVec1_4_0 =
    _sx_bankWriteEn_delay_3_io_out & _sx_bankWriteAddrDec_resp_pipMod_3_io_out_bits[4];
  wire              sx_entryWriteEnVec1_4_1 =
    _sx_bankWriteEn_delay_4_io_out & _sx_bankWriteAddrDec_resp_pipMod_4_io_out_bits[4];
  wire              sx_entryWriteEnVec1_4_2 =
    _sx_bankWriteEn_delay_5_io_out & _sx_bankWriteAddrDec_resp_pipMod_5_io_out_bits[4];
  wire              sx_entryWriteEnVec1_5_0 =
    _sx_bankWriteEn_delay_3_io_out & _sx_bankWriteAddrDec_resp_pipMod_3_io_out_bits[5];
  wire              sx_entryWriteEnVec1_5_1 =
    _sx_bankWriteEn_delay_4_io_out & _sx_bankWriteAddrDec_resp_pipMod_4_io_out_bits[5];
  wire              sx_entryWriteEnVec1_5_2 =
    _sx_bankWriteEn_delay_5_io_out & _sx_bankWriteAddrDec_resp_pipMod_5_io_out_bits[5];
  wire              sx_entryWriteEnVec2_0_0 =
    _sx_bankWriteEn_delay_6_io_out & _sx_bankWriteAddrDec_resp_pipMod_6_io_out_bits[0];
  wire              sx_entryWriteEnVec2_0_1 =
    _sx_bankWriteEn_delay_7_io_out & _sx_bankWriteAddrDec_resp_pipMod_7_io_out_bits[0];
  wire              sx_entryWriteEnVec2_0_2 =
    _sx_bankWriteEn_delay_8_io_out & _sx_bankWriteAddrDec_resp_pipMod_8_io_out_bits[0];
  wire              sx_entryWriteEnVec2_1_0 =
    _sx_bankWriteEn_delay_6_io_out & _sx_bankWriteAddrDec_resp_pipMod_6_io_out_bits[1];
  wire              sx_entryWriteEnVec2_1_1 =
    _sx_bankWriteEn_delay_7_io_out & _sx_bankWriteAddrDec_resp_pipMod_7_io_out_bits[1];
  wire              sx_entryWriteEnVec2_1_2 =
    _sx_bankWriteEn_delay_8_io_out & _sx_bankWriteAddrDec_resp_pipMod_8_io_out_bits[1];
  wire              sx_entryWriteEnVec2_2_0 =
    _sx_bankWriteEn_delay_6_io_out & _sx_bankWriteAddrDec_resp_pipMod_6_io_out_bits[2];
  wire              sx_entryWriteEnVec2_2_1 =
    _sx_bankWriteEn_delay_7_io_out & _sx_bankWriteAddrDec_resp_pipMod_7_io_out_bits[2];
  wire              sx_entryWriteEnVec2_2_2 =
    _sx_bankWriteEn_delay_8_io_out & _sx_bankWriteAddrDec_resp_pipMod_8_io_out_bits[2];
  wire              sx_entryWriteEnVec2_3_0 =
    _sx_bankWriteEn_delay_6_io_out & _sx_bankWriteAddrDec_resp_pipMod_6_io_out_bits[3];
  wire              sx_entryWriteEnVec2_3_1 =
    _sx_bankWriteEn_delay_7_io_out & _sx_bankWriteAddrDec_resp_pipMod_7_io_out_bits[3];
  wire              sx_entryWriteEnVec2_3_2 =
    _sx_bankWriteEn_delay_8_io_out & _sx_bankWriteAddrDec_resp_pipMod_8_io_out_bits[3];
  wire              sx_entryWriteEnVec2_4_0 =
    _sx_bankWriteEn_delay_6_io_out & _sx_bankWriteAddrDec_resp_pipMod_6_io_out_bits[4];
  wire              sx_entryWriteEnVec2_4_1 =
    _sx_bankWriteEn_delay_7_io_out & _sx_bankWriteAddrDec_resp_pipMod_7_io_out_bits[4];
  wire              sx_entryWriteEnVec2_4_2 =
    _sx_bankWriteEn_delay_8_io_out & _sx_bankWriteAddrDec_resp_pipMod_8_io_out_bits[4];
  wire              sx_entryWriteEnVec2_5_0 =
    _sx_bankWriteEn_delay_6_io_out & _sx_bankWriteAddrDec_resp_pipMod_6_io_out_bits[5];
  wire              sx_entryWriteEnVec2_5_1 =
    _sx_bankWriteEn_delay_7_io_out & _sx_bankWriteAddrDec_resp_pipMod_7_io_out_bits[5];
  wire              sx_entryWriteEnVec2_5_2 =
    _sx_bankWriteEn_delay_8_io_out & _sx_bankWriteAddrDec_resp_pipMod_8_io_out_bits[5];
  wire              sx_entryWriteEnVec3_0_0 =
    _sx_bankWriteEn_delay_9_io_out & _sx_bankWriteAddrDec_resp_pipMod_9_io_out_bits[0];
  wire              sx_entryWriteEnVec3_0_1 =
    _sx_bankWriteEn_delay_10_io_out & _sx_bankWriteAddrDec_resp_pipMod_10_io_out_bits[0];
  wire              sx_entryWriteEnVec3_0_2 =
    _sx_bankWriteEn_delay_11_io_out & _sx_bankWriteAddrDec_resp_pipMod_11_io_out_bits[0];
  wire              sx_entryWriteEnVec3_1_0 =
    _sx_bankWriteEn_delay_9_io_out & _sx_bankWriteAddrDec_resp_pipMod_9_io_out_bits[1];
  wire              sx_entryWriteEnVec3_1_1 =
    _sx_bankWriteEn_delay_10_io_out & _sx_bankWriteAddrDec_resp_pipMod_10_io_out_bits[1];
  wire              sx_entryWriteEnVec3_1_2 =
    _sx_bankWriteEn_delay_11_io_out & _sx_bankWriteAddrDec_resp_pipMod_11_io_out_bits[1];
  wire              sx_entryWriteEnVec3_2_0 =
    _sx_bankWriteEn_delay_9_io_out & _sx_bankWriteAddrDec_resp_pipMod_9_io_out_bits[2];
  wire              sx_entryWriteEnVec3_2_1 =
    _sx_bankWriteEn_delay_10_io_out & _sx_bankWriteAddrDec_resp_pipMod_10_io_out_bits[2];
  wire              sx_entryWriteEnVec3_2_2 =
    _sx_bankWriteEn_delay_11_io_out & _sx_bankWriteAddrDec_resp_pipMod_11_io_out_bits[2];
  wire              sx_entryWriteEnVec3_3_0 =
    _sx_bankWriteEn_delay_9_io_out & _sx_bankWriteAddrDec_resp_pipMod_9_io_out_bits[3];
  wire              sx_entryWriteEnVec3_3_1 =
    _sx_bankWriteEn_delay_10_io_out & _sx_bankWriteAddrDec_resp_pipMod_10_io_out_bits[3];
  wire              sx_entryWriteEnVec3_3_2 =
    _sx_bankWriteEn_delay_11_io_out & _sx_bankWriteAddrDec_resp_pipMod_11_io_out_bits[3];
  wire              sx_entryWriteEnVec3_4_0 =
    _sx_bankWriteEn_delay_9_io_out & _sx_bankWriteAddrDec_resp_pipMod_9_io_out_bits[4];
  wire              sx_entryWriteEnVec3_4_1 =
    _sx_bankWriteEn_delay_10_io_out & _sx_bankWriteAddrDec_resp_pipMod_10_io_out_bits[4];
  wire              sx_entryWriteEnVec3_4_2 =
    _sx_bankWriteEn_delay_11_io_out & _sx_bankWriteAddrDec_resp_pipMod_11_io_out_bits[4];
  wire              sx_entryWriteEnVec3_5_0 =
    _sx_bankWriteEn_delay_9_io_out & _sx_bankWriteAddrDec_resp_pipMod_9_io_out_bits[5];
  wire              sx_entryWriteEnVec3_5_1 =
    _sx_bankWriteEn_delay_10_io_out & _sx_bankWriteAddrDec_resp_pipMod_10_io_out_bits[5];
  wire              sx_entryWriteEnVec3_5_2 =
    _sx_bankWriteEn_delay_11_io_out & _sx_bankWriteAddrDec_resp_pipMod_11_io_out_bits[5];
  always @(posedge clock) begin
    if (|{sx_entryWriteEnVec0_0_2, sx_entryWriteEnVec0_0_1, sx_entryWriteEnVec0_0_0})
      data_0 <=
        (sx_entryWriteEnVec0_0_0 ? _sx_writeData_resp_pipMod_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec0_0_1 ? _sx_writeData_resp_pipMod_1_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec0_0_2 ? _sx_writeData_resp_pipMod_2_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec0_1_2, sx_entryWriteEnVec0_1_1, sx_entryWriteEnVec0_1_0})
      data_1 <=
        (sx_entryWriteEnVec0_1_0 ? _sx_writeData_resp_pipMod_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec0_1_1 ? _sx_writeData_resp_pipMod_1_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec0_1_2 ? _sx_writeData_resp_pipMod_2_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec0_2_2, sx_entryWriteEnVec0_2_1, sx_entryWriteEnVec0_2_0})
      data_2 <=
        (sx_entryWriteEnVec0_2_0 ? _sx_writeData_resp_pipMod_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec0_2_1 ? _sx_writeData_resp_pipMod_1_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec0_2_2 ? _sx_writeData_resp_pipMod_2_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec0_3_2, sx_entryWriteEnVec0_3_1, sx_entryWriteEnVec0_3_0})
      data_3 <=
        (sx_entryWriteEnVec0_3_0 ? _sx_writeData_resp_pipMod_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec0_3_1 ? _sx_writeData_resp_pipMod_1_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec0_3_2 ? _sx_writeData_resp_pipMod_2_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec0_4_2, sx_entryWriteEnVec0_4_1, sx_entryWriteEnVec0_4_0})
      data_4 <=
        (sx_entryWriteEnVec0_4_0 ? _sx_writeData_resp_pipMod_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec0_4_1 ? _sx_writeData_resp_pipMod_1_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec0_4_2 ? _sx_writeData_resp_pipMod_2_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec0_5_2, sx_entryWriteEnVec0_5_1, sx_entryWriteEnVec0_5_0})
      data_5 <=
        (sx_entryWriteEnVec0_5_0 ? _sx_writeData_resp_pipMod_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec0_5_1 ? _sx_writeData_resp_pipMod_1_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec0_5_2 ? _sx_writeData_resp_pipMod_2_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec1_0_2, sx_entryWriteEnVec1_0_1, sx_entryWriteEnVec1_0_0})
      data_6 <=
        (sx_entryWriteEnVec1_0_0 ? _sx_writeData_resp_pipMod_3_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec1_0_1 ? _sx_writeData_resp_pipMod_4_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec1_0_2 ? _sx_writeData_resp_pipMod_5_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec1_1_2, sx_entryWriteEnVec1_1_1, sx_entryWriteEnVec1_1_0})
      data_7 <=
        (sx_entryWriteEnVec1_1_0 ? _sx_writeData_resp_pipMod_3_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec1_1_1 ? _sx_writeData_resp_pipMod_4_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec1_1_2 ? _sx_writeData_resp_pipMod_5_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec1_2_2, sx_entryWriteEnVec1_2_1, sx_entryWriteEnVec1_2_0})
      data_8 <=
        (sx_entryWriteEnVec1_2_0 ? _sx_writeData_resp_pipMod_3_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec1_2_1 ? _sx_writeData_resp_pipMod_4_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec1_2_2 ? _sx_writeData_resp_pipMod_5_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec1_3_2, sx_entryWriteEnVec1_3_1, sx_entryWriteEnVec1_3_0})
      data_9 <=
        (sx_entryWriteEnVec1_3_0 ? _sx_writeData_resp_pipMod_3_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec1_3_1 ? _sx_writeData_resp_pipMod_4_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec1_3_2 ? _sx_writeData_resp_pipMod_5_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec1_4_2, sx_entryWriteEnVec1_4_1, sx_entryWriteEnVec1_4_0})
      data_10 <=
        (sx_entryWriteEnVec1_4_0 ? _sx_writeData_resp_pipMod_3_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec1_4_1 ? _sx_writeData_resp_pipMod_4_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec1_4_2 ? _sx_writeData_resp_pipMod_5_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec1_5_2, sx_entryWriteEnVec1_5_1, sx_entryWriteEnVec1_5_0})
      data_11 <=
        (sx_entryWriteEnVec1_5_0 ? _sx_writeData_resp_pipMod_3_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec1_5_1 ? _sx_writeData_resp_pipMod_4_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec1_5_2 ? _sx_writeData_resp_pipMod_5_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec2_0_2, sx_entryWriteEnVec2_0_1, sx_entryWriteEnVec2_0_0})
      data_12 <=
        (sx_entryWriteEnVec2_0_0 ? _sx_writeData_resp_pipMod_6_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec2_0_1 ? _sx_writeData_resp_pipMod_7_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec2_0_2 ? _sx_writeData_resp_pipMod_8_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec2_1_2, sx_entryWriteEnVec2_1_1, sx_entryWriteEnVec2_1_0})
      data_13 <=
        (sx_entryWriteEnVec2_1_0 ? _sx_writeData_resp_pipMod_6_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec2_1_1 ? _sx_writeData_resp_pipMod_7_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec2_1_2 ? _sx_writeData_resp_pipMod_8_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec2_2_2, sx_entryWriteEnVec2_2_1, sx_entryWriteEnVec2_2_0})
      data_14 <=
        (sx_entryWriteEnVec2_2_0 ? _sx_writeData_resp_pipMod_6_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec2_2_1 ? _sx_writeData_resp_pipMod_7_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec2_2_2 ? _sx_writeData_resp_pipMod_8_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec2_3_2, sx_entryWriteEnVec2_3_1, sx_entryWriteEnVec2_3_0})
      data_15 <=
        (sx_entryWriteEnVec2_3_0 ? _sx_writeData_resp_pipMod_6_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec2_3_1 ? _sx_writeData_resp_pipMod_7_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec2_3_2 ? _sx_writeData_resp_pipMod_8_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec2_4_2, sx_entryWriteEnVec2_4_1, sx_entryWriteEnVec2_4_0})
      data_16 <=
        (sx_entryWriteEnVec2_4_0 ? _sx_writeData_resp_pipMod_6_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec2_4_1 ? _sx_writeData_resp_pipMod_7_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec2_4_2 ? _sx_writeData_resp_pipMod_8_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec2_5_2, sx_entryWriteEnVec2_5_1, sx_entryWriteEnVec2_5_0})
      data_17 <=
        (sx_entryWriteEnVec2_5_0 ? _sx_writeData_resp_pipMod_6_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec2_5_1 ? _sx_writeData_resp_pipMod_7_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec2_5_2 ? _sx_writeData_resp_pipMod_8_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec3_0_2, sx_entryWriteEnVec3_0_1, sx_entryWriteEnVec3_0_0})
      data_18 <=
        (sx_entryWriteEnVec3_0_0 ? _sx_writeData_resp_pipMod_9_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec3_0_1 ? _sx_writeData_resp_pipMod_10_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec3_0_2 ? _sx_writeData_resp_pipMod_11_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec3_1_2, sx_entryWriteEnVec3_1_1, sx_entryWriteEnVec3_1_0})
      data_19 <=
        (sx_entryWriteEnVec3_1_0 ? _sx_writeData_resp_pipMod_9_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec3_1_1 ? _sx_writeData_resp_pipMod_10_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec3_1_2 ? _sx_writeData_resp_pipMod_11_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec3_2_2, sx_entryWriteEnVec3_2_1, sx_entryWriteEnVec3_2_0})
      data_20 <=
        (sx_entryWriteEnVec3_2_0 ? _sx_writeData_resp_pipMod_9_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec3_2_1 ? _sx_writeData_resp_pipMod_10_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec3_2_2 ? _sx_writeData_resp_pipMod_11_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec3_3_2, sx_entryWriteEnVec3_3_1, sx_entryWriteEnVec3_3_0})
      data_21 <=
        (sx_entryWriteEnVec3_3_0 ? _sx_writeData_resp_pipMod_9_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec3_3_1 ? _sx_writeData_resp_pipMod_10_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec3_3_2 ? _sx_writeData_resp_pipMod_11_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec3_4_2, sx_entryWriteEnVec3_4_1, sx_entryWriteEnVec3_4_0})
      data_22 <=
        (sx_entryWriteEnVec3_4_0 ? _sx_writeData_resp_pipMod_9_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec3_4_1 ? _sx_writeData_resp_pipMod_10_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec3_4_2 ? _sx_writeData_resp_pipMod_11_io_out_bits : 50'h0);
    if (|{sx_entryWriteEnVec3_5_2, sx_entryWriteEnVec3_5_1, sx_entryWriteEnVec3_5_0})
      data_23 <=
        (sx_entryWriteEnVec3_5_0 ? _sx_writeData_resp_pipMod_9_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec3_5_1 ? _sx_writeData_resp_pipMod_10_io_out_bits : 50'h0)
        | (sx_entryWriteEnVec3_5_2 ? _sx_writeData_resp_pipMod_11_io_out_bits : 50'h0);
    if (io_ren_0)
      io_rdata_0_r <= _GEN[io_raddr_0];
    if (io_ren_1)
      io_rdata_1_r <= _GEN[io_raddr_1];
    if (io_ren_2)
      io_rdata_2_r <= _GEN[io_raddr_2];
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:42];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [5:0] i = 6'h0; i < 6'h2B; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        data_0 = {_RANDOM[6'h0], _RANDOM[6'h1][17:0]};
        data_1 = {_RANDOM[6'h1][31:18], _RANDOM[6'h2], _RANDOM[6'h3][3:0]};
        data_2 = {_RANDOM[6'h3][31:4], _RANDOM[6'h4][21:0]};
        data_3 = {_RANDOM[6'h4][31:22], _RANDOM[6'h5], _RANDOM[6'h6][7:0]};
        data_4 = {_RANDOM[6'h6][31:8], _RANDOM[6'h7][25:0]};
        data_5 = {_RANDOM[6'h7][31:26], _RANDOM[6'h8], _RANDOM[6'h9][11:0]};
        data_6 = {_RANDOM[6'h9][31:12], _RANDOM[6'hA][29:0]};
        data_7 = {_RANDOM[6'hA][31:30], _RANDOM[6'hB], _RANDOM[6'hC][15:0]};
        data_8 = {_RANDOM[6'hC][31:16], _RANDOM[6'hD], _RANDOM[6'hE][1:0]};
        data_9 = {_RANDOM[6'hE][31:2], _RANDOM[6'hF][19:0]};
        data_10 = {_RANDOM[6'hF][31:20], _RANDOM[6'h10], _RANDOM[6'h11][5:0]};
        data_11 = {_RANDOM[6'h11][31:6], _RANDOM[6'h12][23:0]};
        data_12 = {_RANDOM[6'h12][31:24], _RANDOM[6'h13], _RANDOM[6'h14][9:0]};
        data_13 = {_RANDOM[6'h14][31:10], _RANDOM[6'h15][27:0]};
        data_14 = {_RANDOM[6'h15][31:28], _RANDOM[6'h16], _RANDOM[6'h17][13:0]};
        data_15 = {_RANDOM[6'h17][31:14], _RANDOM[6'h18]};
        data_16 = {_RANDOM[6'h19], _RANDOM[6'h1A][17:0]};
        data_17 = {_RANDOM[6'h1A][31:18], _RANDOM[6'h1B], _RANDOM[6'h1C][3:0]};
        data_18 = {_RANDOM[6'h1C][31:4], _RANDOM[6'h1D][21:0]};
        data_19 = {_RANDOM[6'h1D][31:22], _RANDOM[6'h1E], _RANDOM[6'h1F][7:0]};
        data_20 = {_RANDOM[6'h1F][31:8], _RANDOM[6'h20][25:0]};
        data_21 = {_RANDOM[6'h20][31:26], _RANDOM[6'h21], _RANDOM[6'h22][11:0]};
        data_22 = {_RANDOM[6'h22][31:12], _RANDOM[6'h23][29:0]};
        data_23 = {_RANDOM[6'h23][31:30], _RANDOM[6'h24], _RANDOM[6'h25][15:0]};
        io_rdata_0_r = {_RANDOM[6'h25][31:16], _RANDOM[6'h26], _RANDOM[6'h27][1:0]};
        io_rdata_1_r = {_RANDOM[6'h27][31:2], _RANDOM[6'h28][19:0]};
        io_rdata_2_r = {_RANDOM[6'h28][31:20], _RANDOM[6'h29], _RANDOM[6'h2A][5:0]};
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  DelayNWithValid_3 sx_bankWriteAddrDec_resp_pipMod (
    .clock       (clock),
    .io_in_bits  (writeAddrDec_0[5:0]),
    .io_in_valid (io_wen_0),
    .io_out_bits (_sx_bankWriteAddrDec_resp_pipMod_io_out_bits)
  );
  DelayNWithValid_3 sx_bankWriteAddrDec_resp_pipMod_1 (
    .clock       (clock),
    .io_in_bits  (writeAddrDec_1[5:0]),
    .io_in_valid (io_wen_1),
    .io_out_bits (_sx_bankWriteAddrDec_resp_pipMod_1_io_out_bits)
  );
  DelayNWithValid_3 sx_bankWriteAddrDec_resp_pipMod_2 (
    .clock       (clock),
    .io_in_bits  (writeAddrDec_2[5:0]),
    .io_in_valid (io_wen_2),
    .io_out_bits (_sx_bankWriteAddrDec_resp_pipMod_2_io_out_bits)
  );
  DelayN_216 sx_bankWriteEn_delay (
    .clock  (clock),
    .io_in  (io_wen_0 & (|(writeAddrDec_0[5:0]))),
    .io_out (_sx_bankWriteEn_delay_io_out)
  );
  DelayN_216 sx_bankWriteEn_delay_1 (
    .clock  (clock),
    .io_in  (io_wen_1 & (|(writeAddrDec_1[5:0]))),
    .io_out (_sx_bankWriteEn_delay_1_io_out)
  );
  DelayN_216 sx_bankWriteEn_delay_2 (
    .clock  (clock),
    .io_in  (io_wen_2 & (|(writeAddrDec_2[5:0]))),
    .io_out (_sx_bankWriteEn_delay_2_io_out)
  );
  DelayNWithValid_82 sx_writeData_resp_pipMod (
    .clock       (clock),
    .io_in_bits  (io_wdata_0),
    .io_in_valid (io_wen_0),
    .io_out_bits (_sx_writeData_resp_pipMod_io_out_bits)
  );
  DelayNWithValid_82 sx_writeData_resp_pipMod_1 (
    .clock       (clock),
    .io_in_bits  (io_wdata_1),
    .io_in_valid (io_wen_1),
    .io_out_bits (_sx_writeData_resp_pipMod_1_io_out_bits)
  );
  DelayNWithValid_82 sx_writeData_resp_pipMod_2 (
    .clock       (clock),
    .io_in_bits  (io_wdata_2),
    .io_in_valid (io_wen_2),
    .io_out_bits (_sx_writeData_resp_pipMod_2_io_out_bits)
  );
  DelayNWithValid_3 sx_bankWriteAddrDec_resp_pipMod_3 (
    .clock       (clock),
    .io_in_bits  (writeAddrDec_0[11:6]),
    .io_in_valid (io_wen_0),
    .io_out_bits (_sx_bankWriteAddrDec_resp_pipMod_3_io_out_bits)
  );
  DelayNWithValid_3 sx_bankWriteAddrDec_resp_pipMod_4 (
    .clock       (clock),
    .io_in_bits  (writeAddrDec_1[11:6]),
    .io_in_valid (io_wen_1),
    .io_out_bits (_sx_bankWriteAddrDec_resp_pipMod_4_io_out_bits)
  );
  DelayNWithValid_3 sx_bankWriteAddrDec_resp_pipMod_5 (
    .clock       (clock),
    .io_in_bits  (writeAddrDec_2[11:6]),
    .io_in_valid (io_wen_2),
    .io_out_bits (_sx_bankWriteAddrDec_resp_pipMod_5_io_out_bits)
  );
  DelayN_216 sx_bankWriteEn_delay_3 (
    .clock  (clock),
    .io_in  (io_wen_0 & (|(writeAddrDec_0[11:6]))),
    .io_out (_sx_bankWriteEn_delay_3_io_out)
  );
  DelayN_216 sx_bankWriteEn_delay_4 (
    .clock  (clock),
    .io_in  (io_wen_1 & (|(writeAddrDec_1[11:6]))),
    .io_out (_sx_bankWriteEn_delay_4_io_out)
  );
  DelayN_216 sx_bankWriteEn_delay_5 (
    .clock  (clock),
    .io_in  (io_wen_2 & (|(writeAddrDec_2[11:6]))),
    .io_out (_sx_bankWriteEn_delay_5_io_out)
  );
  DelayNWithValid_82 sx_writeData_resp_pipMod_3 (
    .clock       (clock),
    .io_in_bits  (io_wdata_0),
    .io_in_valid (io_wen_0),
    .io_out_bits (_sx_writeData_resp_pipMod_3_io_out_bits)
  );
  DelayNWithValid_82 sx_writeData_resp_pipMod_4 (
    .clock       (clock),
    .io_in_bits  (io_wdata_1),
    .io_in_valid (io_wen_1),
    .io_out_bits (_sx_writeData_resp_pipMod_4_io_out_bits)
  );
  DelayNWithValid_82 sx_writeData_resp_pipMod_5 (
    .clock       (clock),
    .io_in_bits  (io_wdata_2),
    .io_in_valid (io_wen_2),
    .io_out_bits (_sx_writeData_resp_pipMod_5_io_out_bits)
  );
  DelayNWithValid_3 sx_bankWriteAddrDec_resp_pipMod_6 (
    .clock       (clock),
    .io_in_bits  (writeAddrDec_0[17:12]),
    .io_in_valid (io_wen_0),
    .io_out_bits (_sx_bankWriteAddrDec_resp_pipMod_6_io_out_bits)
  );
  DelayNWithValid_3 sx_bankWriteAddrDec_resp_pipMod_7 (
    .clock       (clock),
    .io_in_bits  (writeAddrDec_1[17:12]),
    .io_in_valid (io_wen_1),
    .io_out_bits (_sx_bankWriteAddrDec_resp_pipMod_7_io_out_bits)
  );
  DelayNWithValid_3 sx_bankWriteAddrDec_resp_pipMod_8 (
    .clock       (clock),
    .io_in_bits  (writeAddrDec_2[17:12]),
    .io_in_valid (io_wen_2),
    .io_out_bits (_sx_bankWriteAddrDec_resp_pipMod_8_io_out_bits)
  );
  DelayN_216 sx_bankWriteEn_delay_6 (
    .clock  (clock),
    .io_in  (io_wen_0 & (|(writeAddrDec_0[17:12]))),
    .io_out (_sx_bankWriteEn_delay_6_io_out)
  );
  DelayN_216 sx_bankWriteEn_delay_7 (
    .clock  (clock),
    .io_in  (io_wen_1 & (|(writeAddrDec_1[17:12]))),
    .io_out (_sx_bankWriteEn_delay_7_io_out)
  );
  DelayN_216 sx_bankWriteEn_delay_8 (
    .clock  (clock),
    .io_in  (io_wen_2 & (|(writeAddrDec_2[17:12]))),
    .io_out (_sx_bankWriteEn_delay_8_io_out)
  );
  DelayNWithValid_82 sx_writeData_resp_pipMod_6 (
    .clock       (clock),
    .io_in_bits  (io_wdata_0),
    .io_in_valid (io_wen_0),
    .io_out_bits (_sx_writeData_resp_pipMod_6_io_out_bits)
  );
  DelayNWithValid_82 sx_writeData_resp_pipMod_7 (
    .clock       (clock),
    .io_in_bits  (io_wdata_1),
    .io_in_valid (io_wen_1),
    .io_out_bits (_sx_writeData_resp_pipMod_7_io_out_bits)
  );
  DelayNWithValid_82 sx_writeData_resp_pipMod_8 (
    .clock       (clock),
    .io_in_bits  (io_wdata_2),
    .io_in_valid (io_wen_2),
    .io_out_bits (_sx_writeData_resp_pipMod_8_io_out_bits)
  );
  DelayNWithValid_3 sx_bankWriteAddrDec_resp_pipMod_9 (
    .clock       (clock),
    .io_in_bits  (writeAddrDec_0[23:18]),
    .io_in_valid (io_wen_0),
    .io_out_bits (_sx_bankWriteAddrDec_resp_pipMod_9_io_out_bits)
  );
  DelayNWithValid_3 sx_bankWriteAddrDec_resp_pipMod_10 (
    .clock       (clock),
    .io_in_bits  (writeAddrDec_1[23:18]),
    .io_in_valid (io_wen_1),
    .io_out_bits (_sx_bankWriteAddrDec_resp_pipMod_10_io_out_bits)
  );
  DelayNWithValid_3 sx_bankWriteAddrDec_resp_pipMod_11 (
    .clock       (clock),
    .io_in_bits  (writeAddrDec_2[23:18]),
    .io_in_valid (io_wen_2),
    .io_out_bits (_sx_bankWriteAddrDec_resp_pipMod_11_io_out_bits)
  );
  DelayN_216 sx_bankWriteEn_delay_9 (
    .clock  (clock),
    .io_in  (io_wen_0 & (|(writeAddrDec_0[23:18]))),
    .io_out (_sx_bankWriteEn_delay_9_io_out)
  );
  DelayN_216 sx_bankWriteEn_delay_10 (
    .clock  (clock),
    .io_in  (io_wen_1 & (|(writeAddrDec_1[23:18]))),
    .io_out (_sx_bankWriteEn_delay_10_io_out)
  );
  DelayN_216 sx_bankWriteEn_delay_11 (
    .clock  (clock),
    .io_in  (io_wen_2 & (|(writeAddrDec_2[23:18]))),
    .io_out (_sx_bankWriteEn_delay_11_io_out)
  );
  DelayNWithValid_82 sx_writeData_resp_pipMod_9 (
    .clock       (clock),
    .io_in_bits  (io_wdata_0),
    .io_in_valid (io_wen_0),
    .io_out_bits (_sx_writeData_resp_pipMod_9_io_out_bits)
  );
  DelayNWithValid_82 sx_writeData_resp_pipMod_10 (
    .clock       (clock),
    .io_in_bits  (io_wdata_1),
    .io_in_valid (io_wen_1),
    .io_out_bits (_sx_writeData_resp_pipMod_10_io_out_bits)
  );
  DelayNWithValid_82 sx_writeData_resp_pipMod_11 (
    .clock       (clock),
    .io_in_bits  (io_wdata_2),
    .io_in_valid (io_wen_2),
    .io_out_bits (_sx_writeData_resp_pipMod_11_io_out_bits)
  );
  assign io_rdata_0 = io_rdata_0_r;
  assign io_rdata_1 = io_rdata_1_r;
  assign io_rdata_2 = io_rdata_2_r;
endmodule

