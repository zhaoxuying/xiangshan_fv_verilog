// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module Frontend(
  input          clock,
  input          reset,
  output         auto_inner_icache_ctrlUnitOpt_in_a_ready,
  input          auto_inner_icache_ctrlUnitOpt_in_a_valid,
  input  [3:0]   auto_inner_icache_ctrlUnitOpt_in_a_bits_opcode,
  input  [1:0]   auto_inner_icache_ctrlUnitOpt_in_a_bits_size,
  input  [2:0]   auto_inner_icache_ctrlUnitOpt_in_a_bits_source,
  input  [29:0]  auto_inner_icache_ctrlUnitOpt_in_a_bits_address,
  input  [7:0]   auto_inner_icache_ctrlUnitOpt_in_a_bits_mask,
  input  [63:0]  auto_inner_icache_ctrlUnitOpt_in_a_bits_data,
  input          auto_inner_icache_ctrlUnitOpt_in_d_ready,
  output         auto_inner_icache_ctrlUnitOpt_in_d_valid,
  output [3:0]   auto_inner_icache_ctrlUnitOpt_in_d_bits_opcode,
  output [1:0]   auto_inner_icache_ctrlUnitOpt_in_d_bits_size,
  output [2:0]   auto_inner_icache_ctrlUnitOpt_in_d_bits_source,
  output [63:0]  auto_inner_icache_ctrlUnitOpt_in_d_bits_data,
  input          auto_inner_icache_client_out_a_ready,
  output         auto_inner_icache_client_out_a_valid,
  output [3:0]   auto_inner_icache_client_out_a_bits_source,
  output [47:0]  auto_inner_icache_client_out_a_bits_address,
  input          auto_inner_icache_client_out_d_valid,
  input  [3:0]   auto_inner_icache_client_out_d_bits_opcode,
  input  [3:0]   auto_inner_icache_client_out_d_bits_source,
  input  [255:0] auto_inner_icache_client_out_d_bits_data,
  input          auto_inner_icache_client_out_d_bits_corrupt,
  input          auto_inner_instrUncache_client_out_a_ready,
  output         auto_inner_instrUncache_client_out_a_valid,
  output [47:0]  auto_inner_instrUncache_client_out_a_bits_address,
  input          auto_inner_instrUncache_client_out_d_valid,
  input          auto_inner_instrUncache_client_out_d_bits_source,
  input  [63:0]  auto_inner_instrUncache_client_out_d_bits_data,
  input          auto_inner_instrUncache_client_out_d_bits_corrupt,
  input  [47:0]  io_reset_vector,
  input          io_fencei,
  input          io_ptw_req_0_ready,
  output         io_ptw_req_0_valid,
  output [37:0]  io_ptw_req_0_bits_vpn,
  output [1:0]   io_ptw_req_0_bits_s2xlate,
  output         io_ptw_resp_ready,
  input          io_ptw_resp_valid,
  input  [1:0]   io_ptw_resp_bits_s2xlate,
  input  [34:0]  io_ptw_resp_bits_s1_entry_tag,
  input  [15:0]  io_ptw_resp_bits_s1_entry_asid,
  input  [13:0]  io_ptw_resp_bits_s1_entry_vmid,
  input          io_ptw_resp_bits_s1_entry_n,
  input  [1:0]   io_ptw_resp_bits_s1_entry_pbmt,
  input          io_ptw_resp_bits_s1_entry_perm_d,
  input          io_ptw_resp_bits_s1_entry_perm_a,
  input          io_ptw_resp_bits_s1_entry_perm_g,
  input          io_ptw_resp_bits_s1_entry_perm_u,
  input          io_ptw_resp_bits_s1_entry_perm_x,
  input          io_ptw_resp_bits_s1_entry_perm_w,
  input          io_ptw_resp_bits_s1_entry_perm_r,
  input  [1:0]   io_ptw_resp_bits_s1_entry_level,
  input          io_ptw_resp_bits_s1_entry_v,
  input  [40:0]  io_ptw_resp_bits_s1_entry_ppn,
  input  [2:0]   io_ptw_resp_bits_s1_addr_low,
  input  [2:0]   io_ptw_resp_bits_s1_ppn_low_0,
  input  [2:0]   io_ptw_resp_bits_s1_ppn_low_1,
  input  [2:0]   io_ptw_resp_bits_s1_ppn_low_2,
  input  [2:0]   io_ptw_resp_bits_s1_ppn_low_3,
  input  [2:0]   io_ptw_resp_bits_s1_ppn_low_4,
  input  [2:0]   io_ptw_resp_bits_s1_ppn_low_5,
  input  [2:0]   io_ptw_resp_bits_s1_ppn_low_6,
  input  [2:0]   io_ptw_resp_bits_s1_ppn_low_7,
  input          io_ptw_resp_bits_s1_valididx_0,
  input          io_ptw_resp_bits_s1_valididx_1,
  input          io_ptw_resp_bits_s1_valididx_2,
  input          io_ptw_resp_bits_s1_valididx_3,
  input          io_ptw_resp_bits_s1_valididx_4,
  input          io_ptw_resp_bits_s1_valididx_5,
  input          io_ptw_resp_bits_s1_valididx_6,
  input          io_ptw_resp_bits_s1_valididx_7,
  input          io_ptw_resp_bits_s1_pteidx_0,
  input          io_ptw_resp_bits_s1_pteidx_1,
  input          io_ptw_resp_bits_s1_pteidx_2,
  input          io_ptw_resp_bits_s1_pteidx_3,
  input          io_ptw_resp_bits_s1_pteidx_4,
  input          io_ptw_resp_bits_s1_pteidx_5,
  input          io_ptw_resp_bits_s1_pteidx_6,
  input          io_ptw_resp_bits_s1_pteidx_7,
  input          io_ptw_resp_bits_s1_pf,
  input          io_ptw_resp_bits_s1_af,
  input  [37:0]  io_ptw_resp_bits_s2_entry_tag,
  input  [13:0]  io_ptw_resp_bits_s2_entry_vmid,
  input          io_ptw_resp_bits_s2_entry_n,
  input  [1:0]   io_ptw_resp_bits_s2_entry_pbmt,
  input  [37:0]  io_ptw_resp_bits_s2_entry_ppn,
  input          io_ptw_resp_bits_s2_entry_perm_d,
  input          io_ptw_resp_bits_s2_entry_perm_a,
  input          io_ptw_resp_bits_s2_entry_perm_g,
  input          io_ptw_resp_bits_s2_entry_perm_u,
  input          io_ptw_resp_bits_s2_entry_perm_x,
  input          io_ptw_resp_bits_s2_entry_perm_w,
  input          io_ptw_resp_bits_s2_entry_perm_r,
  input  [1:0]   io_ptw_resp_bits_s2_entry_level,
  input          io_ptw_resp_bits_s2_gpf,
  input          io_ptw_resp_bits_s2_gaf,
  output         io_backend_cfVec_0_valid,
  output [31:0]  io_backend_cfVec_0_bits_instr,
  output         io_backend_cfVec_0_bits_exceptionVec_1,
  output         io_backend_cfVec_0_bits_exceptionVec_2,
  output         io_backend_cfVec_0_bits_exceptionVec_12,
  output         io_backend_cfVec_0_bits_exceptionVec_20,
  output         io_backend_cfVec_0_bits_backendException,
  output [3:0]   io_backend_cfVec_0_bits_trigger,
  output         io_backend_cfVec_0_bits_pd_isRVC,
  output [1:0]   io_backend_cfVec_0_bits_pd_brType,
  output         io_backend_cfVec_0_bits_pred_taken,
  output         io_backend_cfVec_0_bits_crossPageIPFFix,
  output         io_backend_cfVec_0_bits_ftqPtr_flag,
  output [2:0]   io_backend_cfVec_0_bits_ftqPtr_value,
  output [3:0]   io_backend_cfVec_0_bits_ftqOffset,
  output         io_backend_cfVec_1_valid,
  output [31:0]  io_backend_cfVec_1_bits_instr,
  output         io_backend_cfVec_1_bits_exceptionVec_1,
  output         io_backend_cfVec_1_bits_exceptionVec_2,
  output         io_backend_cfVec_1_bits_exceptionVec_12,
  output         io_backend_cfVec_1_bits_exceptionVec_20,
  output         io_backend_cfVec_1_bits_backendException,
  output [3:0]   io_backend_cfVec_1_bits_trigger,
  output         io_backend_cfVec_1_bits_pd_isRVC,
  output [1:0]   io_backend_cfVec_1_bits_pd_brType,
  output         io_backend_cfVec_1_bits_pred_taken,
  output         io_backend_cfVec_1_bits_crossPageIPFFix,
  output         io_backend_cfVec_1_bits_ftqPtr_flag,
  output [2:0]   io_backend_cfVec_1_bits_ftqPtr_value,
  output [3:0]   io_backend_cfVec_1_bits_ftqOffset,
  output         io_backend_cfVec_2_valid,
  output [31:0]  io_backend_cfVec_2_bits_instr,
  output         io_backend_cfVec_2_bits_exceptionVec_1,
  output         io_backend_cfVec_2_bits_exceptionVec_2,
  output         io_backend_cfVec_2_bits_exceptionVec_12,
  output         io_backend_cfVec_2_bits_exceptionVec_20,
  output         io_backend_cfVec_2_bits_backendException,
  output [3:0]   io_backend_cfVec_2_bits_trigger,
  output         io_backend_cfVec_2_bits_pd_isRVC,
  output [1:0]   io_backend_cfVec_2_bits_pd_brType,
  output         io_backend_cfVec_2_bits_pred_taken,
  output         io_backend_cfVec_2_bits_crossPageIPFFix,
  output         io_backend_cfVec_2_bits_ftqPtr_flag,
  output [2:0]   io_backend_cfVec_2_bits_ftqPtr_value,
  output [3:0]   io_backend_cfVec_2_bits_ftqOffset,
  output         io_backend_cfVec_3_valid,
  output [31:0]  io_backend_cfVec_3_bits_instr,
  output         io_backend_cfVec_3_bits_exceptionVec_1,
  output         io_backend_cfVec_3_bits_exceptionVec_2,
  output         io_backend_cfVec_3_bits_exceptionVec_12,
  output         io_backend_cfVec_3_bits_exceptionVec_20,
  output         io_backend_cfVec_3_bits_backendException,
  output [3:0]   io_backend_cfVec_3_bits_trigger,
  output         io_backend_cfVec_3_bits_pd_isRVC,
  output [1:0]   io_backend_cfVec_3_bits_pd_brType,
  output         io_backend_cfVec_3_bits_pred_taken,
  output         io_backend_cfVec_3_bits_crossPageIPFFix,
  output         io_backend_cfVec_3_bits_ftqPtr_flag,
  output [2:0]   io_backend_cfVec_3_bits_ftqPtr_value,
  output [3:0]   io_backend_cfVec_3_bits_ftqOffset,
  output         io_backend_cfVec_4_valid,
  output [31:0]  io_backend_cfVec_4_bits_instr,
  output         io_backend_cfVec_4_bits_exceptionVec_1,
  output         io_backend_cfVec_4_bits_exceptionVec_2,
  output         io_backend_cfVec_4_bits_exceptionVec_12,
  output         io_backend_cfVec_4_bits_exceptionVec_20,
  output         io_backend_cfVec_4_bits_backendException,
  output [3:0]   io_backend_cfVec_4_bits_trigger,
  output         io_backend_cfVec_4_bits_pd_isRVC,
  output [1:0]   io_backend_cfVec_4_bits_pd_brType,
  output         io_backend_cfVec_4_bits_pred_taken,
  output         io_backend_cfVec_4_bits_crossPageIPFFix,
  output         io_backend_cfVec_4_bits_ftqPtr_flag,
  output [2:0]   io_backend_cfVec_4_bits_ftqPtr_value,
  output [3:0]   io_backend_cfVec_4_bits_ftqOffset,
  output         io_backend_cfVec_5_valid,
  output [31:0]  io_backend_cfVec_5_bits_instr,
  output         io_backend_cfVec_5_bits_exceptionVec_1,
  output         io_backend_cfVec_5_bits_exceptionVec_2,
  output         io_backend_cfVec_5_bits_exceptionVec_12,
  output         io_backend_cfVec_5_bits_exceptionVec_20,
  output         io_backend_cfVec_5_bits_backendException,
  output [3:0]   io_backend_cfVec_5_bits_trigger,
  output         io_backend_cfVec_5_bits_pd_isRVC,
  output [1:0]   io_backend_cfVec_5_bits_pd_brType,
  output         io_backend_cfVec_5_bits_pred_taken,
  output         io_backend_cfVec_5_bits_crossPageIPFFix,
  output         io_backend_cfVec_5_bits_ftqPtr_flag,
  output [2:0]   io_backend_cfVec_5_bits_ftqPtr_value,
  output [3:0]   io_backend_cfVec_5_bits_ftqOffset,
  output         io_backend_fromFtq_pc_mem_wen,
  output [2:0]   io_backend_fromFtq_pc_mem_waddr,
  output [49:0]  io_backend_fromFtq_pc_mem_wdata_startAddr,
  output         io_backend_fromFtq_newest_entry_en,
  output [49:0]  io_backend_fromFtq_newest_entry_target,
  output [2:0]   io_backend_fromFtq_newest_entry_ptr_value,
  output         io_backend_fromIfu_gpaddrMem_wen,
  output [2:0]   io_backend_fromIfu_gpaddrMem_waddr,
  output [55:0]  io_backend_fromIfu_gpaddrMem_wdata_gpaddr,
  output         io_backend_fromIfu_gpaddrMem_wdata_isForVSnonLeafPTE,
  input          io_backend_toFtq_rob_commits_0_valid,
  input  [2:0]   io_backend_toFtq_rob_commits_0_bits_commitType,
  input          io_backend_toFtq_rob_commits_0_bits_ftqIdx_flag,
  input  [2:0]   io_backend_toFtq_rob_commits_0_bits_ftqIdx_value,
  input  [3:0]   io_backend_toFtq_rob_commits_0_bits_ftqOffset,
  input          io_backend_toFtq_rob_commits_1_valid,
  input  [2:0]   io_backend_toFtq_rob_commits_1_bits_commitType,
  input          io_backend_toFtq_rob_commits_1_bits_ftqIdx_flag,
  input  [2:0]   io_backend_toFtq_rob_commits_1_bits_ftqIdx_value,
  input  [3:0]   io_backend_toFtq_rob_commits_1_bits_ftqOffset,
  input          io_backend_toFtq_rob_commits_2_valid,
  input  [2:0]   io_backend_toFtq_rob_commits_2_bits_commitType,
  input          io_backend_toFtq_rob_commits_2_bits_ftqIdx_flag,
  input  [2:0]   io_backend_toFtq_rob_commits_2_bits_ftqIdx_value,
  input  [3:0]   io_backend_toFtq_rob_commits_2_bits_ftqOffset,
  input          io_backend_toFtq_rob_commits_3_valid,
  input  [2:0]   io_backend_toFtq_rob_commits_3_bits_commitType,
  input          io_backend_toFtq_rob_commits_3_bits_ftqIdx_flag,
  input  [2:0]   io_backend_toFtq_rob_commits_3_bits_ftqIdx_value,
  input  [3:0]   io_backend_toFtq_rob_commits_3_bits_ftqOffset,
  input          io_backend_toFtq_rob_commits_4_valid,
  input  [2:0]   io_backend_toFtq_rob_commits_4_bits_commitType,
  input          io_backend_toFtq_rob_commits_4_bits_ftqIdx_flag,
  input  [2:0]   io_backend_toFtq_rob_commits_4_bits_ftqIdx_value,
  input  [3:0]   io_backend_toFtq_rob_commits_4_bits_ftqOffset,
  input          io_backend_toFtq_rob_commits_5_valid,
  input  [2:0]   io_backend_toFtq_rob_commits_5_bits_commitType,
  input          io_backend_toFtq_rob_commits_5_bits_ftqIdx_flag,
  input  [2:0]   io_backend_toFtq_rob_commits_5_bits_ftqIdx_value,
  input  [3:0]   io_backend_toFtq_rob_commits_5_bits_ftqOffset,
  input          io_backend_toFtq_rob_commits_6_valid,
  input  [2:0]   io_backend_toFtq_rob_commits_6_bits_commitType,
  input          io_backend_toFtq_rob_commits_6_bits_ftqIdx_flag,
  input  [2:0]   io_backend_toFtq_rob_commits_6_bits_ftqIdx_value,
  input  [3:0]   io_backend_toFtq_rob_commits_6_bits_ftqOffset,
  input          io_backend_toFtq_rob_commits_7_valid,
  input  [2:0]   io_backend_toFtq_rob_commits_7_bits_commitType,
  input          io_backend_toFtq_rob_commits_7_bits_ftqIdx_flag,
  input  [2:0]   io_backend_toFtq_rob_commits_7_bits_ftqIdx_value,
  input  [3:0]   io_backend_toFtq_rob_commits_7_bits_ftqOffset,
  input          io_backend_toFtq_redirect_valid,
  input          io_backend_toFtq_redirect_bits_ftqIdx_flag,
  input  [2:0]   io_backend_toFtq_redirect_bits_ftqIdx_value,
  input  [3:0]   io_backend_toFtq_redirect_bits_ftqOffset,
  input          io_backend_toFtq_redirect_bits_level,
  input  [49:0]  io_backend_toFtq_redirect_bits_cfiUpdate_pc,
  input  [49:0]  io_backend_toFtq_redirect_bits_cfiUpdate_target,
  input          io_backend_toFtq_redirect_bits_cfiUpdate_taken,
  input          io_backend_toFtq_redirect_bits_cfiUpdate_isMisPred,
  input          io_backend_toFtq_redirect_bits_cfiUpdate_backendIGPF,
  input          io_backend_toFtq_redirect_bits_cfiUpdate_backendIPF,
  input          io_backend_toFtq_redirect_bits_cfiUpdate_backendIAF,
  input          io_backend_toFtq_ftqIdxAhead_0_valid,
  input  [2:0]   io_backend_toFtq_ftqIdxAhead_0_bits_value,
  input  [2:0]   io_backend_toFtq_ftqIdxSelOH_bits,
  input          io_backend_canAccept,
  input          io_softPrefetch_0_valid,
  input  [49:0]  io_softPrefetch_0_bits_vaddr,
  input          io_softPrefetch_1_valid,
  input  [49:0]  io_softPrefetch_1_bits_vaddr,
  input          io_softPrefetch_2_valid,
  input  [49:0]  io_softPrefetch_2_bits_vaddr,
  input          io_sfence_valid,
  input          io_sfence_bits_rs1,
  input          io_sfence_bits_rs2,
  input  [49:0]  io_sfence_bits_addr,
  input  [15:0]  io_sfence_bits_id,
  input          io_sfence_bits_flushPipe,
  input          io_sfence_bits_hv,
  input          io_sfence_bits_hg,
  input  [3:0]   io_tlbCsr_satp_mode,
  input  [15:0]  io_tlbCsr_satp_asid,
  input          io_tlbCsr_satp_changed,
  input  [3:0]   io_tlbCsr_vsatp_mode,
  input  [15:0]  io_tlbCsr_vsatp_asid,
  input          io_tlbCsr_vsatp_changed,
  input  [3:0]   io_tlbCsr_hgatp_mode,
  input  [15:0]  io_tlbCsr_hgatp_vmid,
  input          io_tlbCsr_hgatp_changed,
  input          io_tlbCsr_priv_mxr,
  input          io_tlbCsr_priv_sum,
  input          io_tlbCsr_priv_vmxr,
  input          io_tlbCsr_priv_vsum,
  input          io_tlbCsr_priv_virt,
  input          io_tlbCsr_priv_spvp,
  input  [1:0]   io_tlbCsr_priv_imode,
  input  [1:0]   io_tlbCsr_priv_dmode,
  input  [1:0]   io_tlbCsr_pmm_mseccfg,
  input  [1:0]   io_tlbCsr_pmm_menvcfg,
  input  [1:0]   io_tlbCsr_pmm_henvcfg,
  input  [1:0]   io_tlbCsr_pmm_hstatus,
  input  [1:0]   io_tlbCsr_pmm_senvcfg,
  input          io_csrCtrl_pf_ctrl_l1I_pf_enable,
  input          io_csrCtrl_bp_ctrl_ubtb_enable,
  input          io_csrCtrl_bp_ctrl_btb_enable,
  input          io_csrCtrl_bp_ctrl_tage_enable,
  input          io_csrCtrl_bp_ctrl_sc_enable,
  input          io_csrCtrl_bp_ctrl_ras_enable,
  input          io_csrCtrl_ldld_vio_check_enable,
  input          io_csrCtrl_cache_error_enable,
  input          io_csrCtrl_hd_misalign_st_enable,
  input          io_csrCtrl_hd_misalign_ld_enable,
  input          io_csrCtrl_distribute_csr_w_valid,
  input  [11:0]  io_csrCtrl_distribute_csr_w_bits_addr,
  input  [63:0]  io_csrCtrl_distribute_csr_w_bits_data,
  input          io_csrCtrl_frontend_trigger_tUpdate_valid,
  input  [1:0]   io_csrCtrl_frontend_trigger_tUpdate_bits_addr,
  input  [1:0]   io_csrCtrl_frontend_trigger_tUpdate_bits_tdata_matchType,
  input          io_csrCtrl_frontend_trigger_tUpdate_bits_tdata_select,
  input  [3:0]   io_csrCtrl_frontend_trigger_tUpdate_bits_tdata_action,
  input          io_csrCtrl_frontend_trigger_tUpdate_bits_tdata_chain,
  input  [63:0]  io_csrCtrl_frontend_trigger_tUpdate_bits_tdata_tdata2,
  input          io_csrCtrl_frontend_trigger_tEnableVec_0,
  input          io_csrCtrl_frontend_trigger_tEnableVec_1,
  input          io_csrCtrl_frontend_trigger_tEnableVec_2,
  input          io_csrCtrl_frontend_trigger_tEnableVec_3,
  input          io_csrCtrl_frontend_trigger_debugMode,
  input          io_csrCtrl_frontend_trigger_triggerCanRaiseBpExp,
  input          io_csrCtrl_mem_trigger_tUpdate_valid,
  input  [1:0]   io_csrCtrl_mem_trigger_tUpdate_bits_addr,
  input  [1:0]   io_csrCtrl_mem_trigger_tUpdate_bits_tdata_matchType,
  input          io_csrCtrl_mem_trigger_tUpdate_bits_tdata_select,
  input  [3:0]   io_csrCtrl_mem_trigger_tUpdate_bits_tdata_action,
  input          io_csrCtrl_mem_trigger_tUpdate_bits_tdata_chain,
  input          io_csrCtrl_mem_trigger_tUpdate_bits_tdata_store,
  input          io_csrCtrl_mem_trigger_tUpdate_bits_tdata_load,
  input  [63:0]  io_csrCtrl_mem_trigger_tUpdate_bits_tdata_tdata2,
  input          io_csrCtrl_mem_trigger_tEnableVec_0,
  input          io_csrCtrl_mem_trigger_tEnableVec_1,
  input          io_csrCtrl_mem_trigger_tEnableVec_2,
  input          io_csrCtrl_mem_trigger_tEnableVec_3,
  input          io_csrCtrl_mem_trigger_debugMode,
  input          io_csrCtrl_mem_trigger_triggerCanRaiseBpExp,
  input          io_csrCtrl_fsIsOff,
  output         io_error_valid,
  output [47:0]  io_error_bits_paddr,
  output         io_error_bits_report_to_beu,
  output         io_resetInFrontend,
  output [5:0]   io_perf_0_value,
  output [5:0]   io_perf_1_value,
  output [5:0]   io_perf_2_value,
  output [5:0]   io_perf_3_value,
  output [5:0]   io_perf_4_value,
  output [5:0]   io_perf_5_value,
  output [5:0]   io_perf_6_value,
  output [5:0]   io_perf_7_value,

  output reg     inst_fifo_rd,
  input  [31:0]  inst_fifo_rdata
);
//zxy
  assign         auto_inner_icache_ctrlUnitOpt_in_a_ready = 1'b0;
  assign         auto_inner_icache_ctrlUnitOpt_in_d_valid = 1'b0;
  assign         auto_inner_icache_ctrlUnitOpt_in_d_bits_opcode = 4'b0;
  assign         auto_inner_icache_ctrlUnitOpt_in_d_bits_size = 2'b0;
  assign         auto_inner_icache_ctrlUnitOpt_in_d_bits_source = 3'b0;
  assign         auto_inner_icache_ctrlUnitOpt_in_d_bits_data = 64'b0;
  assign         auto_inner_icache_client_out_a_valid = 1'b0;
  assign         auto_inner_icache_client_out_a_bits_source = 4'b0;
  assign         auto_inner_icache_client_out_a_bits_address = 48'b0;
  assign         auto_inner_instrUncache_client_out_a_valid = 1'b0;
  assign         auto_inner_instrUncache_client_out_a_bits_address = 48'b0;
  assign         io_ptw_req_0_valid = 1'b0;
  assign         io_ptw_req_0_bits_vpn = 38'b0;
  assign         io_ptw_req_0_bits_s2xlate = 2'b0;
  assign         io_ptw_resp_ready = 1'b0;
  
  assign         io_backend_cfVec_0_bits_exceptionVec_1 = 1'b0;
  assign         io_backend_cfVec_0_bits_exceptionVec_2 = 1'b0;
  assign         io_backend_cfVec_0_bits_exceptionVec_12 = 1'b0;
  assign         io_backend_cfVec_0_bits_exceptionVec_20 = 1'b0;
  assign         io_backend_cfVec_0_bits_backendException = 1'b0;
  assign         io_backend_cfVec_0_bits_trigger = 4'hf;
  assign         io_backend_cfVec_0_bits_pd_isRVC = 1'b0;
  assign         io_backend_cfVec_0_bits_pd_brType = 2'b0;
  assign         io_backend_cfVec_0_bits_pred_taken = 1'b0;
  assign         io_backend_cfVec_0_bits_crossPageIPFFix = 1'b0;
  assign         io_backend_cfVec_0_bits_ftqPtr_flag = 1'b0;
  assign         io_backend_cfVec_0_bits_ftqPtr_value = 3'b0;
  assign         io_backend_cfVec_0_bits_ftqOffset = 4'b0;
  assign         io_backend_cfVec_1_bits_exceptionVec_1 = 1'b0;
  assign         io_backend_cfVec_1_bits_exceptionVec_2 = 1'b0;
  assign         io_backend_cfVec_1_bits_exceptionVec_12 = 1'b0;
  assign         io_backend_cfVec_1_bits_exceptionVec_20 = 1'b0;
  assign         io_backend_cfVec_1_bits_backendException = 1'b0;
  assign         io_backend_cfVec_1_bits_trigger = 4'hf;
  assign         io_backend_cfVec_1_bits_pd_isRVC = 1'b0;
  assign         io_backend_cfVec_1_bits_pd_brType = 2'b0;
  assign         io_backend_cfVec_1_bits_pred_taken = 1'b0;
  assign         io_backend_cfVec_1_bits_crossPageIPFFix = 1'b0;
  assign         io_backend_cfVec_1_bits_ftqPtr_flag = 1'b0;
  assign         io_backend_cfVec_1_bits_ftqPtr_value = 3'b0;
  assign         io_backend_cfVec_1_bits_ftqOffset = 4'b0;
  assign         io_backend_cfVec_2_bits_exceptionVec_1 = 1'b0;
  assign         io_backend_cfVec_2_bits_exceptionVec_2 = 1'b0;
  assign         io_backend_cfVec_2_bits_exceptionVec_12 = 1'b0;
  assign         io_backend_cfVec_2_bits_exceptionVec_20 = 1'b0;
  assign         io_backend_cfVec_2_bits_backendException = 1'b0;
  assign         io_backend_cfVec_2_bits_trigger = 4'hf;
  assign         io_backend_cfVec_2_bits_pd_isRVC = 1'b0;
  assign         io_backend_cfVec_2_bits_pd_brType = 2'b0;
  assign         io_backend_cfVec_2_bits_pred_taken = 1'b0;
  assign         io_backend_cfVec_2_bits_crossPageIPFFix = 1'b0;
  assign         io_backend_cfVec_2_bits_ftqPtr_flag = 1'b0;
  assign         io_backend_cfVec_2_bits_ftqPtr_value = 3'b0;
  assign         io_backend_cfVec_2_bits_ftqOffset = 4'b0;
  assign         io_backend_cfVec_3_bits_exceptionVec_1 = 1'b0;
  assign         io_backend_cfVec_3_bits_exceptionVec_2 = 1'b0;
  assign         io_backend_cfVec_3_bits_exceptionVec_12 = 1'b0;
  assign         io_backend_cfVec_3_bits_exceptionVec_20 = 1'b0;
  assign         io_backend_cfVec_3_bits_backendException = 1'b0;
  assign         io_backend_cfVec_3_bits_trigger = 4'hf;
  assign         io_backend_cfVec_3_bits_pd_isRVC = 1'b0;
  assign         io_backend_cfVec_3_bits_pd_brType = 2'b0;
  assign         io_backend_cfVec_3_bits_pred_taken = 1'b0;
  assign         io_backend_cfVec_3_bits_crossPageIPFFix = 1'b0;
  assign         io_backend_cfVec_3_bits_ftqPtr_flag = 1'b0;
  assign         io_backend_cfVec_3_bits_ftqPtr_value = 3'b0;
  assign         io_backend_cfVec_3_bits_ftqOffset = 4'b0;
  assign         io_backend_cfVec_4_bits_exceptionVec_1 = 1'b0;
  assign         io_backend_cfVec_4_bits_exceptionVec_2 = 1'b0;
  assign         io_backend_cfVec_4_bits_exceptionVec_12 = 1'b0;
  assign         io_backend_cfVec_4_bits_exceptionVec_20 = 1'b0;
  assign         io_backend_cfVec_4_bits_backendException = 1'b0;
  assign         io_backend_cfVec_4_bits_trigger = 4'hf;
  assign         io_backend_cfVec_4_bits_pd_isRVC = 1'b0;
  assign         io_backend_cfVec_4_bits_pd_brType = 2'b0;
  assign         io_backend_cfVec_4_bits_pred_taken = 1'b0;
  assign         io_backend_cfVec_4_bits_crossPageIPFFix = 1'b0;
  assign         io_backend_cfVec_4_bits_ftqPtr_flag = 1'b0;
  assign         io_backend_cfVec_4_bits_ftqPtr_value = 3'b0;
  assign         io_backend_cfVec_4_bits_ftqOffset = 4'b0;
  assign         io_backend_cfVec_5_bits_exceptionVec_1 = 1'b0;
  assign         io_backend_cfVec_5_bits_exceptionVec_2 = 1'b0;
  assign         io_backend_cfVec_5_bits_exceptionVec_12 = 1'b0;
  assign         io_backend_cfVec_5_bits_exceptionVec_20 = 1'b0;
  assign         io_backend_cfVec_5_bits_backendException = 1'b0;
  assign         io_backend_cfVec_5_bits_trigger = 4'hf;
  assign         io_backend_cfVec_5_bits_pd_isRVC = 1'b0;
  assign         io_backend_cfVec_5_bits_pd_brType = 2'b0;
  assign         io_backend_cfVec_5_bits_pred_taken = 1'b0;
  assign         io_backend_cfVec_5_bits_crossPageIPFFix = 1'b0;
  assign         io_backend_cfVec_5_bits_ftqPtr_flag = 1'b0;
  assign         io_backend_cfVec_5_bits_ftqPtr_value = 3'b0;
  assign         io_backend_cfVec_5_bits_ftqOffset = 4'b0;
  assign         io_backend_fromFtq_pc_mem_wen = 1'b0;
  assign         io_backend_fromFtq_pc_mem_waddr = 3'b0;
  assign         io_backend_fromFtq_pc_mem_wdata_startAddr = 50'b0;
  assign         io_backend_fromFtq_newest_entry_en = 1'b0;
  assign         io_backend_fromFtq_newest_entry_target = 50'b0;
  assign         io_backend_fromFtq_newest_entry_ptr_value = 3'b0;
  assign         io_backend_fromIfu_gpaddrMem_wen = 1'b0;
  assign         io_backend_fromIfu_gpaddrMem_waddr = 3'b0;
  assign         io_backend_fromIfu_gpaddrMem_wdata_gpaddr = 56'b0;
  assign         io_backend_fromIfu_gpaddrMem_wdata_isForVSnonLeafPTE = 1'b0;
  assign         io_error_valid =1'b0;
  assign         io_error_bits_paddr = 48'b0;
  assign         io_error_bits_report_to_beu = 1'b0;
  assign         io_resetInFrontend = 1'b0;
  assign         io_perf_0_value = 6'b0;
  assign         io_perf_1_value = 6'b0;
  assign         io_perf_2_value = 6'b0;
  assign         io_perf_3_value = 6'b0;
  assign         io_perf_4_value = 6'b0;
  assign         io_perf_5_value = 6'b0;
  assign         io_perf_6_value = 6'b0;
  assign         io_perf_7_value = 6'b0;

  assign         io_backend_cfVec_1_valid = 1'b0;
  assign         io_backend_cfVec_1_bits_instr = 32'b0;
  assign         io_backend_cfVec_2_valid = 1'b0;
  assign         io_backend_cfVec_2_bits_instr = 32'b0;
  assign         io_backend_cfVec_3_valid = 1'b0;
  assign         io_backend_cfVec_3_bits_instr = 32'b0;
  assign         io_backend_cfVec_4_valid = 1'b0;
  assign         io_backend_cfVec_4_bits_instr = 32'b0;
  assign         io_backend_cfVec_5_valid = 1'b0;
  assign         io_backend_cfVec_5_bits_instr = 32'b0;

  assign         io_backend_cfVec_0_bits_instr = inst_fifo_rdata;
  assign         io_backend_cfVec_0_valid = inst_fifo_rd;
  assign         io_backend_cfVec_0_bits_trigger = 4'hf;

  always @(posedge clock) begin
    if(reset) inst_fifo_rd <= 1'b0;
    else inst_fifo_rd <= io_backend_canAccept;
  end

endmodule

