// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module Og2ForVector(
  input          clock,
  input          reset,
  input          io_flush_valid,
  input          io_flush_bits_robIdx_flag,
  input  [5:0]   io_flush_bits_robIdx_value,
  input          io_flush_bits_level,
  input          io_fromOg1VfArith_2_0_valid,
  input  [34:0]  io_fromOg1VfArith_2_0_bits_fuType,
  input  [8:0]   io_fromOg1VfArith_2_0_bits_fuOpType,
  input  [127:0] io_fromOg1VfArith_2_0_bits_src_0,
  input  [127:0] io_fromOg1VfArith_2_0_bits_src_1,
  input  [127:0] io_fromOg1VfArith_2_0_bits_src_2,
  input  [127:0] io_fromOg1VfArith_2_0_bits_src_3,
  input  [127:0] io_fromOg1VfArith_2_0_bits_src_4,
  input          io_fromOg1VfArith_2_0_bits_robIdx_flag,
  input  [5:0]   io_fromOg1VfArith_2_0_bits_robIdx_value,
  input  [7:0]   io_fromOg1VfArith_2_0_bits_pdest,
  input          io_fromOg1VfArith_2_0_bits_vecWen,
  input          io_fromOg1VfArith_2_0_bits_v0Wen,
  input          io_fromOg1VfArith_2_0_bits_fpu_wflags,
  input          io_fromOg1VfArith_2_0_bits_vpu_vma,
  input          io_fromOg1VfArith_2_0_bits_vpu_vta,
  input  [1:0]   io_fromOg1VfArith_2_0_bits_vpu_vsew,
  input  [2:0]   io_fromOg1VfArith_2_0_bits_vpu_vlmul,
  input          io_fromOg1VfArith_2_0_bits_vpu_vm,
  input  [7:0]   io_fromOg1VfArith_2_0_bits_vpu_vstart,
  input  [6:0]   io_fromOg1VfArith_2_0_bits_vpu_vuopIdx,
  input          io_fromOg1VfArith_2_0_bits_vpu_isExt,
  input          io_fromOg1VfArith_2_0_bits_vpu_isNarrow,
  input          io_fromOg1VfArith_2_0_bits_vpu_isDstMask,
  input          io_fromOg1VfArith_2_0_bits_vpu_isOpMask,
  input  [3:0]   io_fromOg1VfArith_2_0_bits_dataSources_0_value,
  input  [3:0]   io_fromOg1VfArith_2_0_bits_dataSources_1_value,
  input  [3:0]   io_fromOg1VfArith_2_0_bits_dataSources_2_value,
  input  [3:0]   io_fromOg1VfArith_2_0_bits_dataSources_3_value,
  input  [3:0]   io_fromOg1VfArith_2_0_bits_dataSources_4_value,
  input          io_fromOg1VfArith_1_1_valid,
  input  [34:0]  io_fromOg1VfArith_1_1_bits_fuType,
  input  [8:0]   io_fromOg1VfArith_1_1_bits_fuOpType,
  input  [127:0] io_fromOg1VfArith_1_1_bits_src_0,
  input  [127:0] io_fromOg1VfArith_1_1_bits_src_1,
  input  [127:0] io_fromOg1VfArith_1_1_bits_src_2,
  input  [127:0] io_fromOg1VfArith_1_1_bits_src_3,
  input  [127:0] io_fromOg1VfArith_1_1_bits_src_4,
  input          io_fromOg1VfArith_1_1_bits_robIdx_flag,
  input  [5:0]   io_fromOg1VfArith_1_1_bits_robIdx_value,
  input  [7:0]   io_fromOg1VfArith_1_1_bits_pdest,
  input          io_fromOg1VfArith_1_1_bits_fpWen,
  input          io_fromOg1VfArith_1_1_bits_vecWen,
  input          io_fromOg1VfArith_1_1_bits_v0Wen,
  input          io_fromOg1VfArith_1_1_bits_fpu_wflags,
  input          io_fromOg1VfArith_1_1_bits_vpu_vma,
  input          io_fromOg1VfArith_1_1_bits_vpu_vta,
  input  [1:0]   io_fromOg1VfArith_1_1_bits_vpu_vsew,
  input  [2:0]   io_fromOg1VfArith_1_1_bits_vpu_vlmul,
  input          io_fromOg1VfArith_1_1_bits_vpu_vm,
  input  [7:0]   io_fromOg1VfArith_1_1_bits_vpu_vstart,
  input          io_fromOg1VfArith_1_1_bits_vpu_fpu_isFoldTo1_2,
  input          io_fromOg1VfArith_1_1_bits_vpu_fpu_isFoldTo1_4,
  input          io_fromOg1VfArith_1_1_bits_vpu_fpu_isFoldTo1_8,
  input  [6:0]   io_fromOg1VfArith_1_1_bits_vpu_vuopIdx,
  input          io_fromOg1VfArith_1_1_bits_vpu_lastUop,
  input          io_fromOg1VfArith_1_1_bits_vpu_isNarrow,
  input          io_fromOg1VfArith_1_1_bits_vpu_isDstMask,
  input  [3:0]   io_fromOg1VfArith_1_1_bits_dataSources_0_value,
  input  [3:0]   io_fromOg1VfArith_1_1_bits_dataSources_1_value,
  input  [3:0]   io_fromOg1VfArith_1_1_bits_dataSources_2_value,
  input  [3:0]   io_fromOg1VfArith_1_1_bits_dataSources_3_value,
  input  [3:0]   io_fromOg1VfArith_1_1_bits_dataSources_4_value,
  input          io_fromOg1VfArith_1_0_valid,
  input  [34:0]  io_fromOg1VfArith_1_0_bits_fuType,
  input  [8:0]   io_fromOg1VfArith_1_0_bits_fuOpType,
  input  [127:0] io_fromOg1VfArith_1_0_bits_src_0,
  input  [127:0] io_fromOg1VfArith_1_0_bits_src_1,
  input  [127:0] io_fromOg1VfArith_1_0_bits_src_2,
  input  [127:0] io_fromOg1VfArith_1_0_bits_src_3,
  input  [127:0] io_fromOg1VfArith_1_0_bits_src_4,
  input          io_fromOg1VfArith_1_0_bits_robIdx_flag,
  input  [5:0]   io_fromOg1VfArith_1_0_bits_robIdx_value,
  input  [7:0]   io_fromOg1VfArith_1_0_bits_pdest,
  input          io_fromOg1VfArith_1_0_bits_vecWen,
  input          io_fromOg1VfArith_1_0_bits_v0Wen,
  input          io_fromOg1VfArith_1_0_bits_fpu_wflags,
  input          io_fromOg1VfArith_1_0_bits_vpu_vma,
  input          io_fromOg1VfArith_1_0_bits_vpu_vta,
  input  [1:0]   io_fromOg1VfArith_1_0_bits_vpu_vsew,
  input  [2:0]   io_fromOg1VfArith_1_0_bits_vpu_vlmul,
  input          io_fromOg1VfArith_1_0_bits_vpu_vm,
  input  [7:0]   io_fromOg1VfArith_1_0_bits_vpu_vstart,
  input  [6:0]   io_fromOg1VfArith_1_0_bits_vpu_vuopIdx,
  input          io_fromOg1VfArith_1_0_bits_vpu_isExt,
  input          io_fromOg1VfArith_1_0_bits_vpu_isNarrow,
  input          io_fromOg1VfArith_1_0_bits_vpu_isDstMask,
  input          io_fromOg1VfArith_1_0_bits_vpu_isOpMask,
  input  [3:0]   io_fromOg1VfArith_1_0_bits_dataSources_0_value,
  input  [3:0]   io_fromOg1VfArith_1_0_bits_dataSources_1_value,
  input  [3:0]   io_fromOg1VfArith_1_0_bits_dataSources_2_value,
  input  [3:0]   io_fromOg1VfArith_1_0_bits_dataSources_3_value,
  input  [3:0]   io_fromOg1VfArith_1_0_bits_dataSources_4_value,
  input          io_fromOg1VfArith_0_1_valid,
  input  [34:0]  io_fromOg1VfArith_0_1_bits_fuType,
  input  [8:0]   io_fromOg1VfArith_0_1_bits_fuOpType,
  input  [127:0] io_fromOg1VfArith_0_1_bits_src_0,
  input  [127:0] io_fromOg1VfArith_0_1_bits_src_1,
  input  [127:0] io_fromOg1VfArith_0_1_bits_src_2,
  input  [127:0] io_fromOg1VfArith_0_1_bits_src_3,
  input  [127:0] io_fromOg1VfArith_0_1_bits_src_4,
  input          io_fromOg1VfArith_0_1_bits_robIdx_flag,
  input  [5:0]   io_fromOg1VfArith_0_1_bits_robIdx_value,
  input  [7:0]   io_fromOg1VfArith_0_1_bits_pdest,
  input          io_fromOg1VfArith_0_1_bits_rfWen,
  input          io_fromOg1VfArith_0_1_bits_fpWen,
  input          io_fromOg1VfArith_0_1_bits_vecWen,
  input          io_fromOg1VfArith_0_1_bits_v0Wen,
  input          io_fromOg1VfArith_0_1_bits_vlWen,
  input          io_fromOg1VfArith_0_1_bits_fpu_wflags,
  input          io_fromOg1VfArith_0_1_bits_vpu_vma,
  input          io_fromOg1VfArith_0_1_bits_vpu_vta,
  input  [1:0]   io_fromOg1VfArith_0_1_bits_vpu_vsew,
  input  [2:0]   io_fromOg1VfArith_0_1_bits_vpu_vlmul,
  input          io_fromOg1VfArith_0_1_bits_vpu_vm,
  input  [7:0]   io_fromOg1VfArith_0_1_bits_vpu_vstart,
  input          io_fromOg1VfArith_0_1_bits_vpu_fpu_isFoldTo1_2,
  input          io_fromOg1VfArith_0_1_bits_vpu_fpu_isFoldTo1_4,
  input          io_fromOg1VfArith_0_1_bits_vpu_fpu_isFoldTo1_8,
  input  [6:0]   io_fromOg1VfArith_0_1_bits_vpu_vuopIdx,
  input          io_fromOg1VfArith_0_1_bits_vpu_lastUop,
  input          io_fromOg1VfArith_0_1_bits_vpu_isNarrow,
  input          io_fromOg1VfArith_0_1_bits_vpu_isDstMask,
  input  [3:0]   io_fromOg1VfArith_0_1_bits_dataSources_0_value,
  input  [3:0]   io_fromOg1VfArith_0_1_bits_dataSources_1_value,
  input  [3:0]   io_fromOg1VfArith_0_1_bits_dataSources_2_value,
  input  [3:0]   io_fromOg1VfArith_0_1_bits_dataSources_3_value,
  input  [3:0]   io_fromOg1VfArith_0_1_bits_dataSources_4_value,
  input          io_fromOg1VfArith_0_0_valid,
  input  [34:0]  io_fromOg1VfArith_0_0_bits_fuType,
  input  [8:0]   io_fromOg1VfArith_0_0_bits_fuOpType,
  input  [127:0] io_fromOg1VfArith_0_0_bits_src_0,
  input  [127:0] io_fromOg1VfArith_0_0_bits_src_1,
  input  [127:0] io_fromOg1VfArith_0_0_bits_src_2,
  input  [127:0] io_fromOg1VfArith_0_0_bits_src_3,
  input  [127:0] io_fromOg1VfArith_0_0_bits_src_4,
  input          io_fromOg1VfArith_0_0_bits_robIdx_flag,
  input  [5:0]   io_fromOg1VfArith_0_0_bits_robIdx_value,
  input  [7:0]   io_fromOg1VfArith_0_0_bits_pdest,
  input          io_fromOg1VfArith_0_0_bits_vecWen,
  input          io_fromOg1VfArith_0_0_bits_v0Wen,
  input          io_fromOg1VfArith_0_0_bits_fpu_wflags,
  input          io_fromOg1VfArith_0_0_bits_vpu_vma,
  input          io_fromOg1VfArith_0_0_bits_vpu_vta,
  input  [1:0]   io_fromOg1VfArith_0_0_bits_vpu_vsew,
  input  [2:0]   io_fromOg1VfArith_0_0_bits_vpu_vlmul,
  input          io_fromOg1VfArith_0_0_bits_vpu_vm,
  input  [7:0]   io_fromOg1VfArith_0_0_bits_vpu_vstart,
  input  [6:0]   io_fromOg1VfArith_0_0_bits_vpu_vuopIdx,
  input          io_fromOg1VfArith_0_0_bits_vpu_isExt,
  input          io_fromOg1VfArith_0_0_bits_vpu_isNarrow,
  input          io_fromOg1VfArith_0_0_bits_vpu_isDstMask,
  input          io_fromOg1VfArith_0_0_bits_vpu_isOpMask,
  input  [3:0]   io_fromOg1VfArith_0_0_bits_dataSources_0_value,
  input  [3:0]   io_fromOg1VfArith_0_0_bits_dataSources_1_value,
  input  [3:0]   io_fromOg1VfArith_0_0_bits_dataSources_2_value,
  input  [3:0]   io_fromOg1VfArith_0_0_bits_dataSources_3_value,
  input  [3:0]   io_fromOg1VfArith_0_0_bits_dataSources_4_value,
  input          io_fromOg1VecMem_1_0_valid,
  input  [34:0]  io_fromOg1VecMem_1_0_bits_fuType,
  input  [8:0]   io_fromOg1VecMem_1_0_bits_fuOpType,
  input  [127:0] io_fromOg1VecMem_1_0_bits_src_0,
  input  [127:0] io_fromOg1VecMem_1_0_bits_src_1,
  input  [127:0] io_fromOg1VecMem_1_0_bits_src_2,
  input  [127:0] io_fromOg1VecMem_1_0_bits_src_3,
  input  [127:0] io_fromOg1VecMem_1_0_bits_src_4,
  input          io_fromOg1VecMem_1_0_bits_robIdx_flag,
  input  [5:0]   io_fromOg1VecMem_1_0_bits_robIdx_value,
  input  [7:0]   io_fromOg1VecMem_1_0_bits_pdest,
  input          io_fromOg1VecMem_1_0_bits_vecWen,
  input          io_fromOg1VecMem_1_0_bits_v0Wen,
  input          io_fromOg1VecMem_1_0_bits_vlWen,
  input          io_fromOg1VecMem_1_0_bits_vpu_vma,
  input          io_fromOg1VecMem_1_0_bits_vpu_vta,
  input  [1:0]   io_fromOg1VecMem_1_0_bits_vpu_vsew,
  input  [2:0]   io_fromOg1VecMem_1_0_bits_vpu_vlmul,
  input          io_fromOg1VecMem_1_0_bits_vpu_vm,
  input  [7:0]   io_fromOg1VecMem_1_0_bits_vpu_vstart,
  input  [6:0]   io_fromOg1VecMem_1_0_bits_vpu_vuopIdx,
  input          io_fromOg1VecMem_1_0_bits_vpu_lastUop,
  input  [127:0] io_fromOg1VecMem_1_0_bits_vpu_vmask,
  input  [2:0]   io_fromOg1VecMem_1_0_bits_vpu_nf,
  input  [1:0]   io_fromOg1VecMem_1_0_bits_vpu_veew,
  input          io_fromOg1VecMem_1_0_bits_vpu_isVleff,
  input          io_fromOg1VecMem_1_0_bits_ftqIdx_flag,
  input  [2:0]   io_fromOg1VecMem_1_0_bits_ftqIdx_value,
  input  [3:0]   io_fromOg1VecMem_1_0_bits_ftqOffset,
  input  [4:0]   io_fromOg1VecMem_1_0_bits_numLsElem,
  input          io_fromOg1VecMem_1_0_bits_sqIdx_flag,
  input  [4:0]   io_fromOg1VecMem_1_0_bits_sqIdx_value,
  input          io_fromOg1VecMem_1_0_bits_lqIdx_flag,
  input  [4:0]   io_fromOg1VecMem_1_0_bits_lqIdx_value,
  input  [3:0]   io_fromOg1VecMem_1_0_bits_dataSources_0_value,
  input  [3:0]   io_fromOg1VecMem_1_0_bits_dataSources_1_value,
  input  [3:0]   io_fromOg1VecMem_1_0_bits_dataSources_2_value,
  input  [3:0]   io_fromOg1VecMem_1_0_bits_dataSources_3_value,
  input  [3:0]   io_fromOg1VecMem_1_0_bits_dataSources_4_value,
  input          io_fromOg1VecMem_0_0_valid,
  input  [34:0]  io_fromOg1VecMem_0_0_bits_fuType,
  input  [8:0]   io_fromOg1VecMem_0_0_bits_fuOpType,
  input  [127:0] io_fromOg1VecMem_0_0_bits_src_0,
  input  [127:0] io_fromOg1VecMem_0_0_bits_src_1,
  input  [127:0] io_fromOg1VecMem_0_0_bits_src_2,
  input  [127:0] io_fromOg1VecMem_0_0_bits_src_3,
  input  [127:0] io_fromOg1VecMem_0_0_bits_src_4,
  input          io_fromOg1VecMem_0_0_bits_robIdx_flag,
  input  [5:0]   io_fromOg1VecMem_0_0_bits_robIdx_value,
  input  [7:0]   io_fromOg1VecMem_0_0_bits_pdest,
  input          io_fromOg1VecMem_0_0_bits_vecWen,
  input          io_fromOg1VecMem_0_0_bits_v0Wen,
  input          io_fromOg1VecMem_0_0_bits_vlWen,
  input          io_fromOg1VecMem_0_0_bits_vpu_vma,
  input          io_fromOg1VecMem_0_0_bits_vpu_vta,
  input  [1:0]   io_fromOg1VecMem_0_0_bits_vpu_vsew,
  input  [2:0]   io_fromOg1VecMem_0_0_bits_vpu_vlmul,
  input          io_fromOg1VecMem_0_0_bits_vpu_vm,
  input  [7:0]   io_fromOg1VecMem_0_0_bits_vpu_vstart,
  input  [6:0]   io_fromOg1VecMem_0_0_bits_vpu_vuopIdx,
  input          io_fromOg1VecMem_0_0_bits_vpu_lastUop,
  input  [127:0] io_fromOg1VecMem_0_0_bits_vpu_vmask,
  input  [2:0]   io_fromOg1VecMem_0_0_bits_vpu_nf,
  input  [1:0]   io_fromOg1VecMem_0_0_bits_vpu_veew,
  input          io_fromOg1VecMem_0_0_bits_vpu_isVleff,
  input          io_fromOg1VecMem_0_0_bits_ftqIdx_flag,
  input  [2:0]   io_fromOg1VecMem_0_0_bits_ftqIdx_value,
  input  [3:0]   io_fromOg1VecMem_0_0_bits_ftqOffset,
  input  [4:0]   io_fromOg1VecMem_0_0_bits_numLsElem,
  input          io_fromOg1VecMem_0_0_bits_sqIdx_flag,
  input  [4:0]   io_fromOg1VecMem_0_0_bits_sqIdx_value,
  input          io_fromOg1VecMem_0_0_bits_lqIdx_flag,
  input  [4:0]   io_fromOg1VecMem_0_0_bits_lqIdx_value,
  input  [3:0]   io_fromOg1VecMem_0_0_bits_dataSources_0_value,
  input  [3:0]   io_fromOg1VecMem_0_0_bits_dataSources_1_value,
  input  [3:0]   io_fromOg1VecMem_0_0_bits_dataSources_2_value,
  input  [3:0]   io_fromOg1VecMem_0_0_bits_dataSources_3_value,
  input  [3:0]   io_fromOg1VecMem_0_0_bits_dataSources_4_value,
  input  [31:0]  io_fromOg1ImmInfo_1_imm,
  input  [3:0]   io_fromOg1ImmInfo_1_immType,
  input          io_toVfArithExu_2_0_ready,
  output         io_toVfArithExu_2_0_valid,
  output [34:0]  io_toVfArithExu_2_0_bits_fuType,
  output [8:0]   io_toVfArithExu_2_0_bits_fuOpType,
  output [127:0] io_toVfArithExu_2_0_bits_src_0,
  output [127:0] io_toVfArithExu_2_0_bits_src_1,
  output [127:0] io_toVfArithExu_2_0_bits_src_2,
  output [127:0] io_toVfArithExu_2_0_bits_src_3,
  output [127:0] io_toVfArithExu_2_0_bits_src_4,
  output         io_toVfArithExu_2_0_bits_robIdx_flag,
  output [5:0]   io_toVfArithExu_2_0_bits_robIdx_value,
  output [7:0]   io_toVfArithExu_2_0_bits_pdest,
  output         io_toVfArithExu_2_0_bits_vecWen,
  output         io_toVfArithExu_2_0_bits_v0Wen,
  output         io_toVfArithExu_2_0_bits_fpu_wflags,
  output         io_toVfArithExu_2_0_bits_vpu_vma,
  output         io_toVfArithExu_2_0_bits_vpu_vta,
  output [1:0]   io_toVfArithExu_2_0_bits_vpu_vsew,
  output [2:0]   io_toVfArithExu_2_0_bits_vpu_vlmul,
  output         io_toVfArithExu_2_0_bits_vpu_vm,
  output [7:0]   io_toVfArithExu_2_0_bits_vpu_vstart,
  output [6:0]   io_toVfArithExu_2_0_bits_vpu_vuopIdx,
  output         io_toVfArithExu_2_0_bits_vpu_isExt,
  output         io_toVfArithExu_2_0_bits_vpu_isNarrow,
  output         io_toVfArithExu_2_0_bits_vpu_isDstMask,
  output         io_toVfArithExu_2_0_bits_vpu_isOpMask,
  output [3:0]   io_toVfArithExu_2_0_bits_dataSources_0_value,
  output [3:0]   io_toVfArithExu_2_0_bits_dataSources_1_value,
  output [3:0]   io_toVfArithExu_2_0_bits_dataSources_2_value,
  output [3:0]   io_toVfArithExu_2_0_bits_dataSources_3_value,
  output [3:0]   io_toVfArithExu_2_0_bits_dataSources_4_value,
  output         io_toVfArithExu_1_1_valid,
  output [34:0]  io_toVfArithExu_1_1_bits_fuType,
  output [8:0]   io_toVfArithExu_1_1_bits_fuOpType,
  output [127:0] io_toVfArithExu_1_1_bits_src_0,
  output [127:0] io_toVfArithExu_1_1_bits_src_1,
  output [127:0] io_toVfArithExu_1_1_bits_src_2,
  output [127:0] io_toVfArithExu_1_1_bits_src_3,
  output [127:0] io_toVfArithExu_1_1_bits_src_4,
  output         io_toVfArithExu_1_1_bits_robIdx_flag,
  output [5:0]   io_toVfArithExu_1_1_bits_robIdx_value,
  output [7:0]   io_toVfArithExu_1_1_bits_pdest,
  output         io_toVfArithExu_1_1_bits_fpWen,
  output         io_toVfArithExu_1_1_bits_vecWen,
  output         io_toVfArithExu_1_1_bits_v0Wen,
  output         io_toVfArithExu_1_1_bits_fpu_wflags,
  output         io_toVfArithExu_1_1_bits_vpu_vma,
  output         io_toVfArithExu_1_1_bits_vpu_vta,
  output [1:0]   io_toVfArithExu_1_1_bits_vpu_vsew,
  output [2:0]   io_toVfArithExu_1_1_bits_vpu_vlmul,
  output         io_toVfArithExu_1_1_bits_vpu_vm,
  output [7:0]   io_toVfArithExu_1_1_bits_vpu_vstart,
  output         io_toVfArithExu_1_1_bits_vpu_fpu_isFoldTo1_2,
  output         io_toVfArithExu_1_1_bits_vpu_fpu_isFoldTo1_4,
  output         io_toVfArithExu_1_1_bits_vpu_fpu_isFoldTo1_8,
  output [6:0]   io_toVfArithExu_1_1_bits_vpu_vuopIdx,
  output         io_toVfArithExu_1_1_bits_vpu_lastUop,
  output         io_toVfArithExu_1_1_bits_vpu_isNarrow,
  output         io_toVfArithExu_1_1_bits_vpu_isDstMask,
  output [3:0]   io_toVfArithExu_1_1_bits_dataSources_0_value,
  output [3:0]   io_toVfArithExu_1_1_bits_dataSources_1_value,
  output [3:0]   io_toVfArithExu_1_1_bits_dataSources_2_value,
  output [3:0]   io_toVfArithExu_1_1_bits_dataSources_3_value,
  output [3:0]   io_toVfArithExu_1_1_bits_dataSources_4_value,
  input          io_toVfArithExu_1_0_ready,
  output         io_toVfArithExu_1_0_valid,
  output [34:0]  io_toVfArithExu_1_0_bits_fuType,
  output [8:0]   io_toVfArithExu_1_0_bits_fuOpType,
  output [127:0] io_toVfArithExu_1_0_bits_src_0,
  output [127:0] io_toVfArithExu_1_0_bits_src_1,
  output [127:0] io_toVfArithExu_1_0_bits_src_2,
  output [127:0] io_toVfArithExu_1_0_bits_src_3,
  output [127:0] io_toVfArithExu_1_0_bits_src_4,
  output         io_toVfArithExu_1_0_bits_robIdx_flag,
  output [5:0]   io_toVfArithExu_1_0_bits_robIdx_value,
  output [7:0]   io_toVfArithExu_1_0_bits_pdest,
  output         io_toVfArithExu_1_0_bits_vecWen,
  output         io_toVfArithExu_1_0_bits_v0Wen,
  output         io_toVfArithExu_1_0_bits_fpu_wflags,
  output         io_toVfArithExu_1_0_bits_vpu_vma,
  output         io_toVfArithExu_1_0_bits_vpu_vta,
  output [1:0]   io_toVfArithExu_1_0_bits_vpu_vsew,
  output [2:0]   io_toVfArithExu_1_0_bits_vpu_vlmul,
  output         io_toVfArithExu_1_0_bits_vpu_vm,
  output [7:0]   io_toVfArithExu_1_0_bits_vpu_vstart,
  output [6:0]   io_toVfArithExu_1_0_bits_vpu_vuopIdx,
  output         io_toVfArithExu_1_0_bits_vpu_isExt,
  output         io_toVfArithExu_1_0_bits_vpu_isNarrow,
  output         io_toVfArithExu_1_0_bits_vpu_isDstMask,
  output         io_toVfArithExu_1_0_bits_vpu_isOpMask,
  output [3:0]   io_toVfArithExu_1_0_bits_dataSources_0_value,
  output [3:0]   io_toVfArithExu_1_0_bits_dataSources_1_value,
  output [3:0]   io_toVfArithExu_1_0_bits_dataSources_2_value,
  output [3:0]   io_toVfArithExu_1_0_bits_dataSources_3_value,
  output [3:0]   io_toVfArithExu_1_0_bits_dataSources_4_value,
  output         io_toVfArithExu_0_1_valid,
  output [34:0]  io_toVfArithExu_0_1_bits_fuType,
  output [8:0]   io_toVfArithExu_0_1_bits_fuOpType,
  output [127:0] io_toVfArithExu_0_1_bits_src_0,
  output [127:0] io_toVfArithExu_0_1_bits_src_1,
  output [127:0] io_toVfArithExu_0_1_bits_src_2,
  output [127:0] io_toVfArithExu_0_1_bits_src_3,
  output [127:0] io_toVfArithExu_0_1_bits_src_4,
  output         io_toVfArithExu_0_1_bits_robIdx_flag,
  output [5:0]   io_toVfArithExu_0_1_bits_robIdx_value,
  output [7:0]   io_toVfArithExu_0_1_bits_pdest,
  output         io_toVfArithExu_0_1_bits_rfWen,
  output         io_toVfArithExu_0_1_bits_fpWen,
  output         io_toVfArithExu_0_1_bits_vecWen,
  output         io_toVfArithExu_0_1_bits_v0Wen,
  output         io_toVfArithExu_0_1_bits_vlWen,
  output         io_toVfArithExu_0_1_bits_fpu_wflags,
  output         io_toVfArithExu_0_1_bits_vpu_vma,
  output         io_toVfArithExu_0_1_bits_vpu_vta,
  output [1:0]   io_toVfArithExu_0_1_bits_vpu_vsew,
  output [2:0]   io_toVfArithExu_0_1_bits_vpu_vlmul,
  output         io_toVfArithExu_0_1_bits_vpu_vm,
  output [7:0]   io_toVfArithExu_0_1_bits_vpu_vstart,
  output         io_toVfArithExu_0_1_bits_vpu_fpu_isFoldTo1_2,
  output         io_toVfArithExu_0_1_bits_vpu_fpu_isFoldTo1_4,
  output         io_toVfArithExu_0_1_bits_vpu_fpu_isFoldTo1_8,
  output [6:0]   io_toVfArithExu_0_1_bits_vpu_vuopIdx,
  output         io_toVfArithExu_0_1_bits_vpu_lastUop,
  output         io_toVfArithExu_0_1_bits_vpu_isNarrow,
  output         io_toVfArithExu_0_1_bits_vpu_isDstMask,
  output [3:0]   io_toVfArithExu_0_1_bits_dataSources_0_value,
  output [3:0]   io_toVfArithExu_0_1_bits_dataSources_1_value,
  output [3:0]   io_toVfArithExu_0_1_bits_dataSources_2_value,
  output [3:0]   io_toVfArithExu_0_1_bits_dataSources_3_value,
  output [3:0]   io_toVfArithExu_0_1_bits_dataSources_4_value,
  input          io_toVfArithExu_0_0_ready,
  output         io_toVfArithExu_0_0_valid,
  output [34:0]  io_toVfArithExu_0_0_bits_fuType,
  output [8:0]   io_toVfArithExu_0_0_bits_fuOpType,
  output [127:0] io_toVfArithExu_0_0_bits_src_0,
  output [127:0] io_toVfArithExu_0_0_bits_src_1,
  output [127:0] io_toVfArithExu_0_0_bits_src_2,
  output [127:0] io_toVfArithExu_0_0_bits_src_3,
  output [127:0] io_toVfArithExu_0_0_bits_src_4,
  output         io_toVfArithExu_0_0_bits_robIdx_flag,
  output [5:0]   io_toVfArithExu_0_0_bits_robIdx_value,
  output [7:0]   io_toVfArithExu_0_0_bits_pdest,
  output         io_toVfArithExu_0_0_bits_vecWen,
  output         io_toVfArithExu_0_0_bits_v0Wen,
  output         io_toVfArithExu_0_0_bits_fpu_wflags,
  output         io_toVfArithExu_0_0_bits_vpu_vma,
  output         io_toVfArithExu_0_0_bits_vpu_vta,
  output [1:0]   io_toVfArithExu_0_0_bits_vpu_vsew,
  output [2:0]   io_toVfArithExu_0_0_bits_vpu_vlmul,
  output         io_toVfArithExu_0_0_bits_vpu_vm,
  output [7:0]   io_toVfArithExu_0_0_bits_vpu_vstart,
  output [6:0]   io_toVfArithExu_0_0_bits_vpu_vuopIdx,
  output         io_toVfArithExu_0_0_bits_vpu_isExt,
  output         io_toVfArithExu_0_0_bits_vpu_isNarrow,
  output         io_toVfArithExu_0_0_bits_vpu_isDstMask,
  output         io_toVfArithExu_0_0_bits_vpu_isOpMask,
  output [3:0]   io_toVfArithExu_0_0_bits_dataSources_0_value,
  output [3:0]   io_toVfArithExu_0_0_bits_dataSources_1_value,
  output [3:0]   io_toVfArithExu_0_0_bits_dataSources_2_value,
  output [3:0]   io_toVfArithExu_0_0_bits_dataSources_3_value,
  output [3:0]   io_toVfArithExu_0_0_bits_dataSources_4_value,
  input          io_toVecMemExu_1_0_ready,
  output         io_toVecMemExu_1_0_valid,
  output [34:0]  io_toVecMemExu_1_0_bits_fuType,
  output [8:0]   io_toVecMemExu_1_0_bits_fuOpType,
  output [127:0] io_toVecMemExu_1_0_bits_src_0,
  output [127:0] io_toVecMemExu_1_0_bits_src_1,
  output [127:0] io_toVecMemExu_1_0_bits_src_2,
  output [127:0] io_toVecMemExu_1_0_bits_src_3,
  output [127:0] io_toVecMemExu_1_0_bits_src_4,
  output         io_toVecMemExu_1_0_bits_robIdx_flag,
  output [5:0]   io_toVecMemExu_1_0_bits_robIdx_value,
  output [7:0]   io_toVecMemExu_1_0_bits_pdest,
  output         io_toVecMemExu_1_0_bits_vecWen,
  output         io_toVecMemExu_1_0_bits_v0Wen,
  output         io_toVecMemExu_1_0_bits_vlWen,
  output         io_toVecMemExu_1_0_bits_vpu_vma,
  output         io_toVecMemExu_1_0_bits_vpu_vta,
  output [1:0]   io_toVecMemExu_1_0_bits_vpu_vsew,
  output [2:0]   io_toVecMemExu_1_0_bits_vpu_vlmul,
  output         io_toVecMemExu_1_0_bits_vpu_vm,
  output [7:0]   io_toVecMemExu_1_0_bits_vpu_vstart,
  output [6:0]   io_toVecMemExu_1_0_bits_vpu_vuopIdx,
  output         io_toVecMemExu_1_0_bits_vpu_lastUop,
  output [127:0] io_toVecMemExu_1_0_bits_vpu_vmask,
  output [2:0]   io_toVecMemExu_1_0_bits_vpu_nf,
  output [1:0]   io_toVecMemExu_1_0_bits_vpu_veew,
  output         io_toVecMemExu_1_0_bits_vpu_isVleff,
  output         io_toVecMemExu_1_0_bits_ftqIdx_flag,
  output [2:0]   io_toVecMemExu_1_0_bits_ftqIdx_value,
  output [3:0]   io_toVecMemExu_1_0_bits_ftqOffset,
  output [4:0]   io_toVecMemExu_1_0_bits_numLsElem,
  output         io_toVecMemExu_1_0_bits_sqIdx_flag,
  output [4:0]   io_toVecMemExu_1_0_bits_sqIdx_value,
  output         io_toVecMemExu_1_0_bits_lqIdx_flag,
  output [4:0]   io_toVecMemExu_1_0_bits_lqIdx_value,
  output [3:0]   io_toVecMemExu_1_0_bits_dataSources_0_value,
  output [3:0]   io_toVecMemExu_1_0_bits_dataSources_1_value,
  output [3:0]   io_toVecMemExu_1_0_bits_dataSources_2_value,
  output [3:0]   io_toVecMemExu_1_0_bits_dataSources_3_value,
  output [3:0]   io_toVecMemExu_1_0_bits_dataSources_4_value,
  input          io_toVecMemExu_0_0_ready,
  output         io_toVecMemExu_0_0_valid,
  output [34:0]  io_toVecMemExu_0_0_bits_fuType,
  output [8:0]   io_toVecMemExu_0_0_bits_fuOpType,
  output [127:0] io_toVecMemExu_0_0_bits_src_0,
  output [127:0] io_toVecMemExu_0_0_bits_src_1,
  output [127:0] io_toVecMemExu_0_0_bits_src_2,
  output [127:0] io_toVecMemExu_0_0_bits_src_3,
  output [127:0] io_toVecMemExu_0_0_bits_src_4,
  output         io_toVecMemExu_0_0_bits_robIdx_flag,
  output [5:0]   io_toVecMemExu_0_0_bits_robIdx_value,
  output [7:0]   io_toVecMemExu_0_0_bits_pdest,
  output         io_toVecMemExu_0_0_bits_vecWen,
  output         io_toVecMemExu_0_0_bits_v0Wen,
  output         io_toVecMemExu_0_0_bits_vlWen,
  output         io_toVecMemExu_0_0_bits_vpu_vma,
  output         io_toVecMemExu_0_0_bits_vpu_vta,
  output [1:0]   io_toVecMemExu_0_0_bits_vpu_vsew,
  output [2:0]   io_toVecMemExu_0_0_bits_vpu_vlmul,
  output         io_toVecMemExu_0_0_bits_vpu_vm,
  output [7:0]   io_toVecMemExu_0_0_bits_vpu_vstart,
  output [6:0]   io_toVecMemExu_0_0_bits_vpu_vuopIdx,
  output         io_toVecMemExu_0_0_bits_vpu_lastUop,
  output [127:0] io_toVecMemExu_0_0_bits_vpu_vmask,
  output [2:0]   io_toVecMemExu_0_0_bits_vpu_nf,
  output [1:0]   io_toVecMemExu_0_0_bits_vpu_veew,
  output         io_toVecMemExu_0_0_bits_vpu_isVleff,
  output         io_toVecMemExu_0_0_bits_ftqIdx_flag,
  output [2:0]   io_toVecMemExu_0_0_bits_ftqIdx_value,
  output [3:0]   io_toVecMemExu_0_0_bits_ftqOffset,
  output [4:0]   io_toVecMemExu_0_0_bits_numLsElem,
  output         io_toVecMemExu_0_0_bits_sqIdx_flag,
  output [4:0]   io_toVecMemExu_0_0_bits_sqIdx_value,
  output         io_toVecMemExu_0_0_bits_lqIdx_flag,
  output [4:0]   io_toVecMemExu_0_0_bits_lqIdx_value,
  output [3:0]   io_toVecMemExu_0_0_bits_dataSources_0_value,
  output [3:0]   io_toVecMemExu_0_0_bits_dataSources_1_value,
  output [3:0]   io_toVecMemExu_0_0_bits_dataSources_2_value,
  output [3:0]   io_toVecMemExu_0_0_bits_dataSources_3_value,
  output [3:0]   io_toVecMemExu_0_0_bits_dataSources_4_value,
  output         io_toVfIQOg2Resp_2_0_valid,
  output [1:0]   io_toVfIQOg2Resp_2_0_bits_resp,
  output         io_toVfIQOg2Resp_1_1_valid,
  output         io_toVfIQOg2Resp_1_0_valid,
  output [1:0]   io_toVfIQOg2Resp_1_0_bits_resp,
  output         io_toVfIQOg2Resp_0_1_valid,
  output         io_toVfIQOg2Resp_0_0_valid,
  output [1:0]   io_toVfIQOg2Resp_0_0_bits_resp,
  output         io_toMemIQOg2Resp_1_0_valid,
  output [1:0]   io_toMemIQOg2Resp_1_0_bits_resp,
  output         io_toMemIQOg2Resp_0_0_valid,
  output [1:0]   io_toMemIQOg2Resp_0_0_bits_resp,
  output [31:0]  io_toBypassNetworkImmInfo_1_imm,
  output [3:0]   io_toBypassNetworkImmInfo_1_immType
);

  reg          s2_toExuValid_4_0;
  reg          s2_toExuValid_3_0;
  reg          s2_toExuValid_2_0;
  reg          s2_toExuValid_1_1;
  reg          s2_toExuValid_1_0;
  reg          s2_toExuValid_0_1;
  reg          s2_toExuValid_0_0;
  reg  [34:0]  s2_toExuData_4_0_fuType;
  reg  [8:0]   s2_toExuData_4_0_fuOpType;
  reg  [127:0] s2_toExuData_4_0_src_0;
  reg  [127:0] s2_toExuData_4_0_src_1;
  reg  [127:0] s2_toExuData_4_0_src_2;
  reg  [127:0] s2_toExuData_4_0_src_3;
  reg  [127:0] s2_toExuData_4_0_src_4;
  reg          s2_toExuData_4_0_robIdx_flag;
  reg  [5:0]   s2_toExuData_4_0_robIdx_value;
  reg  [7:0]   s2_toExuData_4_0_pdest;
  reg          s2_toExuData_4_0_vecWen;
  reg          s2_toExuData_4_0_v0Wen;
  reg          s2_toExuData_4_0_vlWen;
  reg          s2_toExuData_4_0_vpu_vma;
  reg          s2_toExuData_4_0_vpu_vta;
  reg  [1:0]   s2_toExuData_4_0_vpu_vsew;
  reg  [2:0]   s2_toExuData_4_0_vpu_vlmul;
  reg          s2_toExuData_4_0_vpu_vm;
  reg  [7:0]   s2_toExuData_4_0_vpu_vstart;
  reg  [6:0]   s2_toExuData_4_0_vpu_vuopIdx;
  reg          s2_toExuData_4_0_vpu_lastUop;
  reg  [127:0] s2_toExuData_4_0_vpu_vmask;
  reg  [2:0]   s2_toExuData_4_0_vpu_nf;
  reg  [1:0]   s2_toExuData_4_0_vpu_veew;
  reg          s2_toExuData_4_0_vpu_isVleff;
  reg          s2_toExuData_4_0_ftqIdx_flag;
  reg  [2:0]   s2_toExuData_4_0_ftqIdx_value;
  reg  [3:0]   s2_toExuData_4_0_ftqOffset;
  reg  [4:0]   s2_toExuData_4_0_numLsElem;
  reg          s2_toExuData_4_0_sqIdx_flag;
  reg  [4:0]   s2_toExuData_4_0_sqIdx_value;
  reg          s2_toExuData_4_0_lqIdx_flag;
  reg  [4:0]   s2_toExuData_4_0_lqIdx_value;
  reg  [3:0]   s2_toExuData_4_0_dataSources_0_value;
  reg  [3:0]   s2_toExuData_4_0_dataSources_1_value;
  reg  [3:0]   s2_toExuData_4_0_dataSources_2_value;
  reg  [3:0]   s2_toExuData_4_0_dataSources_3_value;
  reg  [3:0]   s2_toExuData_4_0_dataSources_4_value;
  reg  [34:0]  s2_toExuData_3_0_fuType;
  reg  [8:0]   s2_toExuData_3_0_fuOpType;
  reg  [127:0] s2_toExuData_3_0_src_0;
  reg  [127:0] s2_toExuData_3_0_src_1;
  reg  [127:0] s2_toExuData_3_0_src_2;
  reg  [127:0] s2_toExuData_3_0_src_3;
  reg  [127:0] s2_toExuData_3_0_src_4;
  reg          s2_toExuData_3_0_robIdx_flag;
  reg  [5:0]   s2_toExuData_3_0_robIdx_value;
  reg  [7:0]   s2_toExuData_3_0_pdest;
  reg          s2_toExuData_3_0_vecWen;
  reg          s2_toExuData_3_0_v0Wen;
  reg          s2_toExuData_3_0_vlWen;
  reg          s2_toExuData_3_0_vpu_vma;
  reg          s2_toExuData_3_0_vpu_vta;
  reg  [1:0]   s2_toExuData_3_0_vpu_vsew;
  reg  [2:0]   s2_toExuData_3_0_vpu_vlmul;
  reg          s2_toExuData_3_0_vpu_vm;
  reg  [7:0]   s2_toExuData_3_0_vpu_vstart;
  reg  [6:0]   s2_toExuData_3_0_vpu_vuopIdx;
  reg          s2_toExuData_3_0_vpu_lastUop;
  reg  [127:0] s2_toExuData_3_0_vpu_vmask;
  reg  [2:0]   s2_toExuData_3_0_vpu_nf;
  reg  [1:0]   s2_toExuData_3_0_vpu_veew;
  reg          s2_toExuData_3_0_vpu_isVleff;
  reg          s2_toExuData_3_0_ftqIdx_flag;
  reg  [2:0]   s2_toExuData_3_0_ftqIdx_value;
  reg  [3:0]   s2_toExuData_3_0_ftqOffset;
  reg  [4:0]   s2_toExuData_3_0_numLsElem;
  reg          s2_toExuData_3_0_sqIdx_flag;
  reg  [4:0]   s2_toExuData_3_0_sqIdx_value;
  reg          s2_toExuData_3_0_lqIdx_flag;
  reg  [4:0]   s2_toExuData_3_0_lqIdx_value;
  reg  [3:0]   s2_toExuData_3_0_dataSources_0_value;
  reg  [3:0]   s2_toExuData_3_0_dataSources_1_value;
  reg  [3:0]   s2_toExuData_3_0_dataSources_2_value;
  reg  [3:0]   s2_toExuData_3_0_dataSources_3_value;
  reg  [3:0]   s2_toExuData_3_0_dataSources_4_value;
  reg  [34:0]  s2_toExuData_2_0_fuType;
  reg  [8:0]   s2_toExuData_2_0_fuOpType;
  reg  [127:0] s2_toExuData_2_0_src_0;
  reg  [127:0] s2_toExuData_2_0_src_1;
  reg  [127:0] s2_toExuData_2_0_src_2;
  reg  [127:0] s2_toExuData_2_0_src_3;
  reg  [127:0] s2_toExuData_2_0_src_4;
  reg          s2_toExuData_2_0_robIdx_flag;
  reg  [5:0]   s2_toExuData_2_0_robIdx_value;
  reg  [7:0]   s2_toExuData_2_0_pdest;
  reg          s2_toExuData_2_0_vecWen;
  reg          s2_toExuData_2_0_v0Wen;
  reg          s2_toExuData_2_0_fpu_wflags;
  reg          s2_toExuData_2_0_vpu_vma;
  reg          s2_toExuData_2_0_vpu_vta;
  reg  [1:0]   s2_toExuData_2_0_vpu_vsew;
  reg  [2:0]   s2_toExuData_2_0_vpu_vlmul;
  reg          s2_toExuData_2_0_vpu_vm;
  reg  [7:0]   s2_toExuData_2_0_vpu_vstart;
  reg  [6:0]   s2_toExuData_2_0_vpu_vuopIdx;
  reg          s2_toExuData_2_0_vpu_isExt;
  reg          s2_toExuData_2_0_vpu_isNarrow;
  reg          s2_toExuData_2_0_vpu_isDstMask;
  reg          s2_toExuData_2_0_vpu_isOpMask;
  reg  [3:0]   s2_toExuData_2_0_dataSources_0_value;
  reg  [3:0]   s2_toExuData_2_0_dataSources_1_value;
  reg  [3:0]   s2_toExuData_2_0_dataSources_2_value;
  reg  [3:0]   s2_toExuData_2_0_dataSources_3_value;
  reg  [3:0]   s2_toExuData_2_0_dataSources_4_value;
  reg  [34:0]  s2_toExuData_1_1_fuType;
  reg  [8:0]   s2_toExuData_1_1_fuOpType;
  reg  [127:0] s2_toExuData_1_1_src_0;
  reg  [127:0] s2_toExuData_1_1_src_1;
  reg  [127:0] s2_toExuData_1_1_src_2;
  reg  [127:0] s2_toExuData_1_1_src_3;
  reg  [127:0] s2_toExuData_1_1_src_4;
  reg          s2_toExuData_1_1_robIdx_flag;
  reg  [5:0]   s2_toExuData_1_1_robIdx_value;
  reg  [7:0]   s2_toExuData_1_1_pdest;
  reg          s2_toExuData_1_1_fpWen;
  reg          s2_toExuData_1_1_vecWen;
  reg          s2_toExuData_1_1_v0Wen;
  reg          s2_toExuData_1_1_fpu_wflags;
  reg          s2_toExuData_1_1_vpu_vma;
  reg          s2_toExuData_1_1_vpu_vta;
  reg  [1:0]   s2_toExuData_1_1_vpu_vsew;
  reg  [2:0]   s2_toExuData_1_1_vpu_vlmul;
  reg          s2_toExuData_1_1_vpu_vm;
  reg  [7:0]   s2_toExuData_1_1_vpu_vstart;
  reg          s2_toExuData_1_1_vpu_fpu_isFoldTo1_2;
  reg          s2_toExuData_1_1_vpu_fpu_isFoldTo1_4;
  reg          s2_toExuData_1_1_vpu_fpu_isFoldTo1_8;
  reg  [6:0]   s2_toExuData_1_1_vpu_vuopIdx;
  reg          s2_toExuData_1_1_vpu_lastUop;
  reg          s2_toExuData_1_1_vpu_isNarrow;
  reg          s2_toExuData_1_1_vpu_isDstMask;
  reg  [3:0]   s2_toExuData_1_1_dataSources_0_value;
  reg  [3:0]   s2_toExuData_1_1_dataSources_1_value;
  reg  [3:0]   s2_toExuData_1_1_dataSources_2_value;
  reg  [3:0]   s2_toExuData_1_1_dataSources_3_value;
  reg  [3:0]   s2_toExuData_1_1_dataSources_4_value;
  reg  [34:0]  s2_toExuData_1_0_fuType;
  reg  [8:0]   s2_toExuData_1_0_fuOpType;
  reg  [127:0] s2_toExuData_1_0_src_0;
  reg  [127:0] s2_toExuData_1_0_src_1;
  reg  [127:0] s2_toExuData_1_0_src_2;
  reg  [127:0] s2_toExuData_1_0_src_3;
  reg  [127:0] s2_toExuData_1_0_src_4;
  reg          s2_toExuData_1_0_robIdx_flag;
  reg  [5:0]   s2_toExuData_1_0_robIdx_value;
  reg  [7:0]   s2_toExuData_1_0_pdest;
  reg          s2_toExuData_1_0_vecWen;
  reg          s2_toExuData_1_0_v0Wen;
  reg          s2_toExuData_1_0_fpu_wflags;
  reg          s2_toExuData_1_0_vpu_vma;
  reg          s2_toExuData_1_0_vpu_vta;
  reg  [1:0]   s2_toExuData_1_0_vpu_vsew;
  reg  [2:0]   s2_toExuData_1_0_vpu_vlmul;
  reg          s2_toExuData_1_0_vpu_vm;
  reg  [7:0]   s2_toExuData_1_0_vpu_vstart;
  reg  [6:0]   s2_toExuData_1_0_vpu_vuopIdx;
  reg          s2_toExuData_1_0_vpu_isExt;
  reg          s2_toExuData_1_0_vpu_isNarrow;
  reg          s2_toExuData_1_0_vpu_isDstMask;
  reg          s2_toExuData_1_0_vpu_isOpMask;
  reg  [3:0]   s2_toExuData_1_0_dataSources_0_value;
  reg  [3:0]   s2_toExuData_1_0_dataSources_1_value;
  reg  [3:0]   s2_toExuData_1_0_dataSources_2_value;
  reg  [3:0]   s2_toExuData_1_0_dataSources_3_value;
  reg  [3:0]   s2_toExuData_1_0_dataSources_4_value;
  reg  [34:0]  s2_toExuData_0_1_fuType;
  reg  [8:0]   s2_toExuData_0_1_fuOpType;
  reg  [127:0] s2_toExuData_0_1_src_0;
  reg  [127:0] s2_toExuData_0_1_src_1;
  reg  [127:0] s2_toExuData_0_1_src_2;
  reg  [127:0] s2_toExuData_0_1_src_3;
  reg  [127:0] s2_toExuData_0_1_src_4;
  reg          s2_toExuData_0_1_robIdx_flag;
  reg  [5:0]   s2_toExuData_0_1_robIdx_value;
  reg  [7:0]   s2_toExuData_0_1_pdest;
  reg          s2_toExuData_0_1_rfWen;
  reg          s2_toExuData_0_1_fpWen;
  reg          s2_toExuData_0_1_vecWen;
  reg          s2_toExuData_0_1_v0Wen;
  reg          s2_toExuData_0_1_vlWen;
  reg          s2_toExuData_0_1_fpu_wflags;
  reg          s2_toExuData_0_1_vpu_vma;
  reg          s2_toExuData_0_1_vpu_vta;
  reg  [1:0]   s2_toExuData_0_1_vpu_vsew;
  reg  [2:0]   s2_toExuData_0_1_vpu_vlmul;
  reg          s2_toExuData_0_1_vpu_vm;
  reg  [7:0]   s2_toExuData_0_1_vpu_vstart;
  reg          s2_toExuData_0_1_vpu_fpu_isFoldTo1_2;
  reg          s2_toExuData_0_1_vpu_fpu_isFoldTo1_4;
  reg          s2_toExuData_0_1_vpu_fpu_isFoldTo1_8;
  reg  [6:0]   s2_toExuData_0_1_vpu_vuopIdx;
  reg          s2_toExuData_0_1_vpu_lastUop;
  reg          s2_toExuData_0_1_vpu_isNarrow;
  reg          s2_toExuData_0_1_vpu_isDstMask;
  reg  [3:0]   s2_toExuData_0_1_dataSources_0_value;
  reg  [3:0]   s2_toExuData_0_1_dataSources_1_value;
  reg  [3:0]   s2_toExuData_0_1_dataSources_2_value;
  reg  [3:0]   s2_toExuData_0_1_dataSources_3_value;
  reg  [3:0]   s2_toExuData_0_1_dataSources_4_value;
  reg  [34:0]  s2_toExuData_0_0_fuType;
  reg  [8:0]   s2_toExuData_0_0_fuOpType;
  reg  [127:0] s2_toExuData_0_0_src_0;
  reg  [127:0] s2_toExuData_0_0_src_1;
  reg  [127:0] s2_toExuData_0_0_src_2;
  reg  [127:0] s2_toExuData_0_0_src_3;
  reg  [127:0] s2_toExuData_0_0_src_4;
  reg          s2_toExuData_0_0_robIdx_flag;
  reg  [5:0]   s2_toExuData_0_0_robIdx_value;
  reg  [7:0]   s2_toExuData_0_0_pdest;
  reg          s2_toExuData_0_0_vecWen;
  reg          s2_toExuData_0_0_v0Wen;
  reg          s2_toExuData_0_0_fpu_wflags;
  reg          s2_toExuData_0_0_vpu_vma;
  reg          s2_toExuData_0_0_vpu_vta;
  reg  [1:0]   s2_toExuData_0_0_vpu_vsew;
  reg  [2:0]   s2_toExuData_0_0_vpu_vlmul;
  reg          s2_toExuData_0_0_vpu_vm;
  reg  [7:0]   s2_toExuData_0_0_vpu_vstart;
  reg  [6:0]   s2_toExuData_0_0_vpu_vuopIdx;
  reg          s2_toExuData_0_0_vpu_isExt;
  reg          s2_toExuData_0_0_vpu_isNarrow;
  reg          s2_toExuData_0_0_vpu_isDstMask;
  reg          s2_toExuData_0_0_vpu_isOpMask;
  reg  [3:0]   s2_toExuData_0_0_dataSources_0_value;
  reg  [3:0]   s2_toExuData_0_0_dataSources_1_value;
  reg  [3:0]   s2_toExuData_0_0_dataSources_2_value;
  reg  [3:0]   s2_toExuData_0_0_dataSources_3_value;
  reg  [3:0]   s2_toExuData_0_0_dataSources_4_value;
  reg          s2_flush_next_valid_last_REG;
  reg          s2_flush_next_bits_r_robIdx_flag;
  reg  [5:0]   s2_flush_next_bits_r_robIdx_value;
  reg          s2_flush_next_bits_r_level;
  reg          s2_flush_next_valid_last_REG_1;
  reg          s2_flush_next_bits_r_1_robIdx_flag;
  reg  [5:0]   s2_flush_next_bits_r_1_robIdx_value;
  reg          s2_flush_next_bits_r_1_level;
  reg          s2_flush_next_valid_last_REG_2;
  reg          s2_flush_next_bits_r_2_robIdx_flag;
  reg  [5:0]   s2_flush_next_bits_r_2_robIdx_value;
  reg          s2_flush_next_bits_r_2_level;
  reg          s2_flush_next_valid_last_REG_3;
  reg          s2_flush_next_bits_r_3_robIdx_flag;
  reg  [5:0]   s2_flush_next_bits_r_3_robIdx_value;
  reg          s2_flush_next_bits_r_3_level;
  reg          s2_flush_next_valid_last_REG_4;
  reg          s2_flush_next_bits_r_4_robIdx_flag;
  reg  [5:0]   s2_flush_next_bits_r_4_robIdx_value;
  reg          s2_flush_next_bits_r_4_level;
  reg          s2_flush_next_valid_last_REG_5;
  reg          s2_flush_next_bits_r_5_robIdx_flag;
  reg  [5:0]   s2_flush_next_bits_r_5_robIdx_value;
  reg          s2_flush_next_bits_r_5_level;
  reg          s2_flush_next_valid_last_REG_6;
  reg          s2_flush_next_bits_r_6_robIdx_flag;
  reg  [5:0]   s2_flush_next_bits_r_6_robIdx_value;
  reg          s2_flush_next_bits_r_6_level;
  reg  [31:0]  r_1_imm;
  reg  [3:0]   r_1_immType;
  wire [6:0]   _s2_flush_flushItself_T_5 =
    {io_fromOg1VfArith_0_0_bits_robIdx_flag, io_fromOg1VfArith_0_0_bits_robIdx_value};
  wire [6:0]   _s2_flush_flushItself_T_50 =
    {io_flush_bits_robIdx_flag, io_flush_bits_robIdx_value};
  wire         _GEN =
    io_fromOg1VfArith_0_0_valid
    & {s2_flush_next_valid_last_REG
         & (s2_flush_next_bits_r_level
            & _s2_flush_flushItself_T_5 == {s2_flush_next_bits_r_robIdx_flag,
                                            s2_flush_next_bits_r_robIdx_value}
            | io_fromOg1VfArith_0_0_bits_robIdx_flag ^ s2_flush_next_bits_r_robIdx_flag
            ^ io_fromOg1VfArith_0_0_bits_robIdx_value > s2_flush_next_bits_r_robIdx_value),
       io_flush_valid
         & (io_flush_bits_level & _s2_flush_flushItself_T_5 == _s2_flush_flushItself_T_50
            | io_fromOg1VfArith_0_0_bits_robIdx_flag ^ io_flush_bits_robIdx_flag
            ^ io_fromOg1VfArith_0_0_bits_robIdx_value > io_flush_bits_robIdx_value)} == 2'h0;
  wire [6:0]   _s2_flush_flushItself_T_13 =
    {io_fromOg1VfArith_0_1_bits_robIdx_flag, io_fromOg1VfArith_0_1_bits_robIdx_value};
  wire         _GEN_0 =
    io_fromOg1VfArith_0_1_valid
    & {s2_flush_next_valid_last_REG_1
         & (s2_flush_next_bits_r_1_level
            & _s2_flush_flushItself_T_13 == {s2_flush_next_bits_r_1_robIdx_flag,
                                             s2_flush_next_bits_r_1_robIdx_value}
            | io_fromOg1VfArith_0_1_bits_robIdx_flag ^ s2_flush_next_bits_r_1_robIdx_flag
            ^ io_fromOg1VfArith_0_1_bits_robIdx_value > s2_flush_next_bits_r_1_robIdx_value),
       io_flush_valid
         & (io_flush_bits_level & _s2_flush_flushItself_T_13 == _s2_flush_flushItself_T_50
            | io_fromOg1VfArith_0_1_bits_robIdx_flag ^ io_flush_bits_robIdx_flag
            ^ io_fromOg1VfArith_0_1_bits_robIdx_value > io_flush_bits_robIdx_value)} == 2'h0;
  wire [6:0]   _s2_flush_flushItself_T_21 =
    {io_fromOg1VfArith_1_0_bits_robIdx_flag, io_fromOg1VfArith_1_0_bits_robIdx_value};
  wire         _GEN_1 =
    io_fromOg1VfArith_1_0_valid
    & {s2_flush_next_valid_last_REG_2
         & (s2_flush_next_bits_r_2_level
            & _s2_flush_flushItself_T_21 == {s2_flush_next_bits_r_2_robIdx_flag,
                                             s2_flush_next_bits_r_2_robIdx_value}
            | io_fromOg1VfArith_1_0_bits_robIdx_flag ^ s2_flush_next_bits_r_2_robIdx_flag
            ^ io_fromOg1VfArith_1_0_bits_robIdx_value > s2_flush_next_bits_r_2_robIdx_value),
       io_flush_valid
         & (io_flush_bits_level & _s2_flush_flushItself_T_21 == _s2_flush_flushItself_T_50
            | io_fromOg1VfArith_1_0_bits_robIdx_flag ^ io_flush_bits_robIdx_flag
            ^ io_fromOg1VfArith_1_0_bits_robIdx_value > io_flush_bits_robIdx_value)} == 2'h0;
  wire [6:0]   _s2_flush_flushItself_T_29 =
    {io_fromOg1VfArith_1_1_bits_robIdx_flag, io_fromOg1VfArith_1_1_bits_robIdx_value};
  wire         _GEN_2 =
    io_fromOg1VfArith_1_1_valid
    & {s2_flush_next_valid_last_REG_3
         & (s2_flush_next_bits_r_3_level
            & _s2_flush_flushItself_T_29 == {s2_flush_next_bits_r_3_robIdx_flag,
                                             s2_flush_next_bits_r_3_robIdx_value}
            | io_fromOg1VfArith_1_1_bits_robIdx_flag ^ s2_flush_next_bits_r_3_robIdx_flag
            ^ io_fromOg1VfArith_1_1_bits_robIdx_value > s2_flush_next_bits_r_3_robIdx_value),
       io_flush_valid
         & (io_flush_bits_level & _s2_flush_flushItself_T_29 == _s2_flush_flushItself_T_50
            | io_fromOg1VfArith_1_1_bits_robIdx_flag ^ io_flush_bits_robIdx_flag
            ^ io_fromOg1VfArith_1_1_bits_robIdx_value > io_flush_bits_robIdx_value)} == 2'h0;
  wire [6:0]   _s2_flush_flushItself_T_37 =
    {io_fromOg1VfArith_2_0_bits_robIdx_flag, io_fromOg1VfArith_2_0_bits_robIdx_value};
  wire         _GEN_3 =
    io_fromOg1VfArith_2_0_valid
    & {s2_flush_next_valid_last_REG_4
         & (s2_flush_next_bits_r_4_level
            & _s2_flush_flushItself_T_37 == {s2_flush_next_bits_r_4_robIdx_flag,
                                             s2_flush_next_bits_r_4_robIdx_value}
            | io_fromOg1VfArith_2_0_bits_robIdx_flag ^ s2_flush_next_bits_r_4_robIdx_flag
            ^ io_fromOg1VfArith_2_0_bits_robIdx_value > s2_flush_next_bits_r_4_robIdx_value),
       io_flush_valid
         & (io_flush_bits_level & _s2_flush_flushItself_T_37 == _s2_flush_flushItself_T_50
            | io_fromOg1VfArith_2_0_bits_robIdx_flag ^ io_flush_bits_robIdx_flag
            ^ io_fromOg1VfArith_2_0_bits_robIdx_value > io_flush_bits_robIdx_value)} == 2'h0;
  wire [6:0]   _s2_flush_flushItself_T_45 =
    {io_fromOg1VecMem_0_0_bits_robIdx_flag, io_fromOg1VecMem_0_0_bits_robIdx_value};
  wire         _GEN_4 =
    io_fromOg1VecMem_0_0_valid
    & {s2_flush_next_valid_last_REG_5
         & (s2_flush_next_bits_r_5_level
            & _s2_flush_flushItself_T_45 == {s2_flush_next_bits_r_5_robIdx_flag,
                                             s2_flush_next_bits_r_5_robIdx_value}
            | io_fromOg1VecMem_0_0_bits_robIdx_flag ^ s2_flush_next_bits_r_5_robIdx_flag
            ^ io_fromOg1VecMem_0_0_bits_robIdx_value > s2_flush_next_bits_r_5_robIdx_value),
       io_flush_valid
         & (io_flush_bits_level & _s2_flush_flushItself_T_45 == _s2_flush_flushItself_T_50
            | io_fromOg1VecMem_0_0_bits_robIdx_flag ^ io_flush_bits_robIdx_flag
            ^ io_fromOg1VecMem_0_0_bits_robIdx_value > io_flush_bits_robIdx_value)} == 2'h0;
  wire [6:0]   _s2_flush_flushItself_T_53 =
    {io_fromOg1VecMem_1_0_bits_robIdx_flag, io_fromOg1VecMem_1_0_bits_robIdx_value};
  wire         _GEN_5 =
    io_fromOg1VecMem_1_0_valid
    & {s2_flush_next_valid_last_REG_6
         & (s2_flush_next_bits_r_6_level
            & _s2_flush_flushItself_T_53 == {s2_flush_next_bits_r_6_robIdx_flag,
                                             s2_flush_next_bits_r_6_robIdx_value}
            | io_fromOg1VecMem_1_0_bits_robIdx_flag ^ s2_flush_next_bits_r_6_robIdx_flag
            ^ io_fromOg1VecMem_1_0_bits_robIdx_value > s2_flush_next_bits_r_6_robIdx_value),
       io_flush_valid
         & (io_flush_bits_level & _s2_flush_flushItself_T_53 == _s2_flush_flushItself_T_50
            | io_fromOg1VecMem_1_0_bits_robIdx_flag ^ io_flush_bits_robIdx_flag
            ^ io_fromOg1VecMem_1_0_bits_robIdx_value > io_flush_bits_robIdx_value)} == 2'h0;
  always @(posedge clock) begin
    s2_toExuValid_4_0 <= _GEN_5;
    s2_toExuValid_3_0 <= _GEN_4;
    s2_toExuValid_2_0 <= _GEN_3;
    s2_toExuValid_1_1 <= _GEN_2;
    s2_toExuValid_1_0 <= _GEN_1;
    s2_toExuValid_0_1 <= _GEN_0;
    s2_toExuValid_0_0 <= _GEN;
    if (_GEN_5) begin
      s2_toExuData_4_0_fuType <= io_fromOg1VecMem_1_0_bits_fuType;
      s2_toExuData_4_0_fuOpType <= io_fromOg1VecMem_1_0_bits_fuOpType;
      s2_toExuData_4_0_src_0 <= io_fromOg1VecMem_1_0_bits_src_0;
      s2_toExuData_4_0_src_1 <= io_fromOg1VecMem_1_0_bits_src_1;
      s2_toExuData_4_0_src_2 <= io_fromOg1VecMem_1_0_bits_src_2;
      s2_toExuData_4_0_src_3 <= io_fromOg1VecMem_1_0_bits_src_3;
      s2_toExuData_4_0_src_4 <= io_fromOg1VecMem_1_0_bits_src_4;
      s2_toExuData_4_0_robIdx_flag <= io_fromOg1VecMem_1_0_bits_robIdx_flag;
      s2_toExuData_4_0_robIdx_value <= io_fromOg1VecMem_1_0_bits_robIdx_value;
      s2_toExuData_4_0_pdest <= io_fromOg1VecMem_1_0_bits_pdest;
      s2_toExuData_4_0_vecWen <= io_fromOg1VecMem_1_0_bits_vecWen;
      s2_toExuData_4_0_v0Wen <= io_fromOg1VecMem_1_0_bits_v0Wen;
      s2_toExuData_4_0_vlWen <= io_fromOg1VecMem_1_0_bits_vlWen;
      s2_toExuData_4_0_vpu_vma <= io_fromOg1VecMem_1_0_bits_vpu_vma;
      s2_toExuData_4_0_vpu_vta <= io_fromOg1VecMem_1_0_bits_vpu_vta;
      s2_toExuData_4_0_vpu_vsew <= io_fromOg1VecMem_1_0_bits_vpu_vsew;
      s2_toExuData_4_0_vpu_vlmul <= io_fromOg1VecMem_1_0_bits_vpu_vlmul;
      s2_toExuData_4_0_vpu_vm <= io_fromOg1VecMem_1_0_bits_vpu_vm;
      s2_toExuData_4_0_vpu_vstart <= io_fromOg1VecMem_1_0_bits_vpu_vstart;
      s2_toExuData_4_0_vpu_vuopIdx <= io_fromOg1VecMem_1_0_bits_vpu_vuopIdx;
      s2_toExuData_4_0_vpu_lastUop <= io_fromOg1VecMem_1_0_bits_vpu_lastUop;
      s2_toExuData_4_0_vpu_vmask <= io_fromOg1VecMem_1_0_bits_vpu_vmask;
      s2_toExuData_4_0_vpu_nf <= io_fromOg1VecMem_1_0_bits_vpu_nf;
      s2_toExuData_4_0_vpu_veew <= io_fromOg1VecMem_1_0_bits_vpu_veew;
      s2_toExuData_4_0_vpu_isVleff <= io_fromOg1VecMem_1_0_bits_vpu_isVleff;
      s2_toExuData_4_0_ftqIdx_flag <= io_fromOg1VecMem_1_0_bits_ftqIdx_flag;
      s2_toExuData_4_0_ftqIdx_value <= io_fromOg1VecMem_1_0_bits_ftqIdx_value;
      s2_toExuData_4_0_ftqOffset <= io_fromOg1VecMem_1_0_bits_ftqOffset;
      s2_toExuData_4_0_numLsElem <= io_fromOg1VecMem_1_0_bits_numLsElem;
      s2_toExuData_4_0_sqIdx_flag <= io_fromOg1VecMem_1_0_bits_sqIdx_flag;
      s2_toExuData_4_0_sqIdx_value <= io_fromOg1VecMem_1_0_bits_sqIdx_value;
      s2_toExuData_4_0_lqIdx_flag <= io_fromOg1VecMem_1_0_bits_lqIdx_flag;
      s2_toExuData_4_0_lqIdx_value <= io_fromOg1VecMem_1_0_bits_lqIdx_value;
      s2_toExuData_4_0_dataSources_0_value <=
        io_fromOg1VecMem_1_0_bits_dataSources_0_value;
      s2_toExuData_4_0_dataSources_1_value <=
        io_fromOg1VecMem_1_0_bits_dataSources_1_value;
      s2_toExuData_4_0_dataSources_2_value <=
        io_fromOg1VecMem_1_0_bits_dataSources_2_value;
      s2_toExuData_4_0_dataSources_3_value <=
        io_fromOg1VecMem_1_0_bits_dataSources_3_value;
      s2_toExuData_4_0_dataSources_4_value <=
        io_fromOg1VecMem_1_0_bits_dataSources_4_value;
    end
    if (_GEN_4) begin
      s2_toExuData_3_0_fuType <= io_fromOg1VecMem_0_0_bits_fuType;
      s2_toExuData_3_0_fuOpType <= io_fromOg1VecMem_0_0_bits_fuOpType;
      s2_toExuData_3_0_src_0 <= io_fromOg1VecMem_0_0_bits_src_0;
      s2_toExuData_3_0_src_1 <= io_fromOg1VecMem_0_0_bits_src_1;
      s2_toExuData_3_0_src_2 <= io_fromOg1VecMem_0_0_bits_src_2;
      s2_toExuData_3_0_src_3 <= io_fromOg1VecMem_0_0_bits_src_3;
      s2_toExuData_3_0_src_4 <= io_fromOg1VecMem_0_0_bits_src_4;
      s2_toExuData_3_0_robIdx_flag <= io_fromOg1VecMem_0_0_bits_robIdx_flag;
      s2_toExuData_3_0_robIdx_value <= io_fromOg1VecMem_0_0_bits_robIdx_value;
      s2_toExuData_3_0_pdest <= io_fromOg1VecMem_0_0_bits_pdest;
      s2_toExuData_3_0_vecWen <= io_fromOg1VecMem_0_0_bits_vecWen;
      s2_toExuData_3_0_v0Wen <= io_fromOg1VecMem_0_0_bits_v0Wen;
      s2_toExuData_3_0_vlWen <= io_fromOg1VecMem_0_0_bits_vlWen;
      s2_toExuData_3_0_vpu_vma <= io_fromOg1VecMem_0_0_bits_vpu_vma;
      s2_toExuData_3_0_vpu_vta <= io_fromOg1VecMem_0_0_bits_vpu_vta;
      s2_toExuData_3_0_vpu_vsew <= io_fromOg1VecMem_0_0_bits_vpu_vsew;
      s2_toExuData_3_0_vpu_vlmul <= io_fromOg1VecMem_0_0_bits_vpu_vlmul;
      s2_toExuData_3_0_vpu_vm <= io_fromOg1VecMem_0_0_bits_vpu_vm;
      s2_toExuData_3_0_vpu_vstart <= io_fromOg1VecMem_0_0_bits_vpu_vstart;
      s2_toExuData_3_0_vpu_vuopIdx <= io_fromOg1VecMem_0_0_bits_vpu_vuopIdx;
      s2_toExuData_3_0_vpu_lastUop <= io_fromOg1VecMem_0_0_bits_vpu_lastUop;
      s2_toExuData_3_0_vpu_vmask <= io_fromOg1VecMem_0_0_bits_vpu_vmask;
      s2_toExuData_3_0_vpu_nf <= io_fromOg1VecMem_0_0_bits_vpu_nf;
      s2_toExuData_3_0_vpu_veew <= io_fromOg1VecMem_0_0_bits_vpu_veew;
      s2_toExuData_3_0_vpu_isVleff <= io_fromOg1VecMem_0_0_bits_vpu_isVleff;
      s2_toExuData_3_0_ftqIdx_flag <= io_fromOg1VecMem_0_0_bits_ftqIdx_flag;
      s2_toExuData_3_0_ftqIdx_value <= io_fromOg1VecMem_0_0_bits_ftqIdx_value;
      s2_toExuData_3_0_ftqOffset <= io_fromOg1VecMem_0_0_bits_ftqOffset;
      s2_toExuData_3_0_numLsElem <= io_fromOg1VecMem_0_0_bits_numLsElem;
      s2_toExuData_3_0_sqIdx_flag <= io_fromOg1VecMem_0_0_bits_sqIdx_flag;
      s2_toExuData_3_0_sqIdx_value <= io_fromOg1VecMem_0_0_bits_sqIdx_value;
      s2_toExuData_3_0_lqIdx_flag <= io_fromOg1VecMem_0_0_bits_lqIdx_flag;
      s2_toExuData_3_0_lqIdx_value <= io_fromOg1VecMem_0_0_bits_lqIdx_value;
      s2_toExuData_3_0_dataSources_0_value <=
        io_fromOg1VecMem_0_0_bits_dataSources_0_value;
      s2_toExuData_3_0_dataSources_1_value <=
        io_fromOg1VecMem_0_0_bits_dataSources_1_value;
      s2_toExuData_3_0_dataSources_2_value <=
        io_fromOg1VecMem_0_0_bits_dataSources_2_value;
      s2_toExuData_3_0_dataSources_3_value <=
        io_fromOg1VecMem_0_0_bits_dataSources_3_value;
      s2_toExuData_3_0_dataSources_4_value <=
        io_fromOg1VecMem_0_0_bits_dataSources_4_value;
    end
    if (_GEN_3) begin
      s2_toExuData_2_0_fuType <= io_fromOg1VfArith_2_0_bits_fuType;
      s2_toExuData_2_0_fuOpType <= io_fromOg1VfArith_2_0_bits_fuOpType;
      s2_toExuData_2_0_src_0 <= io_fromOg1VfArith_2_0_bits_src_0;
      s2_toExuData_2_0_src_1 <= io_fromOg1VfArith_2_0_bits_src_1;
      s2_toExuData_2_0_src_2 <= io_fromOg1VfArith_2_0_bits_src_2;
      s2_toExuData_2_0_src_3 <= io_fromOg1VfArith_2_0_bits_src_3;
      s2_toExuData_2_0_src_4 <= io_fromOg1VfArith_2_0_bits_src_4;
      s2_toExuData_2_0_robIdx_flag <= io_fromOg1VfArith_2_0_bits_robIdx_flag;
      s2_toExuData_2_0_robIdx_value <= io_fromOg1VfArith_2_0_bits_robIdx_value;
      s2_toExuData_2_0_pdest <= io_fromOg1VfArith_2_0_bits_pdest;
      s2_toExuData_2_0_vecWen <= io_fromOg1VfArith_2_0_bits_vecWen;
      s2_toExuData_2_0_v0Wen <= io_fromOg1VfArith_2_0_bits_v0Wen;
      s2_toExuData_2_0_fpu_wflags <= io_fromOg1VfArith_2_0_bits_fpu_wflags;
      s2_toExuData_2_0_vpu_vma <= io_fromOg1VfArith_2_0_bits_vpu_vma;
      s2_toExuData_2_0_vpu_vta <= io_fromOg1VfArith_2_0_bits_vpu_vta;
      s2_toExuData_2_0_vpu_vsew <= io_fromOg1VfArith_2_0_bits_vpu_vsew;
      s2_toExuData_2_0_vpu_vlmul <= io_fromOg1VfArith_2_0_bits_vpu_vlmul;
      s2_toExuData_2_0_vpu_vm <= io_fromOg1VfArith_2_0_bits_vpu_vm;
      s2_toExuData_2_0_vpu_vstart <= io_fromOg1VfArith_2_0_bits_vpu_vstart;
      s2_toExuData_2_0_vpu_vuopIdx <= io_fromOg1VfArith_2_0_bits_vpu_vuopIdx;
      s2_toExuData_2_0_vpu_isExt <= io_fromOg1VfArith_2_0_bits_vpu_isExt;
      s2_toExuData_2_0_vpu_isNarrow <= io_fromOg1VfArith_2_0_bits_vpu_isNarrow;
      s2_toExuData_2_0_vpu_isDstMask <= io_fromOg1VfArith_2_0_bits_vpu_isDstMask;
      s2_toExuData_2_0_vpu_isOpMask <= io_fromOg1VfArith_2_0_bits_vpu_isOpMask;
      s2_toExuData_2_0_dataSources_0_value <=
        io_fromOg1VfArith_2_0_bits_dataSources_0_value;
      s2_toExuData_2_0_dataSources_1_value <=
        io_fromOg1VfArith_2_0_bits_dataSources_1_value;
      s2_toExuData_2_0_dataSources_2_value <=
        io_fromOg1VfArith_2_0_bits_dataSources_2_value;
      s2_toExuData_2_0_dataSources_3_value <=
        io_fromOg1VfArith_2_0_bits_dataSources_3_value;
      s2_toExuData_2_0_dataSources_4_value <=
        io_fromOg1VfArith_2_0_bits_dataSources_4_value;
    end
    if (_GEN_2) begin
      s2_toExuData_1_1_fuType <= io_fromOg1VfArith_1_1_bits_fuType;
      s2_toExuData_1_1_fuOpType <= io_fromOg1VfArith_1_1_bits_fuOpType;
      s2_toExuData_1_1_src_0 <= io_fromOg1VfArith_1_1_bits_src_0;
      s2_toExuData_1_1_src_1 <= io_fromOg1VfArith_1_1_bits_src_1;
      s2_toExuData_1_1_src_2 <= io_fromOg1VfArith_1_1_bits_src_2;
      s2_toExuData_1_1_src_3 <= io_fromOg1VfArith_1_1_bits_src_3;
      s2_toExuData_1_1_src_4 <= io_fromOg1VfArith_1_1_bits_src_4;
      s2_toExuData_1_1_robIdx_flag <= io_fromOg1VfArith_1_1_bits_robIdx_flag;
      s2_toExuData_1_1_robIdx_value <= io_fromOg1VfArith_1_1_bits_robIdx_value;
      s2_toExuData_1_1_pdest <= io_fromOg1VfArith_1_1_bits_pdest;
      s2_toExuData_1_1_fpWen <= io_fromOg1VfArith_1_1_bits_fpWen;
      s2_toExuData_1_1_vecWen <= io_fromOg1VfArith_1_1_bits_vecWen;
      s2_toExuData_1_1_v0Wen <= io_fromOg1VfArith_1_1_bits_v0Wen;
      s2_toExuData_1_1_fpu_wflags <= io_fromOg1VfArith_1_1_bits_fpu_wflags;
      s2_toExuData_1_1_vpu_vma <= io_fromOg1VfArith_1_1_bits_vpu_vma;
      s2_toExuData_1_1_vpu_vta <= io_fromOg1VfArith_1_1_bits_vpu_vta;
      s2_toExuData_1_1_vpu_vsew <= io_fromOg1VfArith_1_1_bits_vpu_vsew;
      s2_toExuData_1_1_vpu_vlmul <= io_fromOg1VfArith_1_1_bits_vpu_vlmul;
      s2_toExuData_1_1_vpu_vm <= io_fromOg1VfArith_1_1_bits_vpu_vm;
      s2_toExuData_1_1_vpu_vstart <= io_fromOg1VfArith_1_1_bits_vpu_vstart;
      s2_toExuData_1_1_vpu_fpu_isFoldTo1_2 <=
        io_fromOg1VfArith_1_1_bits_vpu_fpu_isFoldTo1_2;
      s2_toExuData_1_1_vpu_fpu_isFoldTo1_4 <=
        io_fromOg1VfArith_1_1_bits_vpu_fpu_isFoldTo1_4;
      s2_toExuData_1_1_vpu_fpu_isFoldTo1_8 <=
        io_fromOg1VfArith_1_1_bits_vpu_fpu_isFoldTo1_8;
      s2_toExuData_1_1_vpu_vuopIdx <= io_fromOg1VfArith_1_1_bits_vpu_vuopIdx;
      s2_toExuData_1_1_vpu_lastUop <= io_fromOg1VfArith_1_1_bits_vpu_lastUop;
      s2_toExuData_1_1_vpu_isNarrow <= io_fromOg1VfArith_1_1_bits_vpu_isNarrow;
      s2_toExuData_1_1_vpu_isDstMask <= io_fromOg1VfArith_1_1_bits_vpu_isDstMask;
      s2_toExuData_1_1_dataSources_0_value <=
        io_fromOg1VfArith_1_1_bits_dataSources_0_value;
      s2_toExuData_1_1_dataSources_1_value <=
        io_fromOg1VfArith_1_1_bits_dataSources_1_value;
      s2_toExuData_1_1_dataSources_2_value <=
        io_fromOg1VfArith_1_1_bits_dataSources_2_value;
      s2_toExuData_1_1_dataSources_3_value <=
        io_fromOg1VfArith_1_1_bits_dataSources_3_value;
      s2_toExuData_1_1_dataSources_4_value <=
        io_fromOg1VfArith_1_1_bits_dataSources_4_value;
    end
    if (_GEN_1) begin
      s2_toExuData_1_0_fuType <= io_fromOg1VfArith_1_0_bits_fuType;
      s2_toExuData_1_0_fuOpType <= io_fromOg1VfArith_1_0_bits_fuOpType;
      s2_toExuData_1_0_src_0 <= io_fromOg1VfArith_1_0_bits_src_0;
      s2_toExuData_1_0_src_1 <= io_fromOg1VfArith_1_0_bits_src_1;
      s2_toExuData_1_0_src_2 <= io_fromOg1VfArith_1_0_bits_src_2;
      s2_toExuData_1_0_src_3 <= io_fromOg1VfArith_1_0_bits_src_3;
      s2_toExuData_1_0_src_4 <= io_fromOg1VfArith_1_0_bits_src_4;
      s2_toExuData_1_0_robIdx_flag <= io_fromOg1VfArith_1_0_bits_robIdx_flag;
      s2_toExuData_1_0_robIdx_value <= io_fromOg1VfArith_1_0_bits_robIdx_value;
      s2_toExuData_1_0_pdest <= io_fromOg1VfArith_1_0_bits_pdest;
      s2_toExuData_1_0_vecWen <= io_fromOg1VfArith_1_0_bits_vecWen;
      s2_toExuData_1_0_v0Wen <= io_fromOg1VfArith_1_0_bits_v0Wen;
      s2_toExuData_1_0_fpu_wflags <= io_fromOg1VfArith_1_0_bits_fpu_wflags;
      s2_toExuData_1_0_vpu_vma <= io_fromOg1VfArith_1_0_bits_vpu_vma;
      s2_toExuData_1_0_vpu_vta <= io_fromOg1VfArith_1_0_bits_vpu_vta;
      s2_toExuData_1_0_vpu_vsew <= io_fromOg1VfArith_1_0_bits_vpu_vsew;
      s2_toExuData_1_0_vpu_vlmul <= io_fromOg1VfArith_1_0_bits_vpu_vlmul;
      s2_toExuData_1_0_vpu_vm <= io_fromOg1VfArith_1_0_bits_vpu_vm;
      s2_toExuData_1_0_vpu_vstart <= io_fromOg1VfArith_1_0_bits_vpu_vstart;
      s2_toExuData_1_0_vpu_vuopIdx <= io_fromOg1VfArith_1_0_bits_vpu_vuopIdx;
      s2_toExuData_1_0_vpu_isExt <= io_fromOg1VfArith_1_0_bits_vpu_isExt;
      s2_toExuData_1_0_vpu_isNarrow <= io_fromOg1VfArith_1_0_bits_vpu_isNarrow;
      s2_toExuData_1_0_vpu_isDstMask <= io_fromOg1VfArith_1_0_bits_vpu_isDstMask;
      s2_toExuData_1_0_vpu_isOpMask <= io_fromOg1VfArith_1_0_bits_vpu_isOpMask;
      s2_toExuData_1_0_dataSources_0_value <=
        io_fromOg1VfArith_1_0_bits_dataSources_0_value;
      s2_toExuData_1_0_dataSources_1_value <=
        io_fromOg1VfArith_1_0_bits_dataSources_1_value;
      s2_toExuData_1_0_dataSources_2_value <=
        io_fromOg1VfArith_1_0_bits_dataSources_2_value;
      s2_toExuData_1_0_dataSources_3_value <=
        io_fromOg1VfArith_1_0_bits_dataSources_3_value;
      s2_toExuData_1_0_dataSources_4_value <=
        io_fromOg1VfArith_1_0_bits_dataSources_4_value;
    end
    if (_GEN_0) begin
      s2_toExuData_0_1_fuType <= io_fromOg1VfArith_0_1_bits_fuType;
      s2_toExuData_0_1_fuOpType <= io_fromOg1VfArith_0_1_bits_fuOpType;
      s2_toExuData_0_1_src_0 <= io_fromOg1VfArith_0_1_bits_src_0;
      s2_toExuData_0_1_src_1 <= io_fromOg1VfArith_0_1_bits_src_1;
      s2_toExuData_0_1_src_2 <= io_fromOg1VfArith_0_1_bits_src_2;
      s2_toExuData_0_1_src_3 <= io_fromOg1VfArith_0_1_bits_src_3;
      s2_toExuData_0_1_src_4 <= io_fromOg1VfArith_0_1_bits_src_4;
      s2_toExuData_0_1_robIdx_flag <= io_fromOg1VfArith_0_1_bits_robIdx_flag;
      s2_toExuData_0_1_robIdx_value <= io_fromOg1VfArith_0_1_bits_robIdx_value;
      s2_toExuData_0_1_pdest <= io_fromOg1VfArith_0_1_bits_pdest;
      s2_toExuData_0_1_rfWen <= io_fromOg1VfArith_0_1_bits_rfWen;
      s2_toExuData_0_1_fpWen <= io_fromOg1VfArith_0_1_bits_fpWen;
      s2_toExuData_0_1_vecWen <= io_fromOg1VfArith_0_1_bits_vecWen;
      s2_toExuData_0_1_v0Wen <= io_fromOg1VfArith_0_1_bits_v0Wen;
      s2_toExuData_0_1_vlWen <= io_fromOg1VfArith_0_1_bits_vlWen;
      s2_toExuData_0_1_fpu_wflags <= io_fromOg1VfArith_0_1_bits_fpu_wflags;
      s2_toExuData_0_1_vpu_vma <= io_fromOg1VfArith_0_1_bits_vpu_vma;
      s2_toExuData_0_1_vpu_vta <= io_fromOg1VfArith_0_1_bits_vpu_vta;
      s2_toExuData_0_1_vpu_vsew <= io_fromOg1VfArith_0_1_bits_vpu_vsew;
      s2_toExuData_0_1_vpu_vlmul <= io_fromOg1VfArith_0_1_bits_vpu_vlmul;
      s2_toExuData_0_1_vpu_vm <= io_fromOg1VfArith_0_1_bits_vpu_vm;
      s2_toExuData_0_1_vpu_vstart <= io_fromOg1VfArith_0_1_bits_vpu_vstart;
      s2_toExuData_0_1_vpu_fpu_isFoldTo1_2 <=
        io_fromOg1VfArith_0_1_bits_vpu_fpu_isFoldTo1_2;
      s2_toExuData_0_1_vpu_fpu_isFoldTo1_4 <=
        io_fromOg1VfArith_0_1_bits_vpu_fpu_isFoldTo1_4;
      s2_toExuData_0_1_vpu_fpu_isFoldTo1_8 <=
        io_fromOg1VfArith_0_1_bits_vpu_fpu_isFoldTo1_8;
      s2_toExuData_0_1_vpu_vuopIdx <= io_fromOg1VfArith_0_1_bits_vpu_vuopIdx;
      s2_toExuData_0_1_vpu_lastUop <= io_fromOg1VfArith_0_1_bits_vpu_lastUop;
      s2_toExuData_0_1_vpu_isNarrow <= io_fromOg1VfArith_0_1_bits_vpu_isNarrow;
      s2_toExuData_0_1_vpu_isDstMask <= io_fromOg1VfArith_0_1_bits_vpu_isDstMask;
      s2_toExuData_0_1_dataSources_0_value <=
        io_fromOg1VfArith_0_1_bits_dataSources_0_value;
      s2_toExuData_0_1_dataSources_1_value <=
        io_fromOg1VfArith_0_1_bits_dataSources_1_value;
      s2_toExuData_0_1_dataSources_2_value <=
        io_fromOg1VfArith_0_1_bits_dataSources_2_value;
      s2_toExuData_0_1_dataSources_3_value <=
        io_fromOg1VfArith_0_1_bits_dataSources_3_value;
      s2_toExuData_0_1_dataSources_4_value <=
        io_fromOg1VfArith_0_1_bits_dataSources_4_value;
    end
    if (_GEN) begin
      s2_toExuData_0_0_fuType <= io_fromOg1VfArith_0_0_bits_fuType;
      s2_toExuData_0_0_fuOpType <= io_fromOg1VfArith_0_0_bits_fuOpType;
      s2_toExuData_0_0_src_0 <= io_fromOg1VfArith_0_0_bits_src_0;
      s2_toExuData_0_0_src_1 <= io_fromOg1VfArith_0_0_bits_src_1;
      s2_toExuData_0_0_src_2 <= io_fromOg1VfArith_0_0_bits_src_2;
      s2_toExuData_0_0_src_3 <= io_fromOg1VfArith_0_0_bits_src_3;
      s2_toExuData_0_0_src_4 <= io_fromOg1VfArith_0_0_bits_src_4;
      s2_toExuData_0_0_robIdx_flag <= io_fromOg1VfArith_0_0_bits_robIdx_flag;
      s2_toExuData_0_0_robIdx_value <= io_fromOg1VfArith_0_0_bits_robIdx_value;
      s2_toExuData_0_0_pdest <= io_fromOg1VfArith_0_0_bits_pdest;
      s2_toExuData_0_0_vecWen <= io_fromOg1VfArith_0_0_bits_vecWen;
      s2_toExuData_0_0_v0Wen <= io_fromOg1VfArith_0_0_bits_v0Wen;
      s2_toExuData_0_0_fpu_wflags <= io_fromOg1VfArith_0_0_bits_fpu_wflags;
      s2_toExuData_0_0_vpu_vma <= io_fromOg1VfArith_0_0_bits_vpu_vma;
      s2_toExuData_0_0_vpu_vta <= io_fromOg1VfArith_0_0_bits_vpu_vta;
      s2_toExuData_0_0_vpu_vsew <= io_fromOg1VfArith_0_0_bits_vpu_vsew;
      s2_toExuData_0_0_vpu_vlmul <= io_fromOg1VfArith_0_0_bits_vpu_vlmul;
      s2_toExuData_0_0_vpu_vm <= io_fromOg1VfArith_0_0_bits_vpu_vm;
      s2_toExuData_0_0_vpu_vstart <= io_fromOg1VfArith_0_0_bits_vpu_vstart;
      s2_toExuData_0_0_vpu_vuopIdx <= io_fromOg1VfArith_0_0_bits_vpu_vuopIdx;
      s2_toExuData_0_0_vpu_isExt <= io_fromOg1VfArith_0_0_bits_vpu_isExt;
      s2_toExuData_0_0_vpu_isNarrow <= io_fromOg1VfArith_0_0_bits_vpu_isNarrow;
      s2_toExuData_0_0_vpu_isDstMask <= io_fromOg1VfArith_0_0_bits_vpu_isDstMask;
      s2_toExuData_0_0_vpu_isOpMask <= io_fromOg1VfArith_0_0_bits_vpu_isOpMask;
      s2_toExuData_0_0_dataSources_0_value <=
        io_fromOg1VfArith_0_0_bits_dataSources_0_value;
      s2_toExuData_0_0_dataSources_1_value <=
        io_fromOg1VfArith_0_0_bits_dataSources_1_value;
      s2_toExuData_0_0_dataSources_2_value <=
        io_fromOg1VfArith_0_0_bits_dataSources_2_value;
      s2_toExuData_0_0_dataSources_3_value <=
        io_fromOg1VfArith_0_0_bits_dataSources_3_value;
      s2_toExuData_0_0_dataSources_4_value <=
        io_fromOg1VfArith_0_0_bits_dataSources_4_value;
    end
    if (io_flush_valid) begin
      s2_flush_next_bits_r_robIdx_flag <= io_flush_bits_robIdx_flag;
      s2_flush_next_bits_r_robIdx_value <= io_flush_bits_robIdx_value;
      s2_flush_next_bits_r_level <= io_flush_bits_level;
      s2_flush_next_bits_r_1_robIdx_flag <= io_flush_bits_robIdx_flag;
      s2_flush_next_bits_r_1_robIdx_value <= io_flush_bits_robIdx_value;
      s2_flush_next_bits_r_1_level <= io_flush_bits_level;
      s2_flush_next_bits_r_2_robIdx_flag <= io_flush_bits_robIdx_flag;
      s2_flush_next_bits_r_2_robIdx_value <= io_flush_bits_robIdx_value;
      s2_flush_next_bits_r_2_level <= io_flush_bits_level;
      s2_flush_next_bits_r_3_robIdx_flag <= io_flush_bits_robIdx_flag;
      s2_flush_next_bits_r_3_robIdx_value <= io_flush_bits_robIdx_value;
      s2_flush_next_bits_r_3_level <= io_flush_bits_level;
      s2_flush_next_bits_r_4_robIdx_flag <= io_flush_bits_robIdx_flag;
      s2_flush_next_bits_r_4_robIdx_value <= io_flush_bits_robIdx_value;
      s2_flush_next_bits_r_4_level <= io_flush_bits_level;
      s2_flush_next_bits_r_5_robIdx_flag <= io_flush_bits_robIdx_flag;
      s2_flush_next_bits_r_5_robIdx_value <= io_flush_bits_robIdx_value;
      s2_flush_next_bits_r_5_level <= io_flush_bits_level;
      s2_flush_next_bits_r_6_robIdx_flag <= io_flush_bits_robIdx_flag;
      s2_flush_next_bits_r_6_robIdx_value <= io_flush_bits_robIdx_value;
      s2_flush_next_bits_r_6_level <= io_flush_bits_level;
    end
    if (io_fromOg1VfArith_0_1_valid) begin
      r_1_imm <= io_fromOg1ImmInfo_1_imm;
      r_1_immType <= io_fromOg1ImmInfo_1_immType;
    end
  end // always @(posedge)
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      s2_flush_next_valid_last_REG <= 1'h0;
      s2_flush_next_valid_last_REG_1 <= 1'h0;
      s2_flush_next_valid_last_REG_2 <= 1'h0;
      s2_flush_next_valid_last_REG_3 <= 1'h0;
      s2_flush_next_valid_last_REG_4 <= 1'h0;
      s2_flush_next_valid_last_REG_5 <= 1'h0;
      s2_flush_next_valid_last_REG_6 <= 1'h0;
    end
    else begin
      s2_flush_next_valid_last_REG <= io_flush_valid;
      s2_flush_next_valid_last_REG_1 <= io_flush_valid;
      s2_flush_next_valid_last_REG_2 <= io_flush_valid;
      s2_flush_next_valid_last_REG_3 <= io_flush_valid;
      s2_flush_next_valid_last_REG_4 <= io_flush_valid;
      s2_flush_next_valid_last_REG_5 <= io_flush_valid;
      s2_flush_next_valid_last_REG_6 <= io_flush_valid;
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:465];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [8:0] i = 9'h0; i < 9'h1D2; i += 9'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        s2_toExuValid_4_0 = _RANDOM[9'h0][0];
        s2_toExuValid_3_0 = _RANDOM[9'h0][1];
        s2_toExuValid_2_0 = _RANDOM[9'h0][2];
        s2_toExuValid_1_1 = _RANDOM[9'h0][3];
        s2_toExuValid_1_0 = _RANDOM[9'h0][4];
        s2_toExuValid_0_1 = _RANDOM[9'h0][5];
        s2_toExuValid_0_0 = _RANDOM[9'h0][6];
        s2_toExuData_4_0_fuType = {_RANDOM[9'h0][31:7], _RANDOM[9'h1][9:0]};
        s2_toExuData_4_0_fuOpType = _RANDOM[9'h1][18:10];
        s2_toExuData_4_0_src_0 =
          {_RANDOM[9'h1][31:19],
           _RANDOM[9'h2],
           _RANDOM[9'h3],
           _RANDOM[9'h4],
           _RANDOM[9'h5][18:0]};
        s2_toExuData_4_0_src_1 =
          {_RANDOM[9'h5][31:19],
           _RANDOM[9'h6],
           _RANDOM[9'h7],
           _RANDOM[9'h8],
           _RANDOM[9'h9][18:0]};
        s2_toExuData_4_0_src_2 =
          {_RANDOM[9'h9][31:19],
           _RANDOM[9'hA],
           _RANDOM[9'hB],
           _RANDOM[9'hC],
           _RANDOM[9'hD][18:0]};
        s2_toExuData_4_0_src_3 =
          {_RANDOM[9'hD][31:19],
           _RANDOM[9'hE],
           _RANDOM[9'hF],
           _RANDOM[9'h10],
           _RANDOM[9'h11][18:0]};
        s2_toExuData_4_0_src_4 =
          {_RANDOM[9'h11][31:19],
           _RANDOM[9'h12],
           _RANDOM[9'h13],
           _RANDOM[9'h14],
           _RANDOM[9'h15][18:0]};
        s2_toExuData_4_0_robIdx_flag = _RANDOM[9'h17][19];
        s2_toExuData_4_0_robIdx_value = _RANDOM[9'h17][25:20];
        s2_toExuData_4_0_pdest = {_RANDOM[9'h17][31], _RANDOM[9'h18][6:0]};
        s2_toExuData_4_0_vecWen = _RANDOM[9'h18][7];
        s2_toExuData_4_0_v0Wen = _RANDOM[9'h18][8];
        s2_toExuData_4_0_vlWen = _RANDOM[9'h18][9];
        s2_toExuData_4_0_vpu_vma = _RANDOM[9'h18][11];
        s2_toExuData_4_0_vpu_vta = _RANDOM[9'h18][12];
        s2_toExuData_4_0_vpu_vsew = _RANDOM[9'h18][14:13];
        s2_toExuData_4_0_vpu_vlmul = _RANDOM[9'h18][17:15];
        s2_toExuData_4_0_vpu_vm = _RANDOM[9'h18][26];
        s2_toExuData_4_0_vpu_vstart = {_RANDOM[9'h18][31:27], _RANDOM[9'h19][2:0]};
        s2_toExuData_4_0_vpu_vuopIdx = _RANDOM[9'h19][21:15];
        s2_toExuData_4_0_vpu_lastUop = _RANDOM[9'h19][22];
        s2_toExuData_4_0_vpu_vmask =
          {_RANDOM[9'h19][31:23],
           _RANDOM[9'h1A],
           _RANDOM[9'h1B],
           _RANDOM[9'h1C],
           _RANDOM[9'h1D][22:0]};
        s2_toExuData_4_0_vpu_nf = {_RANDOM[9'h1D][31], _RANDOM[9'h1E][1:0]};
        s2_toExuData_4_0_vpu_veew = _RANDOM[9'h1E][3:2];
        s2_toExuData_4_0_vpu_isVleff = _RANDOM[9'h1E][12];
        s2_toExuData_4_0_ftqIdx_flag = _RANDOM[9'h1E][14];
        s2_toExuData_4_0_ftqIdx_value = _RANDOM[9'h1E][17:15];
        s2_toExuData_4_0_ftqOffset = _RANDOM[9'h1E][21:18];
        s2_toExuData_4_0_numLsElem = _RANDOM[9'h1E][26:22];
        s2_toExuData_4_0_sqIdx_flag = _RANDOM[9'h1E][27];
        s2_toExuData_4_0_sqIdx_value = {_RANDOM[9'h1E][31:28], _RANDOM[9'h1F][0]};
        s2_toExuData_4_0_lqIdx_flag = _RANDOM[9'h1F][1];
        s2_toExuData_4_0_lqIdx_value = _RANDOM[9'h1F][6:2];
        s2_toExuData_4_0_dataSources_0_value = _RANDOM[9'h1F][10:7];
        s2_toExuData_4_0_dataSources_1_value = _RANDOM[9'h1F][14:11];
        s2_toExuData_4_0_dataSources_2_value = _RANDOM[9'h1F][18:15];
        s2_toExuData_4_0_dataSources_3_value = _RANDOM[9'h1F][22:19];
        s2_toExuData_4_0_dataSources_4_value = _RANDOM[9'h1F][26:23];
        s2_toExuData_3_0_fuType = {_RANDOM[9'h33][31:28], _RANDOM[9'h34][30:0]};
        s2_toExuData_3_0_fuOpType = {_RANDOM[9'h34][31], _RANDOM[9'h35][7:0]};
        s2_toExuData_3_0_src_0 =
          {_RANDOM[9'h35][31:8],
           _RANDOM[9'h36],
           _RANDOM[9'h37],
           _RANDOM[9'h38],
           _RANDOM[9'h39][7:0]};
        s2_toExuData_3_0_src_1 =
          {_RANDOM[9'h39][31:8],
           _RANDOM[9'h3A],
           _RANDOM[9'h3B],
           _RANDOM[9'h3C],
           _RANDOM[9'h3D][7:0]};
        s2_toExuData_3_0_src_2 =
          {_RANDOM[9'h3D][31:8],
           _RANDOM[9'h3E],
           _RANDOM[9'h3F],
           _RANDOM[9'h40],
           _RANDOM[9'h41][7:0]};
        s2_toExuData_3_0_src_3 =
          {_RANDOM[9'h41][31:8],
           _RANDOM[9'h42],
           _RANDOM[9'h43],
           _RANDOM[9'h44],
           _RANDOM[9'h45][7:0]};
        s2_toExuData_3_0_src_4 =
          {_RANDOM[9'h45][31:8],
           _RANDOM[9'h46],
           _RANDOM[9'h47],
           _RANDOM[9'h48],
           _RANDOM[9'h49][7:0]};
        s2_toExuData_3_0_robIdx_flag = _RANDOM[9'h4B][8];
        s2_toExuData_3_0_robIdx_value = _RANDOM[9'h4B][14:9];
        s2_toExuData_3_0_pdest = _RANDOM[9'h4B][27:20];
        s2_toExuData_3_0_vecWen = _RANDOM[9'h4B][28];
        s2_toExuData_3_0_v0Wen = _RANDOM[9'h4B][29];
        s2_toExuData_3_0_vlWen = _RANDOM[9'h4B][30];
        s2_toExuData_3_0_vpu_vma = _RANDOM[9'h4C][0];
        s2_toExuData_3_0_vpu_vta = _RANDOM[9'h4C][1];
        s2_toExuData_3_0_vpu_vsew = _RANDOM[9'h4C][3:2];
        s2_toExuData_3_0_vpu_vlmul = _RANDOM[9'h4C][6:4];
        s2_toExuData_3_0_vpu_vm = _RANDOM[9'h4C][15];
        s2_toExuData_3_0_vpu_vstart = _RANDOM[9'h4C][23:16];
        s2_toExuData_3_0_vpu_vuopIdx = _RANDOM[9'h4D][10:4];
        s2_toExuData_3_0_vpu_lastUop = _RANDOM[9'h4D][11];
        s2_toExuData_3_0_vpu_vmask =
          {_RANDOM[9'h4D][31:12],
           _RANDOM[9'h4E],
           _RANDOM[9'h4F],
           _RANDOM[9'h50],
           _RANDOM[9'h51][11:0]};
        s2_toExuData_3_0_vpu_nf = _RANDOM[9'h51][22:20];
        s2_toExuData_3_0_vpu_veew = _RANDOM[9'h51][24:23];
        s2_toExuData_3_0_vpu_isVleff = _RANDOM[9'h52][1];
        s2_toExuData_3_0_ftqIdx_flag = _RANDOM[9'h52][3];
        s2_toExuData_3_0_ftqIdx_value = _RANDOM[9'h52][6:4];
        s2_toExuData_3_0_ftqOffset = _RANDOM[9'h52][10:7];
        s2_toExuData_3_0_numLsElem = _RANDOM[9'h52][15:11];
        s2_toExuData_3_0_sqIdx_flag = _RANDOM[9'h52][16];
        s2_toExuData_3_0_sqIdx_value = _RANDOM[9'h52][21:17];
        s2_toExuData_3_0_lqIdx_flag = _RANDOM[9'h52][22];
        s2_toExuData_3_0_lqIdx_value = _RANDOM[9'h52][27:23];
        s2_toExuData_3_0_dataSources_0_value = _RANDOM[9'h52][31:28];
        s2_toExuData_3_0_dataSources_1_value = _RANDOM[9'h53][3:0];
        s2_toExuData_3_0_dataSources_2_value = _RANDOM[9'h53][7:4];
        s2_toExuData_3_0_dataSources_3_value = _RANDOM[9'h53][11:8];
        s2_toExuData_3_0_dataSources_4_value = _RANDOM[9'h53][15:12];
        s2_toExuData_2_0_fuType = {_RANDOM[9'h67][31:17], _RANDOM[9'h68][19:0]};
        s2_toExuData_2_0_fuOpType = _RANDOM[9'h68][28:20];
        s2_toExuData_2_0_src_0 =
          {_RANDOM[9'h68][31:29],
           _RANDOM[9'h69],
           _RANDOM[9'h6A],
           _RANDOM[9'h6B],
           _RANDOM[9'h6C][28:0]};
        s2_toExuData_2_0_src_1 =
          {_RANDOM[9'h6C][31:29],
           _RANDOM[9'h6D],
           _RANDOM[9'h6E],
           _RANDOM[9'h6F],
           _RANDOM[9'h70][28:0]};
        s2_toExuData_2_0_src_2 =
          {_RANDOM[9'h70][31:29],
           _RANDOM[9'h71],
           _RANDOM[9'h72],
           _RANDOM[9'h73],
           _RANDOM[9'h74][28:0]};
        s2_toExuData_2_0_src_3 =
          {_RANDOM[9'h74][31:29],
           _RANDOM[9'h75],
           _RANDOM[9'h76],
           _RANDOM[9'h77],
           _RANDOM[9'h78][28:0]};
        s2_toExuData_2_0_src_4 =
          {_RANDOM[9'h78][31:29],
           _RANDOM[9'h79],
           _RANDOM[9'h7A],
           _RANDOM[9'h7B],
           _RANDOM[9'h7C][28:0]};
        s2_toExuData_2_0_robIdx_flag = _RANDOM[9'h7E][29];
        s2_toExuData_2_0_robIdx_value = {_RANDOM[9'h7E][31:30], _RANDOM[9'h7F][3:0]};
        s2_toExuData_2_0_pdest = _RANDOM[9'h7F][16:9];
        s2_toExuData_2_0_vecWen = _RANDOM[9'h7F][17];
        s2_toExuData_2_0_v0Wen = _RANDOM[9'h7F][18];
        s2_toExuData_2_0_fpu_wflags = _RANDOM[9'h7F][21];
        s2_toExuData_2_0_vpu_vma = _RANDOM[9'h7F][30];
        s2_toExuData_2_0_vpu_vta = _RANDOM[9'h7F][31];
        s2_toExuData_2_0_vpu_vsew = _RANDOM[9'h80][1:0];
        s2_toExuData_2_0_vpu_vlmul = _RANDOM[9'h80][4:2];
        s2_toExuData_2_0_vpu_vm = _RANDOM[9'h80][13];
        s2_toExuData_2_0_vpu_vstart = _RANDOM[9'h80][21:14];
        s2_toExuData_2_0_vpu_vuopIdx = _RANDOM[9'h81][8:2];
        s2_toExuData_2_0_vpu_isExt = _RANDOM[9'h85][24];
        s2_toExuData_2_0_vpu_isNarrow = _RANDOM[9'h85][25];
        s2_toExuData_2_0_vpu_isDstMask = _RANDOM[9'h85][26];
        s2_toExuData_2_0_vpu_isOpMask = _RANDOM[9'h85][27];
        s2_toExuData_2_0_dataSources_0_value = _RANDOM[9'h86][3:0];
        s2_toExuData_2_0_dataSources_1_value = _RANDOM[9'h86][7:4];
        s2_toExuData_2_0_dataSources_2_value = _RANDOM[9'h86][11:8];
        s2_toExuData_2_0_dataSources_3_value = _RANDOM[9'h86][15:12];
        s2_toExuData_2_0_dataSources_4_value = _RANDOM[9'h86][19:16];
        s2_toExuData_1_1_fuType = {_RANDOM[9'h9A][31:21], _RANDOM[9'h9B][23:0]};
        s2_toExuData_1_1_fuOpType = {_RANDOM[9'h9B][31:24], _RANDOM[9'h9C][0]};
        s2_toExuData_1_1_src_0 =
          {_RANDOM[9'h9C][31:1],
           _RANDOM[9'h9D],
           _RANDOM[9'h9E],
           _RANDOM[9'h9F],
           _RANDOM[9'hA0][0]};
        s2_toExuData_1_1_src_1 =
          {_RANDOM[9'hA0][31:1],
           _RANDOM[9'hA1],
           _RANDOM[9'hA2],
           _RANDOM[9'hA3],
           _RANDOM[9'hA4][0]};
        s2_toExuData_1_1_src_2 =
          {_RANDOM[9'hA4][31:1],
           _RANDOM[9'hA5],
           _RANDOM[9'hA6],
           _RANDOM[9'hA7],
           _RANDOM[9'hA8][0]};
        s2_toExuData_1_1_src_3 =
          {_RANDOM[9'hA8][31:1],
           _RANDOM[9'hA9],
           _RANDOM[9'hAA],
           _RANDOM[9'hAB],
           _RANDOM[9'hAC][0]};
        s2_toExuData_1_1_src_4 =
          {_RANDOM[9'hAC][31:1],
           _RANDOM[9'hAD],
           _RANDOM[9'hAE],
           _RANDOM[9'hAF],
           _RANDOM[9'hB0][0]};
        s2_toExuData_1_1_robIdx_flag = _RANDOM[9'hB2][1];
        s2_toExuData_1_1_robIdx_value = _RANDOM[9'hB2][7:2];
        s2_toExuData_1_1_pdest = _RANDOM[9'hB2][20:13];
        s2_toExuData_1_1_fpWen = _RANDOM[9'hB2][21];
        s2_toExuData_1_1_vecWen = _RANDOM[9'hB2][22];
        s2_toExuData_1_1_v0Wen = _RANDOM[9'hB2][23];
        s2_toExuData_1_1_fpu_wflags = _RANDOM[9'hB2][26];
        s2_toExuData_1_1_vpu_vma = _RANDOM[9'hB3][3];
        s2_toExuData_1_1_vpu_vta = _RANDOM[9'hB3][4];
        s2_toExuData_1_1_vpu_vsew = _RANDOM[9'hB3][6:5];
        s2_toExuData_1_1_vpu_vlmul = _RANDOM[9'hB3][9:7];
        s2_toExuData_1_1_vpu_vm = _RANDOM[9'hB3][18];
        s2_toExuData_1_1_vpu_vstart = _RANDOM[9'hB3][26:19];
        s2_toExuData_1_1_vpu_fpu_isFoldTo1_2 = _RANDOM[9'hB4][2];
        s2_toExuData_1_1_vpu_fpu_isFoldTo1_4 = _RANDOM[9'hB4][3];
        s2_toExuData_1_1_vpu_fpu_isFoldTo1_8 = _RANDOM[9'hB4][4];
        s2_toExuData_1_1_vpu_vuopIdx = _RANDOM[9'hB4][13:7];
        s2_toExuData_1_1_vpu_lastUop = _RANDOM[9'hB4][14];
        s2_toExuData_1_1_vpu_isNarrow = _RANDOM[9'hB8][30];
        s2_toExuData_1_1_vpu_isDstMask = _RANDOM[9'hB8][31];
        s2_toExuData_1_1_dataSources_0_value = _RANDOM[9'hB9][8:5];
        s2_toExuData_1_1_dataSources_1_value = _RANDOM[9'hB9][12:9];
        s2_toExuData_1_1_dataSources_2_value = _RANDOM[9'hB9][16:13];
        s2_toExuData_1_1_dataSources_3_value = _RANDOM[9'hB9][20:17];
        s2_toExuData_1_1_dataSources_4_value = _RANDOM[9'hB9][24:21];
        s2_toExuData_1_0_fuType = {_RANDOM[9'hCD][31:26], _RANDOM[9'hCE][28:0]};
        s2_toExuData_1_0_fuOpType = {_RANDOM[9'hCE][31:29], _RANDOM[9'hCF][5:0]};
        s2_toExuData_1_0_src_0 =
          {_RANDOM[9'hCF][31:6],
           _RANDOM[9'hD0],
           _RANDOM[9'hD1],
           _RANDOM[9'hD2],
           _RANDOM[9'hD3][5:0]};
        s2_toExuData_1_0_src_1 =
          {_RANDOM[9'hD3][31:6],
           _RANDOM[9'hD4],
           _RANDOM[9'hD5],
           _RANDOM[9'hD6],
           _RANDOM[9'hD7][5:0]};
        s2_toExuData_1_0_src_2 =
          {_RANDOM[9'hD7][31:6],
           _RANDOM[9'hD8],
           _RANDOM[9'hD9],
           _RANDOM[9'hDA],
           _RANDOM[9'hDB][5:0]};
        s2_toExuData_1_0_src_3 =
          {_RANDOM[9'hDB][31:6],
           _RANDOM[9'hDC],
           _RANDOM[9'hDD],
           _RANDOM[9'hDE],
           _RANDOM[9'hDF][5:0]};
        s2_toExuData_1_0_src_4 =
          {_RANDOM[9'hDF][31:6],
           _RANDOM[9'hE0],
           _RANDOM[9'hE1],
           _RANDOM[9'hE2],
           _RANDOM[9'hE3][5:0]};
        s2_toExuData_1_0_robIdx_flag = _RANDOM[9'hE5][6];
        s2_toExuData_1_0_robIdx_value = _RANDOM[9'hE5][12:7];
        s2_toExuData_1_0_pdest = _RANDOM[9'hE5][25:18];
        s2_toExuData_1_0_vecWen = _RANDOM[9'hE5][26];
        s2_toExuData_1_0_v0Wen = _RANDOM[9'hE5][27];
        s2_toExuData_1_0_fpu_wflags = _RANDOM[9'hE5][30];
        s2_toExuData_1_0_vpu_vma = _RANDOM[9'hE6][7];
        s2_toExuData_1_0_vpu_vta = _RANDOM[9'hE6][8];
        s2_toExuData_1_0_vpu_vsew = _RANDOM[9'hE6][10:9];
        s2_toExuData_1_0_vpu_vlmul = _RANDOM[9'hE6][13:11];
        s2_toExuData_1_0_vpu_vm = _RANDOM[9'hE6][22];
        s2_toExuData_1_0_vpu_vstart = _RANDOM[9'hE6][30:23];
        s2_toExuData_1_0_vpu_vuopIdx = _RANDOM[9'hE7][17:11];
        s2_toExuData_1_0_vpu_isExt = _RANDOM[9'hEC][1];
        s2_toExuData_1_0_vpu_isNarrow = _RANDOM[9'hEC][2];
        s2_toExuData_1_0_vpu_isDstMask = _RANDOM[9'hEC][3];
        s2_toExuData_1_0_vpu_isOpMask = _RANDOM[9'hEC][4];
        s2_toExuData_1_0_dataSources_0_value = _RANDOM[9'hEC][12:9];
        s2_toExuData_1_0_dataSources_1_value = _RANDOM[9'hEC][16:13];
        s2_toExuData_1_0_dataSources_2_value = _RANDOM[9'hEC][20:17];
        s2_toExuData_1_0_dataSources_3_value = _RANDOM[9'hEC][24:21];
        s2_toExuData_1_0_dataSources_4_value = _RANDOM[9'hEC][28:25];
        s2_toExuData_0_1_fuType =
          {_RANDOM[9'h100][31:30], _RANDOM[9'h101], _RANDOM[9'h102][0]};
        s2_toExuData_0_1_fuOpType = _RANDOM[9'h102][9:1];
        s2_toExuData_0_1_src_0 =
          {_RANDOM[9'h102][31:10],
           _RANDOM[9'h103],
           _RANDOM[9'h104],
           _RANDOM[9'h105],
           _RANDOM[9'h106][9:0]};
        s2_toExuData_0_1_src_1 =
          {_RANDOM[9'h106][31:10],
           _RANDOM[9'h107],
           _RANDOM[9'h108],
           _RANDOM[9'h109],
           _RANDOM[9'h10A][9:0]};
        s2_toExuData_0_1_src_2 =
          {_RANDOM[9'h10A][31:10],
           _RANDOM[9'h10B],
           _RANDOM[9'h10C],
           _RANDOM[9'h10D],
           _RANDOM[9'h10E][9:0]};
        s2_toExuData_0_1_src_3 =
          {_RANDOM[9'h10E][31:10],
           _RANDOM[9'h10F],
           _RANDOM[9'h110],
           _RANDOM[9'h111],
           _RANDOM[9'h112][9:0]};
        s2_toExuData_0_1_src_4 =
          {_RANDOM[9'h112][31:10],
           _RANDOM[9'h113],
           _RANDOM[9'h114],
           _RANDOM[9'h115],
           _RANDOM[9'h116][9:0]};
        s2_toExuData_0_1_robIdx_flag = _RANDOM[9'h118][10];
        s2_toExuData_0_1_robIdx_value = _RANDOM[9'h118][16:11];
        s2_toExuData_0_1_pdest = _RANDOM[9'h118][29:22];
        s2_toExuData_0_1_rfWen = _RANDOM[9'h118][30];
        s2_toExuData_0_1_fpWen = _RANDOM[9'h118][31];
        s2_toExuData_0_1_vecWen = _RANDOM[9'h119][0];
        s2_toExuData_0_1_v0Wen = _RANDOM[9'h119][1];
        s2_toExuData_0_1_vlWen = _RANDOM[9'h119][2];
        s2_toExuData_0_1_fpu_wflags = _RANDOM[9'h119][5];
        s2_toExuData_0_1_vpu_vma = _RANDOM[9'h119][14];
        s2_toExuData_0_1_vpu_vta = _RANDOM[9'h119][15];
        s2_toExuData_0_1_vpu_vsew = _RANDOM[9'h119][17:16];
        s2_toExuData_0_1_vpu_vlmul = _RANDOM[9'h119][20:18];
        s2_toExuData_0_1_vpu_vm = _RANDOM[9'h119][29];
        s2_toExuData_0_1_vpu_vstart = {_RANDOM[9'h119][31:30], _RANDOM[9'h11A][5:0]};
        s2_toExuData_0_1_vpu_fpu_isFoldTo1_2 = _RANDOM[9'h11A][13];
        s2_toExuData_0_1_vpu_fpu_isFoldTo1_4 = _RANDOM[9'h11A][14];
        s2_toExuData_0_1_vpu_fpu_isFoldTo1_8 = _RANDOM[9'h11A][15];
        s2_toExuData_0_1_vpu_vuopIdx = _RANDOM[9'h11A][24:18];
        s2_toExuData_0_1_vpu_lastUop = _RANDOM[9'h11A][25];
        s2_toExuData_0_1_vpu_isNarrow = _RANDOM[9'h11F][9];
        s2_toExuData_0_1_vpu_isDstMask = _RANDOM[9'h11F][10];
        s2_toExuData_0_1_dataSources_0_value = _RANDOM[9'h11F][19:16];
        s2_toExuData_0_1_dataSources_1_value = _RANDOM[9'h11F][23:20];
        s2_toExuData_0_1_dataSources_2_value = _RANDOM[9'h11F][27:24];
        s2_toExuData_0_1_dataSources_3_value = _RANDOM[9'h11F][31:28];
        s2_toExuData_0_1_dataSources_4_value = _RANDOM[9'h120][3:0];
        s2_toExuData_0_0_fuType = {_RANDOM[9'h134][31:5], _RANDOM[9'h135][7:0]};
        s2_toExuData_0_0_fuOpType = _RANDOM[9'h135][16:8];
        s2_toExuData_0_0_src_0 =
          {_RANDOM[9'h135][31:17],
           _RANDOM[9'h136],
           _RANDOM[9'h137],
           _RANDOM[9'h138],
           _RANDOM[9'h139][16:0]};
        s2_toExuData_0_0_src_1 =
          {_RANDOM[9'h139][31:17],
           _RANDOM[9'h13A],
           _RANDOM[9'h13B],
           _RANDOM[9'h13C],
           _RANDOM[9'h13D][16:0]};
        s2_toExuData_0_0_src_2 =
          {_RANDOM[9'h13D][31:17],
           _RANDOM[9'h13E],
           _RANDOM[9'h13F],
           _RANDOM[9'h140],
           _RANDOM[9'h141][16:0]};
        s2_toExuData_0_0_src_3 =
          {_RANDOM[9'h141][31:17],
           _RANDOM[9'h142],
           _RANDOM[9'h143],
           _RANDOM[9'h144],
           _RANDOM[9'h145][16:0]};
        s2_toExuData_0_0_src_4 =
          {_RANDOM[9'h145][31:17],
           _RANDOM[9'h146],
           _RANDOM[9'h147],
           _RANDOM[9'h148],
           _RANDOM[9'h149][16:0]};
        s2_toExuData_0_0_robIdx_flag = _RANDOM[9'h14B][17];
        s2_toExuData_0_0_robIdx_value = _RANDOM[9'h14B][23:18];
        s2_toExuData_0_0_pdest = {_RANDOM[9'h14B][31:29], _RANDOM[9'h14C][4:0]};
        s2_toExuData_0_0_vecWen = _RANDOM[9'h14C][5];
        s2_toExuData_0_0_v0Wen = _RANDOM[9'h14C][6];
        s2_toExuData_0_0_fpu_wflags = _RANDOM[9'h14C][9];
        s2_toExuData_0_0_vpu_vma = _RANDOM[9'h14C][18];
        s2_toExuData_0_0_vpu_vta = _RANDOM[9'h14C][19];
        s2_toExuData_0_0_vpu_vsew = _RANDOM[9'h14C][21:20];
        s2_toExuData_0_0_vpu_vlmul = _RANDOM[9'h14C][24:22];
        s2_toExuData_0_0_vpu_vm = _RANDOM[9'h14D][1];
        s2_toExuData_0_0_vpu_vstart = _RANDOM[9'h14D][9:2];
        s2_toExuData_0_0_vpu_vuopIdx = _RANDOM[9'h14D][28:22];
        s2_toExuData_0_0_vpu_isExt = _RANDOM[9'h152][12];
        s2_toExuData_0_0_vpu_isNarrow = _RANDOM[9'h152][13];
        s2_toExuData_0_0_vpu_isDstMask = _RANDOM[9'h152][14];
        s2_toExuData_0_0_vpu_isOpMask = _RANDOM[9'h152][15];
        s2_toExuData_0_0_dataSources_0_value = _RANDOM[9'h152][23:20];
        s2_toExuData_0_0_dataSources_1_value = _RANDOM[9'h152][27:24];
        s2_toExuData_0_0_dataSources_2_value = _RANDOM[9'h152][31:28];
        s2_toExuData_0_0_dataSources_3_value = _RANDOM[9'h153][3:0];
        s2_toExuData_0_0_dataSources_4_value = _RANDOM[9'h153][7:4];
        s2_flush_next_valid_last_REG = _RANDOM[9'h167][9];
        s2_flush_next_bits_r_robIdx_flag = _RANDOM[9'h167][11];
        s2_flush_next_bits_r_robIdx_value = _RANDOM[9'h167][17:12];
        s2_flush_next_bits_r_level = _RANDOM[9'h167][26];
        s2_flush_next_valid_last_REG_1 = _RANDOM[9'h176][6];
        s2_flush_next_bits_r_1_robIdx_flag = _RANDOM[9'h176][8];
        s2_flush_next_bits_r_1_robIdx_value = _RANDOM[9'h176][14:9];
        s2_flush_next_bits_r_1_level = _RANDOM[9'h176][23];
        s2_flush_next_valid_last_REG_2 = _RANDOM[9'h185][3];
        s2_flush_next_bits_r_2_robIdx_flag = _RANDOM[9'h185][5];
        s2_flush_next_bits_r_2_robIdx_value = _RANDOM[9'h185][11:6];
        s2_flush_next_bits_r_2_level = _RANDOM[9'h185][20];
        s2_flush_next_valid_last_REG_3 = _RANDOM[9'h194][0];
        s2_flush_next_bits_r_3_robIdx_flag = _RANDOM[9'h194][2];
        s2_flush_next_bits_r_3_robIdx_value = _RANDOM[9'h194][8:3];
        s2_flush_next_bits_r_3_level = _RANDOM[9'h194][17];
        s2_flush_next_valid_last_REG_4 = _RANDOM[9'h1A2][29];
        s2_flush_next_bits_r_4_robIdx_flag = _RANDOM[9'h1A2][31];
        s2_flush_next_bits_r_4_robIdx_value = _RANDOM[9'h1A3][5:0];
        s2_flush_next_bits_r_4_level = _RANDOM[9'h1A3][14];
        s2_flush_next_valid_last_REG_5 = _RANDOM[9'h1B1][26];
        s2_flush_next_bits_r_5_robIdx_flag = _RANDOM[9'h1B1][28];
        s2_flush_next_bits_r_5_robIdx_value =
          {_RANDOM[9'h1B1][31:29], _RANDOM[9'h1B2][2:0]};
        s2_flush_next_bits_r_5_level = _RANDOM[9'h1B2][11];
        s2_flush_next_valid_last_REG_6 = _RANDOM[9'h1C0][23];
        s2_flush_next_bits_r_6_robIdx_flag = _RANDOM[9'h1C0][25];
        s2_flush_next_bits_r_6_robIdx_value = _RANDOM[9'h1C0][31:26];
        s2_flush_next_bits_r_6_level = _RANDOM[9'h1C1][8];
        r_1_imm = {_RANDOM[9'h1D0][31:24], _RANDOM[9'h1D1][23:0]};
        r_1_immType = _RANDOM[9'h1D1][27:24];
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        s2_flush_next_valid_last_REG = 1'h0;
        s2_flush_next_valid_last_REG_1 = 1'h0;
        s2_flush_next_valid_last_REG_2 = 1'h0;
        s2_flush_next_valid_last_REG_3 = 1'h0;
        s2_flush_next_valid_last_REG_4 = 1'h0;
        s2_flush_next_valid_last_REG_5 = 1'h0;
        s2_flush_next_valid_last_REG_6 = 1'h0;
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_toVfArithExu_2_0_valid = s2_toExuValid_2_0;
  assign io_toVfArithExu_2_0_bits_fuType = s2_toExuData_2_0_fuType;
  assign io_toVfArithExu_2_0_bits_fuOpType = s2_toExuData_2_0_fuOpType;
  assign io_toVfArithExu_2_0_bits_src_0 = s2_toExuData_2_0_src_0;
  assign io_toVfArithExu_2_0_bits_src_1 = s2_toExuData_2_0_src_1;
  assign io_toVfArithExu_2_0_bits_src_2 = s2_toExuData_2_0_src_2;
  assign io_toVfArithExu_2_0_bits_src_3 = s2_toExuData_2_0_src_3;
  assign io_toVfArithExu_2_0_bits_src_4 = s2_toExuData_2_0_src_4;
  assign io_toVfArithExu_2_0_bits_robIdx_flag = s2_toExuData_2_0_robIdx_flag;
  assign io_toVfArithExu_2_0_bits_robIdx_value = s2_toExuData_2_0_robIdx_value;
  assign io_toVfArithExu_2_0_bits_pdest = s2_toExuData_2_0_pdest;
  assign io_toVfArithExu_2_0_bits_vecWen = s2_toExuData_2_0_vecWen;
  assign io_toVfArithExu_2_0_bits_v0Wen = s2_toExuData_2_0_v0Wen;
  assign io_toVfArithExu_2_0_bits_fpu_wflags = s2_toExuData_2_0_fpu_wflags;
  assign io_toVfArithExu_2_0_bits_vpu_vma = s2_toExuData_2_0_vpu_vma;
  assign io_toVfArithExu_2_0_bits_vpu_vta = s2_toExuData_2_0_vpu_vta;
  assign io_toVfArithExu_2_0_bits_vpu_vsew = s2_toExuData_2_0_vpu_vsew;
  assign io_toVfArithExu_2_0_bits_vpu_vlmul = s2_toExuData_2_0_vpu_vlmul;
  assign io_toVfArithExu_2_0_bits_vpu_vm = s2_toExuData_2_0_vpu_vm;
  assign io_toVfArithExu_2_0_bits_vpu_vstart = s2_toExuData_2_0_vpu_vstart;
  assign io_toVfArithExu_2_0_bits_vpu_vuopIdx = s2_toExuData_2_0_vpu_vuopIdx;
  assign io_toVfArithExu_2_0_bits_vpu_isExt = s2_toExuData_2_0_vpu_isExt;
  assign io_toVfArithExu_2_0_bits_vpu_isNarrow = s2_toExuData_2_0_vpu_isNarrow;
  assign io_toVfArithExu_2_0_bits_vpu_isDstMask = s2_toExuData_2_0_vpu_isDstMask;
  assign io_toVfArithExu_2_0_bits_vpu_isOpMask = s2_toExuData_2_0_vpu_isOpMask;
  assign io_toVfArithExu_2_0_bits_dataSources_0_value =
    s2_toExuData_2_0_dataSources_0_value;
  assign io_toVfArithExu_2_0_bits_dataSources_1_value =
    s2_toExuData_2_0_dataSources_1_value;
  assign io_toVfArithExu_2_0_bits_dataSources_2_value =
    s2_toExuData_2_0_dataSources_2_value;
  assign io_toVfArithExu_2_0_bits_dataSources_3_value =
    s2_toExuData_2_0_dataSources_3_value;
  assign io_toVfArithExu_2_0_bits_dataSources_4_value =
    s2_toExuData_2_0_dataSources_4_value;
  assign io_toVfArithExu_1_1_valid = s2_toExuValid_1_1;
  assign io_toVfArithExu_1_1_bits_fuType = s2_toExuData_1_1_fuType;
  assign io_toVfArithExu_1_1_bits_fuOpType = s2_toExuData_1_1_fuOpType;
  assign io_toVfArithExu_1_1_bits_src_0 = s2_toExuData_1_1_src_0;
  assign io_toVfArithExu_1_1_bits_src_1 = s2_toExuData_1_1_src_1;
  assign io_toVfArithExu_1_1_bits_src_2 = s2_toExuData_1_1_src_2;
  assign io_toVfArithExu_1_1_bits_src_3 = s2_toExuData_1_1_src_3;
  assign io_toVfArithExu_1_1_bits_src_4 = s2_toExuData_1_1_src_4;
  assign io_toVfArithExu_1_1_bits_robIdx_flag = s2_toExuData_1_1_robIdx_flag;
  assign io_toVfArithExu_1_1_bits_robIdx_value = s2_toExuData_1_1_robIdx_value;
  assign io_toVfArithExu_1_1_bits_pdest = s2_toExuData_1_1_pdest;
  assign io_toVfArithExu_1_1_bits_fpWen = s2_toExuData_1_1_fpWen;
  assign io_toVfArithExu_1_1_bits_vecWen = s2_toExuData_1_1_vecWen;
  assign io_toVfArithExu_1_1_bits_v0Wen = s2_toExuData_1_1_v0Wen;
  assign io_toVfArithExu_1_1_bits_fpu_wflags = s2_toExuData_1_1_fpu_wflags;
  assign io_toVfArithExu_1_1_bits_vpu_vma = s2_toExuData_1_1_vpu_vma;
  assign io_toVfArithExu_1_1_bits_vpu_vta = s2_toExuData_1_1_vpu_vta;
  assign io_toVfArithExu_1_1_bits_vpu_vsew = s2_toExuData_1_1_vpu_vsew;
  assign io_toVfArithExu_1_1_bits_vpu_vlmul = s2_toExuData_1_1_vpu_vlmul;
  assign io_toVfArithExu_1_1_bits_vpu_vm = s2_toExuData_1_1_vpu_vm;
  assign io_toVfArithExu_1_1_bits_vpu_vstart = s2_toExuData_1_1_vpu_vstart;
  assign io_toVfArithExu_1_1_bits_vpu_fpu_isFoldTo1_2 =
    s2_toExuData_1_1_vpu_fpu_isFoldTo1_2;
  assign io_toVfArithExu_1_1_bits_vpu_fpu_isFoldTo1_4 =
    s2_toExuData_1_1_vpu_fpu_isFoldTo1_4;
  assign io_toVfArithExu_1_1_bits_vpu_fpu_isFoldTo1_8 =
    s2_toExuData_1_1_vpu_fpu_isFoldTo1_8;
  assign io_toVfArithExu_1_1_bits_vpu_vuopIdx = s2_toExuData_1_1_vpu_vuopIdx;
  assign io_toVfArithExu_1_1_bits_vpu_lastUop = s2_toExuData_1_1_vpu_lastUop;
  assign io_toVfArithExu_1_1_bits_vpu_isNarrow = s2_toExuData_1_1_vpu_isNarrow;
  assign io_toVfArithExu_1_1_bits_vpu_isDstMask = s2_toExuData_1_1_vpu_isDstMask;
  assign io_toVfArithExu_1_1_bits_dataSources_0_value =
    s2_toExuData_1_1_dataSources_0_value;
  assign io_toVfArithExu_1_1_bits_dataSources_1_value =
    s2_toExuData_1_1_dataSources_1_value;
  assign io_toVfArithExu_1_1_bits_dataSources_2_value =
    s2_toExuData_1_1_dataSources_2_value;
  assign io_toVfArithExu_1_1_bits_dataSources_3_value =
    s2_toExuData_1_1_dataSources_3_value;
  assign io_toVfArithExu_1_1_bits_dataSources_4_value =
    s2_toExuData_1_1_dataSources_4_value;
  assign io_toVfArithExu_1_0_valid = s2_toExuValid_1_0;
  assign io_toVfArithExu_1_0_bits_fuType = s2_toExuData_1_0_fuType;
  assign io_toVfArithExu_1_0_bits_fuOpType = s2_toExuData_1_0_fuOpType;
  assign io_toVfArithExu_1_0_bits_src_0 = s2_toExuData_1_0_src_0;
  assign io_toVfArithExu_1_0_bits_src_1 = s2_toExuData_1_0_src_1;
  assign io_toVfArithExu_1_0_bits_src_2 = s2_toExuData_1_0_src_2;
  assign io_toVfArithExu_1_0_bits_src_3 = s2_toExuData_1_0_src_3;
  assign io_toVfArithExu_1_0_bits_src_4 = s2_toExuData_1_0_src_4;
  assign io_toVfArithExu_1_0_bits_robIdx_flag = s2_toExuData_1_0_robIdx_flag;
  assign io_toVfArithExu_1_0_bits_robIdx_value = s2_toExuData_1_0_robIdx_value;
  assign io_toVfArithExu_1_0_bits_pdest = s2_toExuData_1_0_pdest;
  assign io_toVfArithExu_1_0_bits_vecWen = s2_toExuData_1_0_vecWen;
  assign io_toVfArithExu_1_0_bits_v0Wen = s2_toExuData_1_0_v0Wen;
  assign io_toVfArithExu_1_0_bits_fpu_wflags = s2_toExuData_1_0_fpu_wflags;
  assign io_toVfArithExu_1_0_bits_vpu_vma = s2_toExuData_1_0_vpu_vma;
  assign io_toVfArithExu_1_0_bits_vpu_vta = s2_toExuData_1_0_vpu_vta;
  assign io_toVfArithExu_1_0_bits_vpu_vsew = s2_toExuData_1_0_vpu_vsew;
  assign io_toVfArithExu_1_0_bits_vpu_vlmul = s2_toExuData_1_0_vpu_vlmul;
  assign io_toVfArithExu_1_0_bits_vpu_vm = s2_toExuData_1_0_vpu_vm;
  assign io_toVfArithExu_1_0_bits_vpu_vstart = s2_toExuData_1_0_vpu_vstart;
  assign io_toVfArithExu_1_0_bits_vpu_vuopIdx = s2_toExuData_1_0_vpu_vuopIdx;
  assign io_toVfArithExu_1_0_bits_vpu_isExt = s2_toExuData_1_0_vpu_isExt;
  assign io_toVfArithExu_1_0_bits_vpu_isNarrow = s2_toExuData_1_0_vpu_isNarrow;
  assign io_toVfArithExu_1_0_bits_vpu_isDstMask = s2_toExuData_1_0_vpu_isDstMask;
  assign io_toVfArithExu_1_0_bits_vpu_isOpMask = s2_toExuData_1_0_vpu_isOpMask;
  assign io_toVfArithExu_1_0_bits_dataSources_0_value =
    s2_toExuData_1_0_dataSources_0_value;
  assign io_toVfArithExu_1_0_bits_dataSources_1_value =
    s2_toExuData_1_0_dataSources_1_value;
  assign io_toVfArithExu_1_0_bits_dataSources_2_value =
    s2_toExuData_1_0_dataSources_2_value;
  assign io_toVfArithExu_1_0_bits_dataSources_3_value =
    s2_toExuData_1_0_dataSources_3_value;
  assign io_toVfArithExu_1_0_bits_dataSources_4_value =
    s2_toExuData_1_0_dataSources_4_value;
  assign io_toVfArithExu_0_1_valid = s2_toExuValid_0_1;
  assign io_toVfArithExu_0_1_bits_fuType = s2_toExuData_0_1_fuType;
  assign io_toVfArithExu_0_1_bits_fuOpType = s2_toExuData_0_1_fuOpType;
  assign io_toVfArithExu_0_1_bits_src_0 = s2_toExuData_0_1_src_0;
  assign io_toVfArithExu_0_1_bits_src_1 = s2_toExuData_0_1_src_1;
  assign io_toVfArithExu_0_1_bits_src_2 = s2_toExuData_0_1_src_2;
  assign io_toVfArithExu_0_1_bits_src_3 = s2_toExuData_0_1_src_3;
  assign io_toVfArithExu_0_1_bits_src_4 = s2_toExuData_0_1_src_4;
  assign io_toVfArithExu_0_1_bits_robIdx_flag = s2_toExuData_0_1_robIdx_flag;
  assign io_toVfArithExu_0_1_bits_robIdx_value = s2_toExuData_0_1_robIdx_value;
  assign io_toVfArithExu_0_1_bits_pdest = s2_toExuData_0_1_pdest;
  assign io_toVfArithExu_0_1_bits_rfWen = s2_toExuData_0_1_rfWen;
  assign io_toVfArithExu_0_1_bits_fpWen = s2_toExuData_0_1_fpWen;
  assign io_toVfArithExu_0_1_bits_vecWen = s2_toExuData_0_1_vecWen;
  assign io_toVfArithExu_0_1_bits_v0Wen = s2_toExuData_0_1_v0Wen;
  assign io_toVfArithExu_0_1_bits_vlWen = s2_toExuData_0_1_vlWen;
  assign io_toVfArithExu_0_1_bits_fpu_wflags = s2_toExuData_0_1_fpu_wflags;
  assign io_toVfArithExu_0_1_bits_vpu_vma = s2_toExuData_0_1_vpu_vma;
  assign io_toVfArithExu_0_1_bits_vpu_vta = s2_toExuData_0_1_vpu_vta;
  assign io_toVfArithExu_0_1_bits_vpu_vsew = s2_toExuData_0_1_vpu_vsew;
  assign io_toVfArithExu_0_1_bits_vpu_vlmul = s2_toExuData_0_1_vpu_vlmul;
  assign io_toVfArithExu_0_1_bits_vpu_vm = s2_toExuData_0_1_vpu_vm;
  assign io_toVfArithExu_0_1_bits_vpu_vstart = s2_toExuData_0_1_vpu_vstart;
  assign io_toVfArithExu_0_1_bits_vpu_fpu_isFoldTo1_2 =
    s2_toExuData_0_1_vpu_fpu_isFoldTo1_2;
  assign io_toVfArithExu_0_1_bits_vpu_fpu_isFoldTo1_4 =
    s2_toExuData_0_1_vpu_fpu_isFoldTo1_4;
  assign io_toVfArithExu_0_1_bits_vpu_fpu_isFoldTo1_8 =
    s2_toExuData_0_1_vpu_fpu_isFoldTo1_8;
  assign io_toVfArithExu_0_1_bits_vpu_vuopIdx = s2_toExuData_0_1_vpu_vuopIdx;
  assign io_toVfArithExu_0_1_bits_vpu_lastUop = s2_toExuData_0_1_vpu_lastUop;
  assign io_toVfArithExu_0_1_bits_vpu_isNarrow = s2_toExuData_0_1_vpu_isNarrow;
  assign io_toVfArithExu_0_1_bits_vpu_isDstMask = s2_toExuData_0_1_vpu_isDstMask;
  assign io_toVfArithExu_0_1_bits_dataSources_0_value =
    s2_toExuData_0_1_dataSources_0_value;
  assign io_toVfArithExu_0_1_bits_dataSources_1_value =
    s2_toExuData_0_1_dataSources_1_value;
  assign io_toVfArithExu_0_1_bits_dataSources_2_value =
    s2_toExuData_0_1_dataSources_2_value;
  assign io_toVfArithExu_0_1_bits_dataSources_3_value =
    s2_toExuData_0_1_dataSources_3_value;
  assign io_toVfArithExu_0_1_bits_dataSources_4_value =
    s2_toExuData_0_1_dataSources_4_value;
  assign io_toVfArithExu_0_0_valid = s2_toExuValid_0_0;
  assign io_toVfArithExu_0_0_bits_fuType = s2_toExuData_0_0_fuType;
  assign io_toVfArithExu_0_0_bits_fuOpType = s2_toExuData_0_0_fuOpType;
  assign io_toVfArithExu_0_0_bits_src_0 = s2_toExuData_0_0_src_0;
  assign io_toVfArithExu_0_0_bits_src_1 = s2_toExuData_0_0_src_1;
  assign io_toVfArithExu_0_0_bits_src_2 = s2_toExuData_0_0_src_2;
  assign io_toVfArithExu_0_0_bits_src_3 = s2_toExuData_0_0_src_3;
  assign io_toVfArithExu_0_0_bits_src_4 = s2_toExuData_0_0_src_4;
  assign io_toVfArithExu_0_0_bits_robIdx_flag = s2_toExuData_0_0_robIdx_flag;
  assign io_toVfArithExu_0_0_bits_robIdx_value = s2_toExuData_0_0_robIdx_value;
  assign io_toVfArithExu_0_0_bits_pdest = s2_toExuData_0_0_pdest;
  assign io_toVfArithExu_0_0_bits_vecWen = s2_toExuData_0_0_vecWen;
  assign io_toVfArithExu_0_0_bits_v0Wen = s2_toExuData_0_0_v0Wen;
  assign io_toVfArithExu_0_0_bits_fpu_wflags = s2_toExuData_0_0_fpu_wflags;
  assign io_toVfArithExu_0_0_bits_vpu_vma = s2_toExuData_0_0_vpu_vma;
  assign io_toVfArithExu_0_0_bits_vpu_vta = s2_toExuData_0_0_vpu_vta;
  assign io_toVfArithExu_0_0_bits_vpu_vsew = s2_toExuData_0_0_vpu_vsew;
  assign io_toVfArithExu_0_0_bits_vpu_vlmul = s2_toExuData_0_0_vpu_vlmul;
  assign io_toVfArithExu_0_0_bits_vpu_vm = s2_toExuData_0_0_vpu_vm;
  assign io_toVfArithExu_0_0_bits_vpu_vstart = s2_toExuData_0_0_vpu_vstart;
  assign io_toVfArithExu_0_0_bits_vpu_vuopIdx = s2_toExuData_0_0_vpu_vuopIdx;
  assign io_toVfArithExu_0_0_bits_vpu_isExt = s2_toExuData_0_0_vpu_isExt;
  assign io_toVfArithExu_0_0_bits_vpu_isNarrow = s2_toExuData_0_0_vpu_isNarrow;
  assign io_toVfArithExu_0_0_bits_vpu_isDstMask = s2_toExuData_0_0_vpu_isDstMask;
  assign io_toVfArithExu_0_0_bits_vpu_isOpMask = s2_toExuData_0_0_vpu_isOpMask;
  assign io_toVfArithExu_0_0_bits_dataSources_0_value =
    s2_toExuData_0_0_dataSources_0_value;
  assign io_toVfArithExu_0_0_bits_dataSources_1_value =
    s2_toExuData_0_0_dataSources_1_value;
  assign io_toVfArithExu_0_0_bits_dataSources_2_value =
    s2_toExuData_0_0_dataSources_2_value;
  assign io_toVfArithExu_0_0_bits_dataSources_3_value =
    s2_toExuData_0_0_dataSources_3_value;
  assign io_toVfArithExu_0_0_bits_dataSources_4_value =
    s2_toExuData_0_0_dataSources_4_value;
  assign io_toVecMemExu_1_0_valid = s2_toExuValid_4_0;
  assign io_toVecMemExu_1_0_bits_fuType = s2_toExuData_4_0_fuType;
  assign io_toVecMemExu_1_0_bits_fuOpType = s2_toExuData_4_0_fuOpType;
  assign io_toVecMemExu_1_0_bits_src_0 = s2_toExuData_4_0_src_0;
  assign io_toVecMemExu_1_0_bits_src_1 = s2_toExuData_4_0_src_1;
  assign io_toVecMemExu_1_0_bits_src_2 = s2_toExuData_4_0_src_2;
  assign io_toVecMemExu_1_0_bits_src_3 = s2_toExuData_4_0_src_3;
  assign io_toVecMemExu_1_0_bits_src_4 = s2_toExuData_4_0_src_4;
  assign io_toVecMemExu_1_0_bits_robIdx_flag = s2_toExuData_4_0_robIdx_flag;
  assign io_toVecMemExu_1_0_bits_robIdx_value = s2_toExuData_4_0_robIdx_value;
  assign io_toVecMemExu_1_0_bits_pdest = s2_toExuData_4_0_pdest;
  assign io_toVecMemExu_1_0_bits_vecWen = s2_toExuData_4_0_vecWen;
  assign io_toVecMemExu_1_0_bits_v0Wen = s2_toExuData_4_0_v0Wen;
  assign io_toVecMemExu_1_0_bits_vlWen = s2_toExuData_4_0_vlWen;
  assign io_toVecMemExu_1_0_bits_vpu_vma = s2_toExuData_4_0_vpu_vma;
  assign io_toVecMemExu_1_0_bits_vpu_vta = s2_toExuData_4_0_vpu_vta;
  assign io_toVecMemExu_1_0_bits_vpu_vsew = s2_toExuData_4_0_vpu_vsew;
  assign io_toVecMemExu_1_0_bits_vpu_vlmul = s2_toExuData_4_0_vpu_vlmul;
  assign io_toVecMemExu_1_0_bits_vpu_vm = s2_toExuData_4_0_vpu_vm;
  assign io_toVecMemExu_1_0_bits_vpu_vstart = s2_toExuData_4_0_vpu_vstart;
  assign io_toVecMemExu_1_0_bits_vpu_vuopIdx = s2_toExuData_4_0_vpu_vuopIdx;
  assign io_toVecMemExu_1_0_bits_vpu_lastUop = s2_toExuData_4_0_vpu_lastUop;
  assign io_toVecMemExu_1_0_bits_vpu_vmask = s2_toExuData_4_0_vpu_vmask;
  assign io_toVecMemExu_1_0_bits_vpu_nf = s2_toExuData_4_0_vpu_nf;
  assign io_toVecMemExu_1_0_bits_vpu_veew = s2_toExuData_4_0_vpu_veew;
  assign io_toVecMemExu_1_0_bits_vpu_isVleff = s2_toExuData_4_0_vpu_isVleff;
  assign io_toVecMemExu_1_0_bits_ftqIdx_flag = s2_toExuData_4_0_ftqIdx_flag;
  assign io_toVecMemExu_1_0_bits_ftqIdx_value = s2_toExuData_4_0_ftqIdx_value;
  assign io_toVecMemExu_1_0_bits_ftqOffset = s2_toExuData_4_0_ftqOffset;
  assign io_toVecMemExu_1_0_bits_numLsElem = s2_toExuData_4_0_numLsElem;
  assign io_toVecMemExu_1_0_bits_sqIdx_flag = s2_toExuData_4_0_sqIdx_flag;
  assign io_toVecMemExu_1_0_bits_sqIdx_value = s2_toExuData_4_0_sqIdx_value;
  assign io_toVecMemExu_1_0_bits_lqIdx_flag = s2_toExuData_4_0_lqIdx_flag;
  assign io_toVecMemExu_1_0_bits_lqIdx_value = s2_toExuData_4_0_lqIdx_value;
  assign io_toVecMemExu_1_0_bits_dataSources_0_value =
    s2_toExuData_4_0_dataSources_0_value;
  assign io_toVecMemExu_1_0_bits_dataSources_1_value =
    s2_toExuData_4_0_dataSources_1_value;
  assign io_toVecMemExu_1_0_bits_dataSources_2_value =
    s2_toExuData_4_0_dataSources_2_value;
  assign io_toVecMemExu_1_0_bits_dataSources_3_value =
    s2_toExuData_4_0_dataSources_3_value;
  assign io_toVecMemExu_1_0_bits_dataSources_4_value =
    s2_toExuData_4_0_dataSources_4_value;
  assign io_toVecMemExu_0_0_valid = s2_toExuValid_3_0;
  assign io_toVecMemExu_0_0_bits_fuType = s2_toExuData_3_0_fuType;
  assign io_toVecMemExu_0_0_bits_fuOpType = s2_toExuData_3_0_fuOpType;
  assign io_toVecMemExu_0_0_bits_src_0 = s2_toExuData_3_0_src_0;
  assign io_toVecMemExu_0_0_bits_src_1 = s2_toExuData_3_0_src_1;
  assign io_toVecMemExu_0_0_bits_src_2 = s2_toExuData_3_0_src_2;
  assign io_toVecMemExu_0_0_bits_src_3 = s2_toExuData_3_0_src_3;
  assign io_toVecMemExu_0_0_bits_src_4 = s2_toExuData_3_0_src_4;
  assign io_toVecMemExu_0_0_bits_robIdx_flag = s2_toExuData_3_0_robIdx_flag;
  assign io_toVecMemExu_0_0_bits_robIdx_value = s2_toExuData_3_0_robIdx_value;
  assign io_toVecMemExu_0_0_bits_pdest = s2_toExuData_3_0_pdest;
  assign io_toVecMemExu_0_0_bits_vecWen = s2_toExuData_3_0_vecWen;
  assign io_toVecMemExu_0_0_bits_v0Wen = s2_toExuData_3_0_v0Wen;
  assign io_toVecMemExu_0_0_bits_vlWen = s2_toExuData_3_0_vlWen;
  assign io_toVecMemExu_0_0_bits_vpu_vma = s2_toExuData_3_0_vpu_vma;
  assign io_toVecMemExu_0_0_bits_vpu_vta = s2_toExuData_3_0_vpu_vta;
  assign io_toVecMemExu_0_0_bits_vpu_vsew = s2_toExuData_3_0_vpu_vsew;
  assign io_toVecMemExu_0_0_bits_vpu_vlmul = s2_toExuData_3_0_vpu_vlmul;
  assign io_toVecMemExu_0_0_bits_vpu_vm = s2_toExuData_3_0_vpu_vm;
  assign io_toVecMemExu_0_0_bits_vpu_vstart = s2_toExuData_3_0_vpu_vstart;
  assign io_toVecMemExu_0_0_bits_vpu_vuopIdx = s2_toExuData_3_0_vpu_vuopIdx;
  assign io_toVecMemExu_0_0_bits_vpu_lastUop = s2_toExuData_3_0_vpu_lastUop;
  assign io_toVecMemExu_0_0_bits_vpu_vmask = s2_toExuData_3_0_vpu_vmask;
  assign io_toVecMemExu_0_0_bits_vpu_nf = s2_toExuData_3_0_vpu_nf;
  assign io_toVecMemExu_0_0_bits_vpu_veew = s2_toExuData_3_0_vpu_veew;
  assign io_toVecMemExu_0_0_bits_vpu_isVleff = s2_toExuData_3_0_vpu_isVleff;
  assign io_toVecMemExu_0_0_bits_ftqIdx_flag = s2_toExuData_3_0_ftqIdx_flag;
  assign io_toVecMemExu_0_0_bits_ftqIdx_value = s2_toExuData_3_0_ftqIdx_value;
  assign io_toVecMemExu_0_0_bits_ftqOffset = s2_toExuData_3_0_ftqOffset;
  assign io_toVecMemExu_0_0_bits_numLsElem = s2_toExuData_3_0_numLsElem;
  assign io_toVecMemExu_0_0_bits_sqIdx_flag = s2_toExuData_3_0_sqIdx_flag;
  assign io_toVecMemExu_0_0_bits_sqIdx_value = s2_toExuData_3_0_sqIdx_value;
  assign io_toVecMemExu_0_0_bits_lqIdx_flag = s2_toExuData_3_0_lqIdx_flag;
  assign io_toVecMemExu_0_0_bits_lqIdx_value = s2_toExuData_3_0_lqIdx_value;
  assign io_toVecMemExu_0_0_bits_dataSources_0_value =
    s2_toExuData_3_0_dataSources_0_value;
  assign io_toVecMemExu_0_0_bits_dataSources_1_value =
    s2_toExuData_3_0_dataSources_1_value;
  assign io_toVecMemExu_0_0_bits_dataSources_2_value =
    s2_toExuData_3_0_dataSources_2_value;
  assign io_toVecMemExu_0_0_bits_dataSources_3_value =
    s2_toExuData_3_0_dataSources_3_value;
  assign io_toVecMemExu_0_0_bits_dataSources_4_value =
    s2_toExuData_3_0_dataSources_4_value;
  assign io_toVfIQOg2Resp_2_0_valid = s2_toExuValid_2_0;
  assign io_toVfIQOg2Resp_2_0_bits_resp =
    s2_toExuValid_2_0 & ~io_toVfArithExu_2_0_ready ? 2'h0 : 2'h3;
  assign io_toVfIQOg2Resp_1_1_valid = s2_toExuValid_1_1;
  assign io_toVfIQOg2Resp_1_0_valid = s2_toExuValid_1_0;
  assign io_toVfIQOg2Resp_1_0_bits_resp =
    s2_toExuValid_1_0 & ~io_toVfArithExu_1_0_ready ? 2'h0 : 2'h3;
  assign io_toVfIQOg2Resp_0_1_valid = s2_toExuValid_0_1;
  assign io_toVfIQOg2Resp_0_0_valid = s2_toExuValid_0_0;
  assign io_toVfIQOg2Resp_0_0_bits_resp =
    s2_toExuValid_0_0 & ~io_toVfArithExu_0_0_ready ? 2'h0 : 2'h3;
  assign io_toMemIQOg2Resp_1_0_valid = s2_toExuValid_4_0;
  assign io_toMemIQOg2Resp_1_0_bits_resp =
    {1'h0, ~(s2_toExuValid_4_0 & ~io_toVecMemExu_1_0_ready)};
  assign io_toMemIQOg2Resp_0_0_valid = s2_toExuValid_3_0;
  assign io_toMemIQOg2Resp_0_0_bits_resp =
    {1'h0, ~(s2_toExuValid_3_0 & ~io_toVecMemExu_0_0_ready)};
  assign io_toBypassNetworkImmInfo_1_imm = r_1_imm;
  assign io_toBypassNetworkImmInfo_1_immType = r_1_immType;
endmodule

